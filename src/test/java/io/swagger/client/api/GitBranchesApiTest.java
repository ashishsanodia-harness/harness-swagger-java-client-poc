/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.Error;
import io.swagger.client.model.Failure;
import io.swagger.client.model.ResponseDTOBoolean;
import io.swagger.client.model.ResponseDTOGitBranchList;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for GitBranchesApi
 */
@Ignore
public class GitBranchesApiTest {

    private final GitBranchesApi api = new GitBranchesApi();

    /**
     * Lists branches with their status(Synced, Unsynced) by Git Sync Config Id for the given scope
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getListOfBranchesWithStatusTest() throws Exception {
        String yamlGitConfigIdentifier = null;
        String accountIdentifier = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        Integer page = null;
        Integer size = null;
        String searchTerm = null;
        String branchSyncStatus = null;
        ResponseDTOGitBranchList response = api.getListOfBranchesWithStatus(yamlGitConfigIdentifier, accountIdentifier, orgIdentifier, projectIdentifier, page, size, searchTerm, branchSyncStatus);

        // TODO: test validations
    }
    /**
     * Sync the content of new Git Branch into harness with Git Sync Config Id
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void syncGitBranchTest() throws Exception {
        String repoIdentifier = null;
        String accountIdentifier = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        String branch = null;
        ResponseDTOBoolean response = api.syncGitBranch(repoIdentifier, accountIdentifier, orgIdentifier, projectIdentifier, branch);

        // TODO: test validations
    }
}

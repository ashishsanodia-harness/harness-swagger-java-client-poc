/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.ACLAggregateFilter;
import io.swagger.client.model.CreateInvite;
import io.swagger.client.model.Error;
import io.swagger.client.model.Failure;
import io.swagger.client.model.Invite;
import io.swagger.client.model.ResponseDTOInvite;
import io.swagger.client.model.ResponseDTOListInviteOperationResponse;
import io.swagger.client.model.ResponseDTOOptionalInvite;
import io.swagger.client.model.ResponseDTOPageResponseInvite;
import io.swagger.client.model.SortOrder;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for InviteApi
 */
@Ignore
public class InviteApiTest {

    private final InviteApi api = new InviteApi();

    /**
     * Delete an Invite by Identifier
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteInviteTest() throws Exception {
        String inviteId = null;
        ResponseDTOOptionalInvite response = api.deleteInvite(inviteId);

        // TODO: test validations
    }
    /**
     * Gets an Invite by either Invite Id or JwtToken
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getInviteTest() throws Exception {
        String inviteId = null;
        String jwttoken = null;
        ResponseDTOInvite response = api.getInvite(inviteId, jwttoken);

        // TODO: test validations
    }
    /**
     * List all the Invites for a Project or Organization
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getInvitesTest() throws Exception {
        String accountIdentifier = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        Integer pageIndex = null;
        Integer pageSize = null;
        List<SortOrder> sortOrders = null;
        ResponseDTOPageResponseInvite response = api.getInvites(accountIdentifier, orgIdentifier, projectIdentifier, pageIndex, pageSize, sortOrders);

        // TODO: test validations
    }
    /**
     * List of all the Invites pending users
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getPendingUsersAggregatedTest() throws Exception {
        String accountIdentifier = null;
        ACLAggregateFilter body = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        String searchTerm = null;
        Integer pageIndex = null;
        Integer pageSize = null;
        List<SortOrder> sortOrders = null;
        ResponseDTOPageResponseInvite response = api.getPendingUsersAggregated(accountIdentifier, body, orgIdentifier, projectIdentifier, searchTerm, pageIndex, pageSize, sortOrders);

        // TODO: test validations
    }
    /**
     * Send a user Invite to either Project or Organization (Deprecated). Please use the /user/users API to invite users
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void sendInviteTest() throws Exception {
        CreateInvite body = null;
        String accountIdentifier = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        ResponseDTOListInviteOperationResponse response = api.sendInvite(body, accountIdentifier, orgIdentifier, projectIdentifier);

        // TODO: test validations
    }
    /**
     * Resend the Invite email
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateInviteTest() throws Exception {
        Invite body = null;
        String accountIdentifier = null;
        String inviteId = null;
        ResponseDTOOptionalInvite response = api.updateInvite(body, accountIdentifier, inviteId);

        // TODO: test validations
    }
}

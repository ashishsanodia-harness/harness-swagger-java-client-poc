/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.CfError;
import io.swagger.client.model.CfPatchOperation;
import io.swagger.client.model.Target;
import io.swagger.client.model.TargetDetail;
import io.swagger.client.model.Targets;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for TargetsApi
 */
@Ignore
public class TargetsApiTest {

    private final TargetsApi api = new TargetsApi();

    /**
     * Creates a Target
     *
     * Create Targets for the given identifier
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createTargetTest() throws Exception {
        Target body = null;
        String accountIdentifier = null;
        String orgIdentifier = null;
        api.createTarget(body, accountIdentifier, orgIdentifier);

        // TODO: test validations
    }
    /**
     * Deletes a Target
     *
     * Deletes a Target for the given identifier
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteTargetTest() throws Exception {
        String identifier = null;
        String accountIdentifier = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        String environmentIdentifier = null;
        api.deleteTarget(identifier, accountIdentifier, orgIdentifier, projectIdentifier, environmentIdentifier);

        // TODO: test validations
    }
    /**
     * Returns all Targets
     *
     * Returns all the Targets for the given Account ID
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAllTargetsTest() throws Exception {
        String accountIdentifier = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        String environmentIdentifier = null;
        Integer pageNumber = null;
        Integer pageSize = null;
        String sortOrder = null;
        String sortByField = null;
        String targetName = null;
        String targetIdentifier = null;
        Targets response = api.getAllTargets(accountIdentifier, orgIdentifier, projectIdentifier, environmentIdentifier, pageNumber, pageSize, sortOrder, sortByField, targetName, targetIdentifier);

        // TODO: test validations
    }
    /**
     * Returns details of a Target
     *
     * Returns details of a Target for the given identifier
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getTargetTest() throws Exception {
        String identifier = null;
        String accountIdentifier = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        String environmentIdentifier = null;
        Target response = api.getTarget(identifier, accountIdentifier, orgIdentifier, projectIdentifier, environmentIdentifier);

        // TODO: test validations
    }
    /**
     * Returns Target Groups for the given Target
     *
     * Returns the Target Groups that the specified Target belongs to.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getTargetSegmentsTest() throws Exception {
        String identifier = null;
        String accountIdentifier = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        String environmentIdentifier = null;
        TargetDetail response = api.getTargetSegments(identifier, accountIdentifier, orgIdentifier, projectIdentifier, environmentIdentifier);

        // TODO: test validations
    }
    /**
     * Modifies a Target
     *
     * Modifies a Target for the given account identifier
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void modifyTargetTest() throws Exception {
        Target body = null;
        String accountIdentifier = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        String environmentIdentifier = null;
        String identifier = null;
        Target response = api.modifyTarget(body, accountIdentifier, orgIdentifier, projectIdentifier, environmentIdentifier, identifier);

        // TODO: test validations
    }
    /**
     * Updates a Target
     *
     * Updates a Target for the given identifier
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void patchTargetTest() throws Exception {
        String accountIdentifier = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        String environmentIdentifier = null;
        String identifier = null;
        CfPatchOperation body = null;
        Target response = api.patchTarget(accountIdentifier, orgIdentifier, projectIdentifier, environmentIdentifier, identifier, body);

        // TODO: test validations
    }
}

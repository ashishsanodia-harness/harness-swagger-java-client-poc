/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.Error;
import io.swagger.client.model.Failure;
import io.swagger.client.model.Filter;
import io.swagger.client.model.ResponseDTOBoolean;
import io.swagger.client.model.ResponseDTOFilter;
import io.swagger.client.model.ResponseDTOPageResponseFilter;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for FilterApi
 */
@Ignore
public class FilterApiTest {

    private final FilterApi api = new FilterApi();

    /**
     * Delete a Filter by identifier
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteFilterTest() throws Exception {
        String accountIdentifier = null;
        String identifier = null;
        String type = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        ResponseDTOBoolean response = api.deleteFilter(accountIdentifier, identifier, type, orgIdentifier, projectIdentifier);

        // TODO: test validations
    }
    /**
     * Get the list of Filters satisfying the criteria (if any) in the request
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getConnectorListV21Test() throws Exception {
        String accountIdentifier = null;
        String type = null;
        Integer pageIndex = null;
        Integer pageSize = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        ResponseDTOPageResponseFilter response = api.getConnectorListV21(accountIdentifier, type, pageIndex, pageSize, orgIdentifier, projectIdentifier);

        // TODO: test validations
    }
    /**
     * Gets a Filter by identifier
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getFilterTest() throws Exception {
        String accountIdentifier = null;
        String identifier = null;
        String type = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        ResponseDTOFilter response = api.getFilter(accountIdentifier, identifier, type, orgIdentifier, projectIdentifier);

        // TODO: test validations
    }
    /**
     * Delete a Filter by identifier
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pipelinedeleteFilterTest() throws Exception {
        String accountIdentifier = null;
        String identifier = null;
        String type = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        ResponseDTOBoolean response = api.pipelinedeleteFilter(accountIdentifier, identifier, type, orgIdentifier, projectIdentifier);

        // TODO: test validations
    }
    /**
     * Get the list of Filters satisfying the criteria (if any) in the request
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pipelinegetConnectorListV2Test() throws Exception {
        String accountIdentifier = null;
        String type = null;
        Integer pageIndex = null;
        Integer pageSize = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        ResponseDTOPageResponseFilter response = api.pipelinegetConnectorListV2(accountIdentifier, type, pageIndex, pageSize, orgIdentifier, projectIdentifier);

        // TODO: test validations
    }
    /**
     * Gets a Filter by identifier
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pipelinegetFilterTest() throws Exception {
        String accountIdentifier = null;
        String identifier = null;
        String type = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        ResponseDTOFilter response = api.pipelinegetFilter(accountIdentifier, identifier, type, orgIdentifier, projectIdentifier);

        // TODO: test validations
    }
    /**
     * Creates a Filter
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pipelinepostFilterTest() throws Exception {
        Filter body = null;
        String accountIdentifier = null;
        ResponseDTOFilter response = api.pipelinepostFilter(body, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Updates the Filter
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pipelineupdateFilterTest() throws Exception {
        Filter body = null;
        String accountIdentifier = null;
        ResponseDTOFilter response = api.pipelineupdateFilter(body, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Creates a Filter
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void postFilterTest() throws Exception {
        Filter body = null;
        String accountIdentifier = null;
        ResponseDTOFilter response = api.postFilter(body, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Delete a Filter by identifier
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void resourcegroupdeleteFilterTest() throws Exception {
        String accountIdentifier = null;
        String identifier = null;
        String type = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        ResponseDTOBoolean response = api.resourcegroupdeleteFilter(accountIdentifier, identifier, type, orgIdentifier, projectIdentifier);

        // TODO: test validations
    }
    /**
     * Get the list of Filters satisfying the criteria (if any) in the request
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void resourcegroupgetConnectorListV2Test() throws Exception {
        String accountIdentifier = null;
        String type = null;
        Integer pageIndex = null;
        Integer pageSize = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        ResponseDTOPageResponseFilter response = api.resourcegroupgetConnectorListV2(accountIdentifier, type, pageIndex, pageSize, orgIdentifier, projectIdentifier);

        // TODO: test validations
    }
    /**
     * Gets a Filter by identifier
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void resourcegroupgetFilterTest() throws Exception {
        String accountIdentifier = null;
        String identifier = null;
        String type = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        ResponseDTOFilter response = api.resourcegroupgetFilter(accountIdentifier, identifier, type, orgIdentifier, projectIdentifier);

        // TODO: test validations
    }
    /**
     * Creates a Filter
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void resourcegrouppostFilterTest() throws Exception {
        Filter body = null;
        String accountIdentifier = null;
        ResponseDTOFilter response = api.resourcegrouppostFilter(body, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Updates the Filter
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void resourcegroupupdateFilterTest() throws Exception {
        Filter body = null;
        String accountIdentifier = null;
        ResponseDTOFilter response = api.resourcegroupupdateFilter(body, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Updates the Filter
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateFilterTest() throws Exception {
        Filter body = null;
        String accountIdentifier = null;
        ResponseDTOFilter response = api.updateFilter(body, accountIdentifier);

        // TODO: test validations
    }
}

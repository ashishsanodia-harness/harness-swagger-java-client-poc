/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.Error;
import io.swagger.client.model.Failure;
import io.swagger.client.model.OrganizationRequest;
import io.swagger.client.model.ResponseDTOBoolean;
import io.swagger.client.model.ResponseDTOOrganizationResponse;
import io.swagger.client.model.ResponseDTOPageResponseOrganizationResponse;
import io.swagger.client.model.SortOrder;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for OrganizationApi
 */
@Ignore
public class OrganizationApiTest {

    private final OrganizationApi api = new OrganizationApi();

    /**
     * Deletes the Organization corresponding to the specified Organization ID.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteOrganizationTest() throws Exception {
        String identifier = null;
        String accountIdentifier = null;
        String ifMatch = null;
        ResponseDTOBoolean response = api.deleteOrganization(identifier, accountIdentifier, ifMatch);

        // TODO: test validations
    }
    /**
     * Get the Organization by accountIdentifier and orgIdentifier
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getOrganizationTest() throws Exception {
        String identifier = null;
        String accountIdentifier = null;
        ResponseDTOOrganizationResponse response = api.getOrganization(identifier, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Get the list of Organizations satisfying the criteria (if any) in the request
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getOrganizationListTest() throws Exception {
        String accountIdentifier = null;
        List<String> identifiers = null;
        String searchTerm = null;
        Integer pageIndex = null;
        Integer pageSize = null;
        List<SortOrder> sortOrders = null;
        ResponseDTOPageResponseOrganizationResponse response = api.getOrganizationList(accountIdentifier, identifiers, searchTerm, pageIndex, pageSize, sortOrders);

        // TODO: test validations
    }
    /**
     * Creates an Organization
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void postOrganizationTest() throws Exception {
        OrganizationRequest body = null;
        String accountIdentifier = null;
        ResponseDTOOrganizationResponse response = api.postOrganization(body, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Updates the Organization
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void putOrganizationTest() throws Exception {
        OrganizationRequest body = null;
        String accountIdentifier = null;
        String identifier = null;
        String ifMatch = null;
        ResponseDTOOrganizationResponse response = api.putOrganization(body, accountIdentifier, identifier, ifMatch);

        // TODO: test validations
    }
}

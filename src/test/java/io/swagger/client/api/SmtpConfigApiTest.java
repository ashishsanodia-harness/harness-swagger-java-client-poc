/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.Error;
import io.swagger.client.model.Failure;
import io.swagger.client.model.NgSmtp;
import io.swagger.client.model.ResponseDTOBoolean;
import io.swagger.client.model.ResponseDTONgSmtp;
import io.swagger.client.model.ResponseDTOValidationResult;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for SmtpConfigApi
 */
@Ignore
public class SmtpConfigApiTest {

    private final SmtpConfigApi api = new SmtpConfigApi();

    /**
     * Creates SMTP config
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createSmtpConfigTest() throws Exception {
        NgSmtp body = null;
        ResponseDTONgSmtp response = api.createSmtpConfig(body);

        // TODO: test validations
    }
    /**
     * Delete Smtp Config by identifier
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteSmtpConfigTest() throws Exception {
        String identifier = null;
        ResponseDTOBoolean response = api.deleteSmtpConfig(identifier);

        // TODO: test validations
    }
    /**
     * Gets Smtp config by accountId
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getSmtpConfigTest() throws Exception {
        String accountId = null;
        ResponseDTONgSmtp response = api.getSmtpConfig(accountId);

        // TODO: test validations
    }
    /**
     * Updates the Smtp Config
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateSmtpTest() throws Exception {
        NgSmtp body = null;
        ResponseDTONgSmtp response = api.updateSmtp(body);

        // TODO: test validations
    }
    /**
     * Tests the config&#x27;s connectivity by sending a test email
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void validateConnectivityTest() throws Exception {
        String identifier = null;
        String accountId = null;
        String to = null;
        String subject = null;
        String body = null;
        ResponseDTOValidationResult response = api.validateConnectivity(identifier, accountId, to, subject, body);

        // TODO: test validations
    }
    /**
     * Checks whether other connectors exist with the same name
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void validateNameTest() throws Exception {
        String accountId = null;
        String name = null;
        ResponseDTOValidationResult response = api.validateName(accountId, name);

        // TODO: test validations
    }
}

/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.CEReportSchedule;
import io.swagger.client.model.Error;
import io.swagger.client.model.Failure;
import io.swagger.client.model.ResponseDTOListCEReportSchedule;
import io.swagger.client.model.ResponseDTOString;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for CloudCostPerspectiveReportsApi
 */
@Ignore
public class CloudCostPerspectiveReportsApiTest {

    private final CloudCostPerspectiveReportsApi api = new CloudCostPerspectiveReportsApi();

    /**
     * Create a schedule for a Report
     *
     * Create a report schedule for the given Report ID or a Perspective ID.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createReportSettingTest() throws Exception {
        CEReportSchedule body = null;
        String accountIdentifier = null;
        ResponseDTOListCEReportSchedule response = api.createReportSetting(body, accountIdentifier);

        // TODO: test validations
    }
    /**
     * Delete cost Perspective report
     *
     * Delete cost Perspective Report for the given Report ID or a Perspective ID.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteReportSettingTest() throws Exception {
        String accountIdentifier = null;
        String reportId = null;
        String perspectiveId = null;
        ResponseDTOString response = api.deleteReportSetting(accountIdentifier, reportId, perspectiveId);

        // TODO: test validations
    }
    /**
     * Fetch details of a cost Report
     *
     * Fetch cost Report details for the given Report ID or a Perspective ID.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getReportSettingTest() throws Exception {
        String accountIdentifier = null;
        String perspectiveId = null;
        String reportId = null;
        ResponseDTOListCEReportSchedule response = api.getReportSetting(accountIdentifier, perspectiveId, reportId);

        // TODO: test validations
    }
    /**
     * Update a cost Perspective Report
     *
     * Update cost Perspective Reports.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateReportSettingTest() throws Exception {
        CEReportSchedule body = null;
        String accountIdentifier = null;
        ResponseDTOListCEReportSchedule response = api.updateReportSetting(body, accountIdentifier);

        // TODO: test validations
    }
}

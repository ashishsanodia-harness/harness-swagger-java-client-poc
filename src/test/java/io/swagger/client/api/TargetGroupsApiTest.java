/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.CfError;
import io.swagger.client.model.CfPatchOperation;
import io.swagger.client.model.FlagBasicInfos;
import io.swagger.client.model.Segment;
import io.swagger.client.model.SegmentFlag;
import io.swagger.client.model.Segments;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for TargetGroupsApi
 */
@Ignore
public class TargetGroupsApiTest {

    private final TargetGroupsApi api = new TargetGroupsApi();

    /**
     * Creates a Target Group
     *
     * Creates a Target Group in the given Project
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createSegmentTest() throws Exception {
        Object body = null;
        String accountIdentifier = null;
        String orgIdentifier = null;
        api.createSegment(body, accountIdentifier, orgIdentifier);

        // TODO: test validations
    }
    /**
     * Deletes a Target Group
     *
     * Deletes a Target Group for the given ID
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteSegmentTest() throws Exception {
        String accountIdentifier = null;
        String orgIdentifier = null;
        String identifier = null;
        String projectIdentifier = null;
        String environmentIdentifier = null;
        api.deleteSegment(accountIdentifier, orgIdentifier, identifier, projectIdentifier, environmentIdentifier);

        // TODO: test validations
    }
    /**
     * Returns all Target Groups
     *
     * Returns Target Group details for the given account
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAllSegmentsTest() throws Exception {
        String accountIdentifier = null;
        String orgIdentifier = null;
        String environmentIdentifier = null;
        String projectIdentifier = null;
        Integer pageNumber = null;
        Integer pageSize = null;
        String sortOrder = null;
        String sortByField = null;
        String name = null;
        String identifier = null;
        Segments response = api.getAllSegments(accountIdentifier, orgIdentifier, environmentIdentifier, projectIdentifier, pageNumber, pageSize, sortOrder, sortByField, name, identifier);

        // TODO: test validations
    }
    /**
     * Returns Feature Flags that are available to be added to the given Target Group
     *
     * Returns the list of Feature Flags that the Target Group can be added to.  This list will exclude any Feature Flag that the Target Group is already part of.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAvailableFlagsForSegmentTest() throws Exception {
        String identifier = null;
        String accountIdentifier = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        String environmentIdentifier = null;
        Integer pageNumber = null;
        Integer pageSize = null;
        String sortOrder = null;
        String sortByField = null;
        String flagNameIdentifier = null;
        FlagBasicInfos response = api.getAvailableFlagsForSegment(identifier, accountIdentifier, orgIdentifier, projectIdentifier, environmentIdentifier, pageNumber, pageSize, sortOrder, sortByField, flagNameIdentifier);

        // TODO: test validations
    }
    /**
     * Returns Target Group details for the given identifier
     *
     * Returns Target Group details for the given ID
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getSegmentTest() throws Exception {
        String accountIdentifier = null;
        String orgIdentifier = null;
        String identifier = null;
        String projectIdentifier = null;
        String environmentIdentifier = null;
        Segment response = api.getSegment(accountIdentifier, orgIdentifier, identifier, projectIdentifier, environmentIdentifier);

        // TODO: test validations
    }
    /**
     * Returns Feature Flags in a Target Group
     *
     * Returns the details of a Feature Flag in a Target Group for the given identifier
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getSegmentFlagsTest() throws Exception {
        String accountIdentifier = null;
        String orgIdentifier = null;
        String identifier = null;
        String projectIdentifier = null;
        String environmentIdentifier = null;
        List<SegmentFlag> response = api.getSegmentFlags(accountIdentifier, orgIdentifier, identifier, projectIdentifier, environmentIdentifier);

        // TODO: test validations
    }
    /**
     * Updates a Target Group
     *
     * Updates a Target Group for the given identifier
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void patchSegmentTest() throws Exception {
        String accountIdentifier = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        String environmentIdentifier = null;
        String identifier = null;
        CfPatchOperation body = null;
        Segment response = api.patchSegment(accountIdentifier, orgIdentifier, projectIdentifier, environmentIdentifier, identifier, body);

        // TODO: test validations
    }
}

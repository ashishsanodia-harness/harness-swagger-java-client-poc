/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.Error;
import io.swagger.client.model.Failure;
import io.swagger.client.model.FilterProperties;
import io.swagger.client.model.ResponseDTOInputSetTemplateResponse;
import io.swagger.client.model.ResponseDTOPagePipelineExecutionSummary;
import io.swagger.client.model.ResponseDTOPipelineExecutionDetail;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ExecutionDetailsApi
 */
@Ignore
public class ExecutionDetailsApiTest {

    private final ExecutionDetailsApi api = new ExecutionDetailsApi();

    /**
     * Get the Pipeline Execution details for given PlanExecution Id
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getExecutionDetailTest() throws Exception {
        String accountIdentifier = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        String planExecutionId = null;
        String stageNodeId = null;
        ResponseDTOPipelineExecutionDetail response = api.getExecutionDetail(accountIdentifier, orgIdentifier, projectIdentifier, planExecutionId, stageNodeId);

        // TODO: test validations
    }
    /**
     * Get the Input Set YAML used for given Plan Execution
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getInputsetYamlTest() throws Exception {
        String accountIdentifier = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        String planExecutionId = null;
        Boolean resolveExpressions = null;
        String response = api.getInputsetYaml(accountIdentifier, orgIdentifier, projectIdentifier, planExecutionId, resolveExpressions);

        // TODO: test validations
    }
    /**
     * Get the Input Set YAML used for given Plan Execution
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getInputsetYamlV2Test() throws Exception {
        String accountIdentifier = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        String planExecutionId = null;
        Boolean resolveExpressions = null;
        ResponseDTOInputSetTemplateResponse response = api.getInputsetYamlV2(accountIdentifier, orgIdentifier, projectIdentifier, planExecutionId, resolveExpressions);

        // TODO: test validations
    }
    /**
     * Gets list of Executions of Pipelines for specific filters.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getListOfExecutionsTest() throws Exception {
        String accountIdentifier = null;
        String orgIdentifier = null;
        String projectIdentifier = null;
        FilterProperties body = null;
        String searchTerm = null;
        String pipelineIdentifier = null;
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        String filterIdentifier = null;
        String module = null;
        List<String> status = null;
        Boolean myDeployments = null;
        String branch = null;
        String repoIdentifier = null;
        Boolean getDefaultFromOtherRepo = null;
        ResponseDTOPagePipelineExecutionSummary response = api.getListOfExecutions(accountIdentifier, orgIdentifier, projectIdentifier, body, searchTerm, pipelineIdentifier, page, size, sort, filterIdentifier, module, status, myDeployments, branch, repoIdentifier, getDefaultFromOtherRepo);

        // TODO: test validations
    }
}

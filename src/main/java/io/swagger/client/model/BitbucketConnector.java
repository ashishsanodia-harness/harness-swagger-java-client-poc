/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.BitbucketApiAccess;
import io.swagger.client.model.BitbucketAuthentication;
import io.swagger.client.model.ConnectorConfig;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * This contains details of Bitbucket connectors
 */
@Schema(description = "This contains details of Bitbucket connectors")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class BitbucketConnector extends ConnectorConfig {
  @SerializedName("url")
  private String url = null;

  @SerializedName("validationRepo")
  private String validationRepo = null;

  @SerializedName("authentication")
  private BitbucketAuthentication authentication = null;

  @SerializedName("apiAccess")
  private BitbucketApiAccess apiAccess = null;

  @SerializedName("delegateSelectors")
  private List<String> delegateSelectors = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    ACCOUNT("ACCOUNT"),
    REPO("REPO");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  public BitbucketConnector url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @Schema(required = true, description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public BitbucketConnector validationRepo(String validationRepo) {
    this.validationRepo = validationRepo;
    return this;
  }

   /**
   * Get validationRepo
   * @return validationRepo
  **/
  @Schema(description = "")
  public String getValidationRepo() {
    return validationRepo;
  }

  public void setValidationRepo(String validationRepo) {
    this.validationRepo = validationRepo;
  }

  public BitbucketConnector authentication(BitbucketAuthentication authentication) {
    this.authentication = authentication;
    return this;
  }

   /**
   * Get authentication
   * @return authentication
  **/
  @Schema(required = true, description = "")
  public BitbucketAuthentication getAuthentication() {
    return authentication;
  }

  public void setAuthentication(BitbucketAuthentication authentication) {
    this.authentication = authentication;
  }

  public BitbucketConnector apiAccess(BitbucketApiAccess apiAccess) {
    this.apiAccess = apiAccess;
    return this;
  }

   /**
   * Get apiAccess
   * @return apiAccess
  **/
  @Schema(description = "")
  public BitbucketApiAccess getApiAccess() {
    return apiAccess;
  }

  public void setApiAccess(BitbucketApiAccess apiAccess) {
    this.apiAccess = apiAccess;
  }

  public BitbucketConnector delegateSelectors(List<String> delegateSelectors) {
    this.delegateSelectors = delegateSelectors;
    return this;
  }

  public BitbucketConnector addDelegateSelectorsItem(String delegateSelectorsItem) {
    if (this.delegateSelectors == null) {
      this.delegateSelectors = new ArrayList<String>();
    }
    this.delegateSelectors.add(delegateSelectorsItem);
    return this;
  }

   /**
   * Get delegateSelectors
   * @return delegateSelectors
  **/
  @Schema(description = "")
  public List<String> getDelegateSelectors() {
    return delegateSelectors;
  }

  public void setDelegateSelectors(List<String> delegateSelectors) {
    this.delegateSelectors = delegateSelectors;
  }

  public BitbucketConnector type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BitbucketConnector bitbucketConnector = (BitbucketConnector) o;
    return Objects.equals(this.url, bitbucketConnector.url) &&
        Objects.equals(this.validationRepo, bitbucketConnector.validationRepo) &&
        Objects.equals(this.authentication, bitbucketConnector.authentication) &&
        Objects.equals(this.apiAccess, bitbucketConnector.apiAccess) &&
        Objects.equals(this.delegateSelectors, bitbucketConnector.delegateSelectors) &&
        Objects.equals(this.type, bitbucketConnector.type) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, validationRepo, authentication, apiAccess, delegateSelectors, type, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BitbucketConnector {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    validationRepo: ").append(toIndentedString(validationRepo)).append("\n");
    sb.append("    authentication: ").append(toIndentedString(authentication)).append("\n");
    sb.append("    apiAccess: ").append(toIndentedString(apiAccess)).append("\n");
    sb.append("    delegateSelectors: ").append(toIndentedString(delegateSelectors)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

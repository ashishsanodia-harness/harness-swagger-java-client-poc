/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AwsCurAttributes;
import io.swagger.client.model.ConnectorConfig;
import io.swagger.client.model.CrossAccountAccess;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * This contains the cost explorer of AWS connector
 */
@Schema(description = "This contains the cost explorer of AWS connector")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class CEAwsConnector extends ConnectorConfig {
  @SerializedName("crossAccountAccess")
  private CrossAccountAccess crossAccountAccess = null;

  @SerializedName("curAttributes")
  private AwsCurAttributes curAttributes = null;

  @SerializedName("awsAccountId")
  private String awsAccountId = null;

  /**
   * Gets or Sets featuresEnabled
   */
  @JsonAdapter(FeaturesEnabledEnum.Adapter.class)
  public enum FeaturesEnabledEnum {
    BILLING("BILLING"),
    OPTIMIZATION("OPTIMIZATION"),
    VISIBILITY("VISIBILITY");

    private String value;

    FeaturesEnabledEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static FeaturesEnabledEnum fromValue(String input) {
      for (FeaturesEnabledEnum b : FeaturesEnabledEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<FeaturesEnabledEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FeaturesEnabledEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public FeaturesEnabledEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return FeaturesEnabledEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("featuresEnabled")
  private List<FeaturesEnabledEnum> featuresEnabled = null;

  public CEAwsConnector crossAccountAccess(CrossAccountAccess crossAccountAccess) {
    this.crossAccountAccess = crossAccountAccess;
    return this;
  }

   /**
   * Get crossAccountAccess
   * @return crossAccountAccess
  **/
  @Schema(required = true, description = "")
  public CrossAccountAccess getCrossAccountAccess() {
    return crossAccountAccess;
  }

  public void setCrossAccountAccess(CrossAccountAccess crossAccountAccess) {
    this.crossAccountAccess = crossAccountAccess;
  }

  public CEAwsConnector curAttributes(AwsCurAttributes curAttributes) {
    this.curAttributes = curAttributes;
    return this;
  }

   /**
   * Get curAttributes
   * @return curAttributes
  **/
  @Schema(description = "")
  public AwsCurAttributes getCurAttributes() {
    return curAttributes;
  }

  public void setCurAttributes(AwsCurAttributes curAttributes) {
    this.curAttributes = curAttributes;
  }

  public CEAwsConnector awsAccountId(String awsAccountId) {
    this.awsAccountId = awsAccountId;
    return this;
  }

   /**
   * Get awsAccountId
   * @return awsAccountId
  **/
  @Schema(description = "")
  public String getAwsAccountId() {
    return awsAccountId;
  }

  public void setAwsAccountId(String awsAccountId) {
    this.awsAccountId = awsAccountId;
  }

  public CEAwsConnector featuresEnabled(List<FeaturesEnabledEnum> featuresEnabled) {
    this.featuresEnabled = featuresEnabled;
    return this;
  }

  public CEAwsConnector addFeaturesEnabledItem(FeaturesEnabledEnum featuresEnabledItem) {
    if (this.featuresEnabled == null) {
      this.featuresEnabled = new ArrayList<FeaturesEnabledEnum>();
    }
    this.featuresEnabled.add(featuresEnabledItem);
    return this;
  }

   /**
   * Get featuresEnabled
   * @return featuresEnabled
  **/
  @Schema(description = "")
  public List<FeaturesEnabledEnum> getFeaturesEnabled() {
    return featuresEnabled;
  }

  public void setFeaturesEnabled(List<FeaturesEnabledEnum> featuresEnabled) {
    this.featuresEnabled = featuresEnabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CEAwsConnector ceAwsConnector = (CEAwsConnector) o;
    return Objects.equals(this.crossAccountAccess, ceAwsConnector.crossAccountAccess) &&
        Objects.equals(this.curAttributes, ceAwsConnector.curAttributes) &&
        Objects.equals(this.awsAccountId, ceAwsConnector.awsAccountId) &&
        Objects.equals(this.featuresEnabled, ceAwsConnector.featuresEnabled) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(crossAccountAccess, curAttributes, awsAccountId, featuresEnabled, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CEAwsConnector {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    crossAccountAccess: ").append(toIndentedString(crossAccountAccess)).append("\n");
    sb.append("    curAttributes: ").append(toIndentedString(curAttributes)).append("\n");
    sb.append("    awsAccountId: ").append(toIndentedString(awsAccountId)).append("\n");
    sb.append("    featuresEnabled: ").append(toIndentedString(featuresEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.InputSetErrorWrapperDTOPMS;
import io.swagger.client.model.PipelineEntityGitDetails;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * This is the view of the Input Set Summary.
 */
@Schema(description = "This is the view of the Input Set Summary.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class InputSetSummaryResponse {
  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("pipelineIdentifier")
  private String pipelineIdentifier = null;

  @SerializedName("description")
  private String description = null;

  /**
   * Gets or Sets inputSetType
   */
  @JsonAdapter(InputSetTypeEnum.Adapter.class)
  public enum InputSetTypeEnum {
    INPUT_SET("INPUT_SET"),
    OVERLAY_INPUT_SET("OVERLAY_INPUT_SET");

    private String value;

    InputSetTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static InputSetTypeEnum fromValue(String input) {
      for (InputSetTypeEnum b : InputSetTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<InputSetTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InputSetTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public InputSetTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return InputSetTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("inputSetType")
  private InputSetTypeEnum inputSetType = null;

  @SerializedName("tags")
  private Map<String, String> tags = null;

  @SerializedName("version")
  private Long version = null;

  @SerializedName("gitDetails")
  private PipelineEntityGitDetails gitDetails = null;

  @SerializedName("createdAt")
  private Long createdAt = null;

  @SerializedName("lastUpdatedAt")
  private Long lastUpdatedAt = null;

  @SerializedName("isOutdated")
  private Boolean isOutdated = null;

  @SerializedName("inputSetErrorDetails")
  private InputSetErrorWrapperDTOPMS inputSetErrorDetails = null;

  @SerializedName("overlaySetErrorDetails")
  private Map<String, String> overlaySetErrorDetails = null;

  @SerializedName("entityValidityDetails")
  private PipelineEntityGitDetails entityValidityDetails = null;

  @SerializedName("modules")
  private List<String> modules = null;

  public InputSetSummaryResponse identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @Schema(description = "")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public InputSetSummaryResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InputSetSummaryResponse pipelineIdentifier(String pipelineIdentifier) {
    this.pipelineIdentifier = pipelineIdentifier;
    return this;
  }

   /**
   * Get pipelineIdentifier
   * @return pipelineIdentifier
  **/
  @Schema(description = "")
  public String getPipelineIdentifier() {
    return pipelineIdentifier;
  }

  public void setPipelineIdentifier(String pipelineIdentifier) {
    this.pipelineIdentifier = pipelineIdentifier;
  }

  public InputSetSummaryResponse description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public InputSetSummaryResponse inputSetType(InputSetTypeEnum inputSetType) {
    this.inputSetType = inputSetType;
    return this;
  }

   /**
   * Get inputSetType
   * @return inputSetType
  **/
  @Schema(description = "")
  public InputSetTypeEnum getInputSetType() {
    return inputSetType;
  }

  public void setInputSetType(InputSetTypeEnum inputSetType) {
    this.inputSetType = inputSetType;
  }

  public InputSetSummaryResponse tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public InputSetSummaryResponse putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<String, String>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }

  public InputSetSummaryResponse version(Long version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public Long getVersion() {
    return version;
  }

  public void setVersion(Long version) {
    this.version = version;
  }

  public InputSetSummaryResponse gitDetails(PipelineEntityGitDetails gitDetails) {
    this.gitDetails = gitDetails;
    return this;
  }

   /**
   * Get gitDetails
   * @return gitDetails
  **/
  @Schema(description = "")
  public PipelineEntityGitDetails getGitDetails() {
    return gitDetails;
  }

  public void setGitDetails(PipelineEntityGitDetails gitDetails) {
    this.gitDetails = gitDetails;
  }

  public InputSetSummaryResponse createdAt(Long createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public Long getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(Long createdAt) {
    this.createdAt = createdAt;
  }

  public InputSetSummaryResponse lastUpdatedAt(Long lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

   /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
  **/
  @Schema(description = "")
  public Long getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(Long lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }

  public InputSetSummaryResponse isOutdated(Boolean isOutdated) {
    this.isOutdated = isOutdated;
    return this;
  }

   /**
   * Get isOutdated
   * @return isOutdated
  **/
  @Schema(description = "")
  public Boolean isIsOutdated() {
    return isOutdated;
  }

  public void setIsOutdated(Boolean isOutdated) {
    this.isOutdated = isOutdated;
  }

  public InputSetSummaryResponse inputSetErrorDetails(InputSetErrorWrapperDTOPMS inputSetErrorDetails) {
    this.inputSetErrorDetails = inputSetErrorDetails;
    return this;
  }

   /**
   * Get inputSetErrorDetails
   * @return inputSetErrorDetails
  **/
  @Schema(description = "")
  public InputSetErrorWrapperDTOPMS getInputSetErrorDetails() {
    return inputSetErrorDetails;
  }

  public void setInputSetErrorDetails(InputSetErrorWrapperDTOPMS inputSetErrorDetails) {
    this.inputSetErrorDetails = inputSetErrorDetails;
  }

  public InputSetSummaryResponse overlaySetErrorDetails(Map<String, String> overlaySetErrorDetails) {
    this.overlaySetErrorDetails = overlaySetErrorDetails;
    return this;
  }

  public InputSetSummaryResponse putOverlaySetErrorDetailsItem(String key, String overlaySetErrorDetailsItem) {
    if (this.overlaySetErrorDetails == null) {
      this.overlaySetErrorDetails = new HashMap<String, String>();
    }
    this.overlaySetErrorDetails.put(key, overlaySetErrorDetailsItem);
    return this;
  }

   /**
   * Get overlaySetErrorDetails
   * @return overlaySetErrorDetails
  **/
  @Schema(description = "")
  public Map<String, String> getOverlaySetErrorDetails() {
    return overlaySetErrorDetails;
  }

  public void setOverlaySetErrorDetails(Map<String, String> overlaySetErrorDetails) {
    this.overlaySetErrorDetails = overlaySetErrorDetails;
  }

  public InputSetSummaryResponse entityValidityDetails(PipelineEntityGitDetails entityValidityDetails) {
    this.entityValidityDetails = entityValidityDetails;
    return this;
  }

   /**
   * Get entityValidityDetails
   * @return entityValidityDetails
  **/
  @Schema(description = "")
  public PipelineEntityGitDetails getEntityValidityDetails() {
    return entityValidityDetails;
  }

  public void setEntityValidityDetails(PipelineEntityGitDetails entityValidityDetails) {
    this.entityValidityDetails = entityValidityDetails;
  }

  public InputSetSummaryResponse modules(List<String> modules) {
    this.modules = modules;
    return this;
  }

  public InputSetSummaryResponse addModulesItem(String modulesItem) {
    if (this.modules == null) {
      this.modules = new ArrayList<String>();
    }
    this.modules.add(modulesItem);
    return this;
  }

   /**
   * Get modules
   * @return modules
  **/
  @Schema(description = "")
  public List<String> getModules() {
    return modules;
  }

  public void setModules(List<String> modules) {
    this.modules = modules;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InputSetSummaryResponse inputSetSummaryResponse = (InputSetSummaryResponse) o;
    return Objects.equals(this.identifier, inputSetSummaryResponse.identifier) &&
        Objects.equals(this.name, inputSetSummaryResponse.name) &&
        Objects.equals(this.pipelineIdentifier, inputSetSummaryResponse.pipelineIdentifier) &&
        Objects.equals(this.description, inputSetSummaryResponse.description) &&
        Objects.equals(this.inputSetType, inputSetSummaryResponse.inputSetType) &&
        Objects.equals(this.tags, inputSetSummaryResponse.tags) &&
        Objects.equals(this.version, inputSetSummaryResponse.version) &&
        Objects.equals(this.gitDetails, inputSetSummaryResponse.gitDetails) &&
        Objects.equals(this.createdAt, inputSetSummaryResponse.createdAt) &&
        Objects.equals(this.lastUpdatedAt, inputSetSummaryResponse.lastUpdatedAt) &&
        Objects.equals(this.isOutdated, inputSetSummaryResponse.isOutdated) &&
        Objects.equals(this.inputSetErrorDetails, inputSetSummaryResponse.inputSetErrorDetails) &&
        Objects.equals(this.overlaySetErrorDetails, inputSetSummaryResponse.overlaySetErrorDetails) &&
        Objects.equals(this.entityValidityDetails, inputSetSummaryResponse.entityValidityDetails) &&
        Objects.equals(this.modules, inputSetSummaryResponse.modules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifier, name, pipelineIdentifier, description, inputSetType, tags, version, gitDetails, createdAt, lastUpdatedAt, isOutdated, inputSetErrorDetails, overlaySetErrorDetails, entityValidityDetails, modules);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InputSetSummaryResponse {\n");
    
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pipelineIdentifier: ").append(toIndentedString(pipelineIdentifier)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    inputSetType: ").append(toIndentedString(inputSetType)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    gitDetails: ").append(toIndentedString(gitDetails)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("    isOutdated: ").append(toIndentedString(isOutdated)).append("\n");
    sb.append("    inputSetErrorDetails: ").append(toIndentedString(inputSetErrorDetails)).append("\n");
    sb.append("    overlaySetErrorDetails: ").append(toIndentedString(overlaySetErrorDetails)).append("\n");
    sb.append("    entityValidityDetails: ").append(toIndentedString(entityValidityDetails)).append("\n");
    sb.append("    modules: ").append(toIndentedString(modules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ByteString;
import io.swagger.client.model.Descriptor;
import io.swagger.client.model.DescriptorProto;
import io.swagger.client.model.DescriptorProtoOrBuilder;
import io.swagger.client.model.EnumDescriptorProto;
import io.swagger.client.model.EnumDescriptorProtoOrBuilder;
import io.swagger.client.model.ExtensionRange;
import io.swagger.client.model.ExtensionRangeOrBuilder;
import io.swagger.client.model.FieldDescriptorProto;
import io.swagger.client.model.FieldDescriptorProtoOrBuilder;
import io.swagger.client.model.MessageOptions;
import io.swagger.client.model.MessageOptionsOrBuilder;
import io.swagger.client.model.OneofDescriptorProto;
import io.swagger.client.model.OneofDescriptorProtoOrBuilder;
import io.swagger.client.model.ParserDescriptorProto;
import io.swagger.client.model.ReservedRange;
import io.swagger.client.model.ReservedRangeOrBuilder;
import io.swagger.client.model.UnknownFieldSet;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * DescriptorProto
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class DescriptorProto {
  @SerializedName("unknownFields")
  private UnknownFieldSet unknownFields = null;

  @SerializedName("initialized")
  private Boolean initialized = null;

  @SerializedName("options")
  private MessageOptions options = null;

  @SerializedName("nameBytes")
  private ByteString nameBytes = null;

  @SerializedName("enumTypeList")
  private List<EnumDescriptorProto> enumTypeList = null;

  @SerializedName("enumTypeOrBuilderList")
  private List<EnumDescriptorProtoOrBuilder> enumTypeOrBuilderList = null;

  @SerializedName("fieldList")
  private List<FieldDescriptorProto> fieldList = null;

  @SerializedName("oneofDeclCount")
  private Integer oneofDeclCount = null;

  @SerializedName("nestedTypeCount")
  private Integer nestedTypeCount = null;

  @SerializedName("enumTypeCount")
  private Integer enumTypeCount = null;

  @SerializedName("extensionCount")
  private Integer extensionCount = null;

  @SerializedName("fieldCount")
  private Integer fieldCount = null;

  @SerializedName("serializedSize")
  private Integer serializedSize = null;

  @SerializedName("parserForType")
  private ParserDescriptorProto parserForType = null;

  @SerializedName("defaultInstanceForType")
  private DescriptorProto defaultInstanceForType = null;

  @SerializedName("extensionRangeList")
  private List<ExtensionRange> extensionRangeList = null;

  @SerializedName("reservedRangeList")
  private List<ReservedRange> reservedRangeList = null;

  @SerializedName("reservedNameList")
  private List<String> reservedNameList = null;

  @SerializedName("extensionList")
  private List<FieldDescriptorProto> extensionList = null;

  @SerializedName("extensionOrBuilderList")
  private List<FieldDescriptorProtoOrBuilder> extensionOrBuilderList = null;

  @SerializedName("optionsOrBuilder")
  private MessageOptionsOrBuilder optionsOrBuilder = null;

  @SerializedName("fieldOrBuilderList")
  private List<FieldDescriptorProtoOrBuilder> fieldOrBuilderList = null;

  @SerializedName("nestedTypeList")
  private List<DescriptorProto> nestedTypeList = null;

  @SerializedName("nestedTypeOrBuilderList")
  private List<DescriptorProtoOrBuilder> nestedTypeOrBuilderList = null;

  @SerializedName("extensionRangeOrBuilderList")
  private List<ExtensionRangeOrBuilder> extensionRangeOrBuilderList = null;

  @SerializedName("extensionRangeCount")
  private Integer extensionRangeCount = null;

  @SerializedName("oneofDeclList")
  private List<OneofDescriptorProto> oneofDeclList = null;

  @SerializedName("oneofDeclOrBuilderList")
  private List<OneofDescriptorProtoOrBuilder> oneofDeclOrBuilderList = null;

  @SerializedName("reservedRangeOrBuilderList")
  private List<ReservedRangeOrBuilder> reservedRangeOrBuilderList = null;

  @SerializedName("reservedRangeCount")
  private Integer reservedRangeCount = null;

  @SerializedName("reservedNameCount")
  private Integer reservedNameCount = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("allFields")
  private Map<String, Object> allFields = null;

  @SerializedName("initializationErrorString")
  private String initializationErrorString = null;

  @SerializedName("descriptorForType")
  private Descriptor descriptorForType = null;

  @SerializedName("memoizedSerializedSize")
  private Integer memoizedSerializedSize = null;

  public DescriptorProto unknownFields(UnknownFieldSet unknownFields) {
    this.unknownFields = unknownFields;
    return this;
  }

   /**
   * Get unknownFields
   * @return unknownFields
  **/
  @Schema(description = "")
  public UnknownFieldSet getUnknownFields() {
    return unknownFields;
  }

  public void setUnknownFields(UnknownFieldSet unknownFields) {
    this.unknownFields = unknownFields;
  }

  public DescriptorProto initialized(Boolean initialized) {
    this.initialized = initialized;
    return this;
  }

   /**
   * Get initialized
   * @return initialized
  **/
  @Schema(description = "")
  public Boolean isInitialized() {
    return initialized;
  }

  public void setInitialized(Boolean initialized) {
    this.initialized = initialized;
  }

  public DescriptorProto options(MessageOptions options) {
    this.options = options;
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @Schema(description = "")
  public MessageOptions getOptions() {
    return options;
  }

  public void setOptions(MessageOptions options) {
    this.options = options;
  }

  public DescriptorProto nameBytes(ByteString nameBytes) {
    this.nameBytes = nameBytes;
    return this;
  }

   /**
   * Get nameBytes
   * @return nameBytes
  **/
  @Schema(description = "")
  public ByteString getNameBytes() {
    return nameBytes;
  }

  public void setNameBytes(ByteString nameBytes) {
    this.nameBytes = nameBytes;
  }

  public DescriptorProto enumTypeList(List<EnumDescriptorProto> enumTypeList) {
    this.enumTypeList = enumTypeList;
    return this;
  }

  public DescriptorProto addEnumTypeListItem(EnumDescriptorProto enumTypeListItem) {
    if (this.enumTypeList == null) {
      this.enumTypeList = new ArrayList<EnumDescriptorProto>();
    }
    this.enumTypeList.add(enumTypeListItem);
    return this;
  }

   /**
   * Get enumTypeList
   * @return enumTypeList
  **/
  @Schema(description = "")
  public List<EnumDescriptorProto> getEnumTypeList() {
    return enumTypeList;
  }

  public void setEnumTypeList(List<EnumDescriptorProto> enumTypeList) {
    this.enumTypeList = enumTypeList;
  }

  public DescriptorProto enumTypeOrBuilderList(List<EnumDescriptorProtoOrBuilder> enumTypeOrBuilderList) {
    this.enumTypeOrBuilderList = enumTypeOrBuilderList;
    return this;
  }

  public DescriptorProto addEnumTypeOrBuilderListItem(EnumDescriptorProtoOrBuilder enumTypeOrBuilderListItem) {
    if (this.enumTypeOrBuilderList == null) {
      this.enumTypeOrBuilderList = new ArrayList<EnumDescriptorProtoOrBuilder>();
    }
    this.enumTypeOrBuilderList.add(enumTypeOrBuilderListItem);
    return this;
  }

   /**
   * Get enumTypeOrBuilderList
   * @return enumTypeOrBuilderList
  **/
  @Schema(description = "")
  public List<EnumDescriptorProtoOrBuilder> getEnumTypeOrBuilderList() {
    return enumTypeOrBuilderList;
  }

  public void setEnumTypeOrBuilderList(List<EnumDescriptorProtoOrBuilder> enumTypeOrBuilderList) {
    this.enumTypeOrBuilderList = enumTypeOrBuilderList;
  }

  public DescriptorProto fieldList(List<FieldDescriptorProto> fieldList) {
    this.fieldList = fieldList;
    return this;
  }

  public DescriptorProto addFieldListItem(FieldDescriptorProto fieldListItem) {
    if (this.fieldList == null) {
      this.fieldList = new ArrayList<FieldDescriptorProto>();
    }
    this.fieldList.add(fieldListItem);
    return this;
  }

   /**
   * Get fieldList
   * @return fieldList
  **/
  @Schema(description = "")
  public List<FieldDescriptorProto> getFieldList() {
    return fieldList;
  }

  public void setFieldList(List<FieldDescriptorProto> fieldList) {
    this.fieldList = fieldList;
  }

  public DescriptorProto oneofDeclCount(Integer oneofDeclCount) {
    this.oneofDeclCount = oneofDeclCount;
    return this;
  }

   /**
   * Get oneofDeclCount
   * @return oneofDeclCount
  **/
  @Schema(description = "")
  public Integer getOneofDeclCount() {
    return oneofDeclCount;
  }

  public void setOneofDeclCount(Integer oneofDeclCount) {
    this.oneofDeclCount = oneofDeclCount;
  }

  public DescriptorProto nestedTypeCount(Integer nestedTypeCount) {
    this.nestedTypeCount = nestedTypeCount;
    return this;
  }

   /**
   * Get nestedTypeCount
   * @return nestedTypeCount
  **/
  @Schema(description = "")
  public Integer getNestedTypeCount() {
    return nestedTypeCount;
  }

  public void setNestedTypeCount(Integer nestedTypeCount) {
    this.nestedTypeCount = nestedTypeCount;
  }

  public DescriptorProto enumTypeCount(Integer enumTypeCount) {
    this.enumTypeCount = enumTypeCount;
    return this;
  }

   /**
   * Get enumTypeCount
   * @return enumTypeCount
  **/
  @Schema(description = "")
  public Integer getEnumTypeCount() {
    return enumTypeCount;
  }

  public void setEnumTypeCount(Integer enumTypeCount) {
    this.enumTypeCount = enumTypeCount;
  }

  public DescriptorProto extensionCount(Integer extensionCount) {
    this.extensionCount = extensionCount;
    return this;
  }

   /**
   * Get extensionCount
   * @return extensionCount
  **/
  @Schema(description = "")
  public Integer getExtensionCount() {
    return extensionCount;
  }

  public void setExtensionCount(Integer extensionCount) {
    this.extensionCount = extensionCount;
  }

  public DescriptorProto fieldCount(Integer fieldCount) {
    this.fieldCount = fieldCount;
    return this;
  }

   /**
   * Get fieldCount
   * @return fieldCount
  **/
  @Schema(description = "")
  public Integer getFieldCount() {
    return fieldCount;
  }

  public void setFieldCount(Integer fieldCount) {
    this.fieldCount = fieldCount;
  }

  public DescriptorProto serializedSize(Integer serializedSize) {
    this.serializedSize = serializedSize;
    return this;
  }

   /**
   * Get serializedSize
   * @return serializedSize
  **/
  @Schema(description = "")
  public Integer getSerializedSize() {
    return serializedSize;
  }

  public void setSerializedSize(Integer serializedSize) {
    this.serializedSize = serializedSize;
  }

  public DescriptorProto parserForType(ParserDescriptorProto parserForType) {
    this.parserForType = parserForType;
    return this;
  }

   /**
   * Get parserForType
   * @return parserForType
  **/
  @Schema(description = "")
  public ParserDescriptorProto getParserForType() {
    return parserForType;
  }

  public void setParserForType(ParserDescriptorProto parserForType) {
    this.parserForType = parserForType;
  }

  public DescriptorProto defaultInstanceForType(DescriptorProto defaultInstanceForType) {
    this.defaultInstanceForType = defaultInstanceForType;
    return this;
  }

   /**
   * Get defaultInstanceForType
   * @return defaultInstanceForType
  **/
  @Schema(description = "")
  public DescriptorProto getDefaultInstanceForType() {
    return defaultInstanceForType;
  }

  public void setDefaultInstanceForType(DescriptorProto defaultInstanceForType) {
    this.defaultInstanceForType = defaultInstanceForType;
  }

  public DescriptorProto extensionRangeList(List<ExtensionRange> extensionRangeList) {
    this.extensionRangeList = extensionRangeList;
    return this;
  }

  public DescriptorProto addExtensionRangeListItem(ExtensionRange extensionRangeListItem) {
    if (this.extensionRangeList == null) {
      this.extensionRangeList = new ArrayList<ExtensionRange>();
    }
    this.extensionRangeList.add(extensionRangeListItem);
    return this;
  }

   /**
   * Get extensionRangeList
   * @return extensionRangeList
  **/
  @Schema(description = "")
  public List<ExtensionRange> getExtensionRangeList() {
    return extensionRangeList;
  }

  public void setExtensionRangeList(List<ExtensionRange> extensionRangeList) {
    this.extensionRangeList = extensionRangeList;
  }

  public DescriptorProto reservedRangeList(List<ReservedRange> reservedRangeList) {
    this.reservedRangeList = reservedRangeList;
    return this;
  }

  public DescriptorProto addReservedRangeListItem(ReservedRange reservedRangeListItem) {
    if (this.reservedRangeList == null) {
      this.reservedRangeList = new ArrayList<ReservedRange>();
    }
    this.reservedRangeList.add(reservedRangeListItem);
    return this;
  }

   /**
   * Get reservedRangeList
   * @return reservedRangeList
  **/
  @Schema(description = "")
  public List<ReservedRange> getReservedRangeList() {
    return reservedRangeList;
  }

  public void setReservedRangeList(List<ReservedRange> reservedRangeList) {
    this.reservedRangeList = reservedRangeList;
  }

  public DescriptorProto reservedNameList(List<String> reservedNameList) {
    this.reservedNameList = reservedNameList;
    return this;
  }

  public DescriptorProto addReservedNameListItem(String reservedNameListItem) {
    if (this.reservedNameList == null) {
      this.reservedNameList = new ArrayList<String>();
    }
    this.reservedNameList.add(reservedNameListItem);
    return this;
  }

   /**
   * Get reservedNameList
   * @return reservedNameList
  **/
  @Schema(description = "")
  public List<String> getReservedNameList() {
    return reservedNameList;
  }

  public void setReservedNameList(List<String> reservedNameList) {
    this.reservedNameList = reservedNameList;
  }

  public DescriptorProto extensionList(List<FieldDescriptorProto> extensionList) {
    this.extensionList = extensionList;
    return this;
  }

  public DescriptorProto addExtensionListItem(FieldDescriptorProto extensionListItem) {
    if (this.extensionList == null) {
      this.extensionList = new ArrayList<FieldDescriptorProto>();
    }
    this.extensionList.add(extensionListItem);
    return this;
  }

   /**
   * Get extensionList
   * @return extensionList
  **/
  @Schema(description = "")
  public List<FieldDescriptorProto> getExtensionList() {
    return extensionList;
  }

  public void setExtensionList(List<FieldDescriptorProto> extensionList) {
    this.extensionList = extensionList;
  }

  public DescriptorProto extensionOrBuilderList(List<FieldDescriptorProtoOrBuilder> extensionOrBuilderList) {
    this.extensionOrBuilderList = extensionOrBuilderList;
    return this;
  }

  public DescriptorProto addExtensionOrBuilderListItem(FieldDescriptorProtoOrBuilder extensionOrBuilderListItem) {
    if (this.extensionOrBuilderList == null) {
      this.extensionOrBuilderList = new ArrayList<FieldDescriptorProtoOrBuilder>();
    }
    this.extensionOrBuilderList.add(extensionOrBuilderListItem);
    return this;
  }

   /**
   * Get extensionOrBuilderList
   * @return extensionOrBuilderList
  **/
  @Schema(description = "")
  public List<FieldDescriptorProtoOrBuilder> getExtensionOrBuilderList() {
    return extensionOrBuilderList;
  }

  public void setExtensionOrBuilderList(List<FieldDescriptorProtoOrBuilder> extensionOrBuilderList) {
    this.extensionOrBuilderList = extensionOrBuilderList;
  }

  public DescriptorProto optionsOrBuilder(MessageOptionsOrBuilder optionsOrBuilder) {
    this.optionsOrBuilder = optionsOrBuilder;
    return this;
  }

   /**
   * Get optionsOrBuilder
   * @return optionsOrBuilder
  **/
  @Schema(description = "")
  public MessageOptionsOrBuilder getOptionsOrBuilder() {
    return optionsOrBuilder;
  }

  public void setOptionsOrBuilder(MessageOptionsOrBuilder optionsOrBuilder) {
    this.optionsOrBuilder = optionsOrBuilder;
  }

  public DescriptorProto fieldOrBuilderList(List<FieldDescriptorProtoOrBuilder> fieldOrBuilderList) {
    this.fieldOrBuilderList = fieldOrBuilderList;
    return this;
  }

  public DescriptorProto addFieldOrBuilderListItem(FieldDescriptorProtoOrBuilder fieldOrBuilderListItem) {
    if (this.fieldOrBuilderList == null) {
      this.fieldOrBuilderList = new ArrayList<FieldDescriptorProtoOrBuilder>();
    }
    this.fieldOrBuilderList.add(fieldOrBuilderListItem);
    return this;
  }

   /**
   * Get fieldOrBuilderList
   * @return fieldOrBuilderList
  **/
  @Schema(description = "")
  public List<FieldDescriptorProtoOrBuilder> getFieldOrBuilderList() {
    return fieldOrBuilderList;
  }

  public void setFieldOrBuilderList(List<FieldDescriptorProtoOrBuilder> fieldOrBuilderList) {
    this.fieldOrBuilderList = fieldOrBuilderList;
  }

  public DescriptorProto nestedTypeList(List<DescriptorProto> nestedTypeList) {
    this.nestedTypeList = nestedTypeList;
    return this;
  }

  public DescriptorProto addNestedTypeListItem(DescriptorProto nestedTypeListItem) {
    if (this.nestedTypeList == null) {
      this.nestedTypeList = new ArrayList<DescriptorProto>();
    }
    this.nestedTypeList.add(nestedTypeListItem);
    return this;
  }

   /**
   * Get nestedTypeList
   * @return nestedTypeList
  **/
  @Schema(description = "")
  public List<DescriptorProto> getNestedTypeList() {
    return nestedTypeList;
  }

  public void setNestedTypeList(List<DescriptorProto> nestedTypeList) {
    this.nestedTypeList = nestedTypeList;
  }

  public DescriptorProto nestedTypeOrBuilderList(List<DescriptorProtoOrBuilder> nestedTypeOrBuilderList) {
    this.nestedTypeOrBuilderList = nestedTypeOrBuilderList;
    return this;
  }

  public DescriptorProto addNestedTypeOrBuilderListItem(DescriptorProtoOrBuilder nestedTypeOrBuilderListItem) {
    if (this.nestedTypeOrBuilderList == null) {
      this.nestedTypeOrBuilderList = new ArrayList<DescriptorProtoOrBuilder>();
    }
    this.nestedTypeOrBuilderList.add(nestedTypeOrBuilderListItem);
    return this;
  }

   /**
   * Get nestedTypeOrBuilderList
   * @return nestedTypeOrBuilderList
  **/
  @Schema(description = "")
  public List<DescriptorProtoOrBuilder> getNestedTypeOrBuilderList() {
    return nestedTypeOrBuilderList;
  }

  public void setNestedTypeOrBuilderList(List<DescriptorProtoOrBuilder> nestedTypeOrBuilderList) {
    this.nestedTypeOrBuilderList = nestedTypeOrBuilderList;
  }

  public DescriptorProto extensionRangeOrBuilderList(List<ExtensionRangeOrBuilder> extensionRangeOrBuilderList) {
    this.extensionRangeOrBuilderList = extensionRangeOrBuilderList;
    return this;
  }

  public DescriptorProto addExtensionRangeOrBuilderListItem(ExtensionRangeOrBuilder extensionRangeOrBuilderListItem) {
    if (this.extensionRangeOrBuilderList == null) {
      this.extensionRangeOrBuilderList = new ArrayList<ExtensionRangeOrBuilder>();
    }
    this.extensionRangeOrBuilderList.add(extensionRangeOrBuilderListItem);
    return this;
  }

   /**
   * Get extensionRangeOrBuilderList
   * @return extensionRangeOrBuilderList
  **/
  @Schema(description = "")
  public List<ExtensionRangeOrBuilder> getExtensionRangeOrBuilderList() {
    return extensionRangeOrBuilderList;
  }

  public void setExtensionRangeOrBuilderList(List<ExtensionRangeOrBuilder> extensionRangeOrBuilderList) {
    this.extensionRangeOrBuilderList = extensionRangeOrBuilderList;
  }

  public DescriptorProto extensionRangeCount(Integer extensionRangeCount) {
    this.extensionRangeCount = extensionRangeCount;
    return this;
  }

   /**
   * Get extensionRangeCount
   * @return extensionRangeCount
  **/
  @Schema(description = "")
  public Integer getExtensionRangeCount() {
    return extensionRangeCount;
  }

  public void setExtensionRangeCount(Integer extensionRangeCount) {
    this.extensionRangeCount = extensionRangeCount;
  }

  public DescriptorProto oneofDeclList(List<OneofDescriptorProto> oneofDeclList) {
    this.oneofDeclList = oneofDeclList;
    return this;
  }

  public DescriptorProto addOneofDeclListItem(OneofDescriptorProto oneofDeclListItem) {
    if (this.oneofDeclList == null) {
      this.oneofDeclList = new ArrayList<OneofDescriptorProto>();
    }
    this.oneofDeclList.add(oneofDeclListItem);
    return this;
  }

   /**
   * Get oneofDeclList
   * @return oneofDeclList
  **/
  @Schema(description = "")
  public List<OneofDescriptorProto> getOneofDeclList() {
    return oneofDeclList;
  }

  public void setOneofDeclList(List<OneofDescriptorProto> oneofDeclList) {
    this.oneofDeclList = oneofDeclList;
  }

  public DescriptorProto oneofDeclOrBuilderList(List<OneofDescriptorProtoOrBuilder> oneofDeclOrBuilderList) {
    this.oneofDeclOrBuilderList = oneofDeclOrBuilderList;
    return this;
  }

  public DescriptorProto addOneofDeclOrBuilderListItem(OneofDescriptorProtoOrBuilder oneofDeclOrBuilderListItem) {
    if (this.oneofDeclOrBuilderList == null) {
      this.oneofDeclOrBuilderList = new ArrayList<OneofDescriptorProtoOrBuilder>();
    }
    this.oneofDeclOrBuilderList.add(oneofDeclOrBuilderListItem);
    return this;
  }

   /**
   * Get oneofDeclOrBuilderList
   * @return oneofDeclOrBuilderList
  **/
  @Schema(description = "")
  public List<OneofDescriptorProtoOrBuilder> getOneofDeclOrBuilderList() {
    return oneofDeclOrBuilderList;
  }

  public void setOneofDeclOrBuilderList(List<OneofDescriptorProtoOrBuilder> oneofDeclOrBuilderList) {
    this.oneofDeclOrBuilderList = oneofDeclOrBuilderList;
  }

  public DescriptorProto reservedRangeOrBuilderList(List<ReservedRangeOrBuilder> reservedRangeOrBuilderList) {
    this.reservedRangeOrBuilderList = reservedRangeOrBuilderList;
    return this;
  }

  public DescriptorProto addReservedRangeOrBuilderListItem(ReservedRangeOrBuilder reservedRangeOrBuilderListItem) {
    if (this.reservedRangeOrBuilderList == null) {
      this.reservedRangeOrBuilderList = new ArrayList<ReservedRangeOrBuilder>();
    }
    this.reservedRangeOrBuilderList.add(reservedRangeOrBuilderListItem);
    return this;
  }

   /**
   * Get reservedRangeOrBuilderList
   * @return reservedRangeOrBuilderList
  **/
  @Schema(description = "")
  public List<ReservedRangeOrBuilder> getReservedRangeOrBuilderList() {
    return reservedRangeOrBuilderList;
  }

  public void setReservedRangeOrBuilderList(List<ReservedRangeOrBuilder> reservedRangeOrBuilderList) {
    this.reservedRangeOrBuilderList = reservedRangeOrBuilderList;
  }

  public DescriptorProto reservedRangeCount(Integer reservedRangeCount) {
    this.reservedRangeCount = reservedRangeCount;
    return this;
  }

   /**
   * Get reservedRangeCount
   * @return reservedRangeCount
  **/
  @Schema(description = "")
  public Integer getReservedRangeCount() {
    return reservedRangeCount;
  }

  public void setReservedRangeCount(Integer reservedRangeCount) {
    this.reservedRangeCount = reservedRangeCount;
  }

  public DescriptorProto reservedNameCount(Integer reservedNameCount) {
    this.reservedNameCount = reservedNameCount;
    return this;
  }

   /**
   * Get reservedNameCount
   * @return reservedNameCount
  **/
  @Schema(description = "")
  public Integer getReservedNameCount() {
    return reservedNameCount;
  }

  public void setReservedNameCount(Integer reservedNameCount) {
    this.reservedNameCount = reservedNameCount;
  }

  public DescriptorProto name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DescriptorProto allFields(Map<String, Object> allFields) {
    this.allFields = allFields;
    return this;
  }

  public DescriptorProto putAllFieldsItem(String key, Object allFieldsItem) {
    if (this.allFields == null) {
      this.allFields = new HashMap<String, Object>();
    }
    this.allFields.put(key, allFieldsItem);
    return this;
  }

   /**
   * Get allFields
   * @return allFields
  **/
  @Schema(description = "")
  public Map<String, Object> getAllFields() {
    return allFields;
  }

  public void setAllFields(Map<String, Object> allFields) {
    this.allFields = allFields;
  }

  public DescriptorProto initializationErrorString(String initializationErrorString) {
    this.initializationErrorString = initializationErrorString;
    return this;
  }

   /**
   * Get initializationErrorString
   * @return initializationErrorString
  **/
  @Schema(description = "")
  public String getInitializationErrorString() {
    return initializationErrorString;
  }

  public void setInitializationErrorString(String initializationErrorString) {
    this.initializationErrorString = initializationErrorString;
  }

  public DescriptorProto descriptorForType(Descriptor descriptorForType) {
    this.descriptorForType = descriptorForType;
    return this;
  }

   /**
   * Get descriptorForType
   * @return descriptorForType
  **/
  @Schema(description = "")
  public Descriptor getDescriptorForType() {
    return descriptorForType;
  }

  public void setDescriptorForType(Descriptor descriptorForType) {
    this.descriptorForType = descriptorForType;
  }

  public DescriptorProto memoizedSerializedSize(Integer memoizedSerializedSize) {
    this.memoizedSerializedSize = memoizedSerializedSize;
    return this;
  }

   /**
   * Get memoizedSerializedSize
   * @return memoizedSerializedSize
  **/
  @Schema(description = "")
  public Integer getMemoizedSerializedSize() {
    return memoizedSerializedSize;
  }

  public void setMemoizedSerializedSize(Integer memoizedSerializedSize) {
    this.memoizedSerializedSize = memoizedSerializedSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescriptorProto descriptorProto = (DescriptorProto) o;
    return Objects.equals(this.unknownFields, descriptorProto.unknownFields) &&
        Objects.equals(this.initialized, descriptorProto.initialized) &&
        Objects.equals(this.options, descriptorProto.options) &&
        Objects.equals(this.nameBytes, descriptorProto.nameBytes) &&
        Objects.equals(this.enumTypeList, descriptorProto.enumTypeList) &&
        Objects.equals(this.enumTypeOrBuilderList, descriptorProto.enumTypeOrBuilderList) &&
        Objects.equals(this.fieldList, descriptorProto.fieldList) &&
        Objects.equals(this.oneofDeclCount, descriptorProto.oneofDeclCount) &&
        Objects.equals(this.nestedTypeCount, descriptorProto.nestedTypeCount) &&
        Objects.equals(this.enumTypeCount, descriptorProto.enumTypeCount) &&
        Objects.equals(this.extensionCount, descriptorProto.extensionCount) &&
        Objects.equals(this.fieldCount, descriptorProto.fieldCount) &&
        Objects.equals(this.serializedSize, descriptorProto.serializedSize) &&
        Objects.equals(this.parserForType, descriptorProto.parserForType) &&
        Objects.equals(this.defaultInstanceForType, descriptorProto.defaultInstanceForType) &&
        Objects.equals(this.extensionRangeList, descriptorProto.extensionRangeList) &&
        Objects.equals(this.reservedRangeList, descriptorProto.reservedRangeList) &&
        Objects.equals(this.reservedNameList, descriptorProto.reservedNameList) &&
        Objects.equals(this.extensionList, descriptorProto.extensionList) &&
        Objects.equals(this.extensionOrBuilderList, descriptorProto.extensionOrBuilderList) &&
        Objects.equals(this.optionsOrBuilder, descriptorProto.optionsOrBuilder) &&
        Objects.equals(this.fieldOrBuilderList, descriptorProto.fieldOrBuilderList) &&
        Objects.equals(this.nestedTypeList, descriptorProto.nestedTypeList) &&
        Objects.equals(this.nestedTypeOrBuilderList, descriptorProto.nestedTypeOrBuilderList) &&
        Objects.equals(this.extensionRangeOrBuilderList, descriptorProto.extensionRangeOrBuilderList) &&
        Objects.equals(this.extensionRangeCount, descriptorProto.extensionRangeCount) &&
        Objects.equals(this.oneofDeclList, descriptorProto.oneofDeclList) &&
        Objects.equals(this.oneofDeclOrBuilderList, descriptorProto.oneofDeclOrBuilderList) &&
        Objects.equals(this.reservedRangeOrBuilderList, descriptorProto.reservedRangeOrBuilderList) &&
        Objects.equals(this.reservedRangeCount, descriptorProto.reservedRangeCount) &&
        Objects.equals(this.reservedNameCount, descriptorProto.reservedNameCount) &&
        Objects.equals(this.name, descriptorProto.name) &&
        Objects.equals(this.allFields, descriptorProto.allFields) &&
        Objects.equals(this.initializationErrorString, descriptorProto.initializationErrorString) &&
        Objects.equals(this.descriptorForType, descriptorProto.descriptorForType) &&
        Objects.equals(this.memoizedSerializedSize, descriptorProto.memoizedSerializedSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(unknownFields, initialized, options, nameBytes, enumTypeList, enumTypeOrBuilderList, fieldList, oneofDeclCount, nestedTypeCount, enumTypeCount, extensionCount, fieldCount, serializedSize, parserForType, defaultInstanceForType, extensionRangeList, reservedRangeList, reservedNameList, extensionList, extensionOrBuilderList, optionsOrBuilder, fieldOrBuilderList, nestedTypeList, nestedTypeOrBuilderList, extensionRangeOrBuilderList, extensionRangeCount, oneofDeclList, oneofDeclOrBuilderList, reservedRangeOrBuilderList, reservedRangeCount, reservedNameCount, name, allFields, initializationErrorString, descriptorForType, memoizedSerializedSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescriptorProto {\n");
    
    sb.append("    unknownFields: ").append(toIndentedString(unknownFields)).append("\n");
    sb.append("    initialized: ").append(toIndentedString(initialized)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    nameBytes: ").append(toIndentedString(nameBytes)).append("\n");
    sb.append("    enumTypeList: ").append(toIndentedString(enumTypeList)).append("\n");
    sb.append("    enumTypeOrBuilderList: ").append(toIndentedString(enumTypeOrBuilderList)).append("\n");
    sb.append("    fieldList: ").append(toIndentedString(fieldList)).append("\n");
    sb.append("    oneofDeclCount: ").append(toIndentedString(oneofDeclCount)).append("\n");
    sb.append("    nestedTypeCount: ").append(toIndentedString(nestedTypeCount)).append("\n");
    sb.append("    enumTypeCount: ").append(toIndentedString(enumTypeCount)).append("\n");
    sb.append("    extensionCount: ").append(toIndentedString(extensionCount)).append("\n");
    sb.append("    fieldCount: ").append(toIndentedString(fieldCount)).append("\n");
    sb.append("    serializedSize: ").append(toIndentedString(serializedSize)).append("\n");
    sb.append("    parserForType: ").append(toIndentedString(parserForType)).append("\n");
    sb.append("    defaultInstanceForType: ").append(toIndentedString(defaultInstanceForType)).append("\n");
    sb.append("    extensionRangeList: ").append(toIndentedString(extensionRangeList)).append("\n");
    sb.append("    reservedRangeList: ").append(toIndentedString(reservedRangeList)).append("\n");
    sb.append("    reservedNameList: ").append(toIndentedString(reservedNameList)).append("\n");
    sb.append("    extensionList: ").append(toIndentedString(extensionList)).append("\n");
    sb.append("    extensionOrBuilderList: ").append(toIndentedString(extensionOrBuilderList)).append("\n");
    sb.append("    optionsOrBuilder: ").append(toIndentedString(optionsOrBuilder)).append("\n");
    sb.append("    fieldOrBuilderList: ").append(toIndentedString(fieldOrBuilderList)).append("\n");
    sb.append("    nestedTypeList: ").append(toIndentedString(nestedTypeList)).append("\n");
    sb.append("    nestedTypeOrBuilderList: ").append(toIndentedString(nestedTypeOrBuilderList)).append("\n");
    sb.append("    extensionRangeOrBuilderList: ").append(toIndentedString(extensionRangeOrBuilderList)).append("\n");
    sb.append("    extensionRangeCount: ").append(toIndentedString(extensionRangeCount)).append("\n");
    sb.append("    oneofDeclList: ").append(toIndentedString(oneofDeclList)).append("\n");
    sb.append("    oneofDeclOrBuilderList: ").append(toIndentedString(oneofDeclOrBuilderList)).append("\n");
    sb.append("    reservedRangeOrBuilderList: ").append(toIndentedString(reservedRangeOrBuilderList)).append("\n");
    sb.append("    reservedRangeCount: ").append(toIndentedString(reservedRangeCount)).append("\n");
    sb.append("    reservedNameCount: ").append(toIndentedString(reservedNameCount)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    allFields: ").append(toIndentedString(allFields)).append("\n");
    sb.append("    initializationErrorString: ").append(toIndentedString(initializationErrorString)).append("\n");
    sb.append("    descriptorForType: ").append(toIndentedString(descriptorForType)).append("\n");
    sb.append("    memoizedSerializedSize: ").append(toIndentedString(memoizedSerializedSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

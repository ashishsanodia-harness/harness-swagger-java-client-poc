/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * This contains AWS cost and usage reports attributes
 */
@Schema(description = "This contains AWS cost and usage reports attributes")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class AwsCurAttributes {
  @SerializedName("reportName")
  private String reportName = null;

  @SerializedName("s3BucketName")
  private String s3BucketName = null;

  @SerializedName("region")
  private String region = null;

  @SerializedName("s3Prefix")
  private String s3Prefix = null;

  public AwsCurAttributes reportName(String reportName) {
    this.reportName = reportName;
    return this;
  }

   /**
   * Get reportName
   * @return reportName
  **/
  @Schema(required = true, description = "")
  public String getReportName() {
    return reportName;
  }

  public void setReportName(String reportName) {
    this.reportName = reportName;
  }

  public AwsCurAttributes s3BucketName(String s3BucketName) {
    this.s3BucketName = s3BucketName;
    return this;
  }

   /**
   * Get s3BucketName
   * @return s3BucketName
  **/
  @Schema(required = true, description = "")
  public String getS3BucketName() {
    return s3BucketName;
  }

  public void setS3BucketName(String s3BucketName) {
    this.s3BucketName = s3BucketName;
  }

  public AwsCurAttributes region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public AwsCurAttributes s3Prefix(String s3Prefix) {
    this.s3Prefix = s3Prefix;
    return this;
  }

   /**
   * Get s3Prefix
   * @return s3Prefix
  **/
  @Schema(description = "")
  public String getS3Prefix() {
    return s3Prefix;
  }

  public void setS3Prefix(String s3Prefix) {
    this.s3Prefix = s3Prefix;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AwsCurAttributes awsCurAttributes = (AwsCurAttributes) o;
    return Objects.equals(this.reportName, awsCurAttributes.reportName) &&
        Objects.equals(this.s3BucketName, awsCurAttributes.s3BucketName) &&
        Objects.equals(this.region, awsCurAttributes.region) &&
        Objects.equals(this.s3Prefix, awsCurAttributes.s3Prefix);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reportName, s3BucketName, region, s3Prefix);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AwsCurAttributes {\n");
    
    sb.append("    reportName: ").append(toIndentedString(reportName)).append("\n");
    sb.append("    s3BucketName: ").append(toIndentedString(s3BucketName)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    s3Prefix: ").append(toIndentedString(s3Prefix)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

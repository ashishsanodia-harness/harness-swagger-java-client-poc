/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.PreFlightEntityErrorInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ConnectorCheckResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class ConnectorCheckResponse {
  @SerializedName("connectorIdentifier")
  private String connectorIdentifier = null;

  @SerializedName("errorInfo")
  private PreFlightEntityErrorInfo errorInfo = null;

  @SerializedName("fqn")
  private String fqn = null;

  @SerializedName("stageName")
  private String stageName = null;

  @SerializedName("stageIdentifier")
  private String stageIdentifier = null;

  @SerializedName("stepName")
  private String stepName = null;

  @SerializedName("stepIdentifier")
  private String stepIdentifier = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    SUCCESS("SUCCESS"),
    FAILURE("FAILURE"),
    IN_PROGRESS("IN_PROGRESS"),
    UNKNOWN("UNKNOWN");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  public ConnectorCheckResponse connectorIdentifier(String connectorIdentifier) {
    this.connectorIdentifier = connectorIdentifier;
    return this;
  }

   /**
   * Get connectorIdentifier
   * @return connectorIdentifier
  **/
  @Schema(description = "")
  public String getConnectorIdentifier() {
    return connectorIdentifier;
  }

  public void setConnectorIdentifier(String connectorIdentifier) {
    this.connectorIdentifier = connectorIdentifier;
  }

  public ConnectorCheckResponse errorInfo(PreFlightEntityErrorInfo errorInfo) {
    this.errorInfo = errorInfo;
    return this;
  }

   /**
   * Get errorInfo
   * @return errorInfo
  **/
  @Schema(description = "")
  public PreFlightEntityErrorInfo getErrorInfo() {
    return errorInfo;
  }

  public void setErrorInfo(PreFlightEntityErrorInfo errorInfo) {
    this.errorInfo = errorInfo;
  }

  public ConnectorCheckResponse fqn(String fqn) {
    this.fqn = fqn;
    return this;
  }

   /**
   * Get fqn
   * @return fqn
  **/
  @Schema(description = "")
  public String getFqn() {
    return fqn;
  }

  public void setFqn(String fqn) {
    this.fqn = fqn;
  }

  public ConnectorCheckResponse stageName(String stageName) {
    this.stageName = stageName;
    return this;
  }

   /**
   * Get stageName
   * @return stageName
  **/
  @Schema(description = "")
  public String getStageName() {
    return stageName;
  }

  public void setStageName(String stageName) {
    this.stageName = stageName;
  }

  public ConnectorCheckResponse stageIdentifier(String stageIdentifier) {
    this.stageIdentifier = stageIdentifier;
    return this;
  }

   /**
   * Get stageIdentifier
   * @return stageIdentifier
  **/
  @Schema(description = "")
  public String getStageIdentifier() {
    return stageIdentifier;
  }

  public void setStageIdentifier(String stageIdentifier) {
    this.stageIdentifier = stageIdentifier;
  }

  public ConnectorCheckResponse stepName(String stepName) {
    this.stepName = stepName;
    return this;
  }

   /**
   * Get stepName
   * @return stepName
  **/
  @Schema(description = "")
  public String getStepName() {
    return stepName;
  }

  public void setStepName(String stepName) {
    this.stepName = stepName;
  }

  public ConnectorCheckResponse stepIdentifier(String stepIdentifier) {
    this.stepIdentifier = stepIdentifier;
    return this;
  }

   /**
   * Get stepIdentifier
   * @return stepIdentifier
  **/
  @Schema(description = "")
  public String getStepIdentifier() {
    return stepIdentifier;
  }

  public void setStepIdentifier(String stepIdentifier) {
    this.stepIdentifier = stepIdentifier;
  }

  public ConnectorCheckResponse status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectorCheckResponse connectorCheckResponse = (ConnectorCheckResponse) o;
    return Objects.equals(this.connectorIdentifier, connectorCheckResponse.connectorIdentifier) &&
        Objects.equals(this.errorInfo, connectorCheckResponse.errorInfo) &&
        Objects.equals(this.fqn, connectorCheckResponse.fqn) &&
        Objects.equals(this.stageName, connectorCheckResponse.stageName) &&
        Objects.equals(this.stageIdentifier, connectorCheckResponse.stageIdentifier) &&
        Objects.equals(this.stepName, connectorCheckResponse.stepName) &&
        Objects.equals(this.stepIdentifier, connectorCheckResponse.stepIdentifier) &&
        Objects.equals(this.status, connectorCheckResponse.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectorIdentifier, errorInfo, fqn, stageName, stageIdentifier, stepName, stepIdentifier, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectorCheckResponse {\n");
    
    sb.append("    connectorIdentifier: ").append(toIndentedString(connectorIdentifier)).append("\n");
    sb.append("    errorInfo: ").append(toIndentedString(errorInfo)).append("\n");
    sb.append("    fqn: ").append(toIndentedString(fqn)).append("\n");
    sb.append("    stageName: ").append(toIndentedString(stageName)).append("\n");
    sb.append("    stageIdentifier: ").append(toIndentedString(stageIdentifier)).append("\n");
    sb.append("    stepName: ").append(toIndentedString(stepName)).append("\n");
    sb.append("    stepIdentifier: ").append(toIndentedString(stepIdentifier)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

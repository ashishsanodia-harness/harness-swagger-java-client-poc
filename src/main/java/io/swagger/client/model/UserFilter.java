/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * UserFilter
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class UserFilter {
  @SerializedName("searchTerm")
  private String searchTerm = null;

  @SerializedName("identifiers")
  private List<String> identifiers = null;

  /**
   * Gets or Sets parentFilter
   */
  @JsonAdapter(ParentFilterEnum.Adapter.class)
  public enum ParentFilterEnum {
    NO_PARENT_SCOPES("NO_PARENT_SCOPES"),
    INCLUDE_PARENT_SCOPES("INCLUDE_PARENT_SCOPES"),
    STRICTLY_PARENT_SCOPES("STRICTLY_PARENT_SCOPES");

    private String value;

    ParentFilterEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ParentFilterEnum fromValue(String input) {
      for (ParentFilterEnum b : ParentFilterEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ParentFilterEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ParentFilterEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ParentFilterEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ParentFilterEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("parentFilter")
  private ParentFilterEnum parentFilter = null;

  public UserFilter searchTerm(String searchTerm) {
    this.searchTerm = searchTerm;
    return this;
  }

   /**
   * This string will be used to filter the results. Details of all the users having this string in their name or email address will be filtered.
   * @return searchTerm
  **/
  @Schema(description = "This string will be used to filter the results. Details of all the users having this string in their name or email address will be filtered.")
  public String getSearchTerm() {
    return searchTerm;
  }

  public void setSearchTerm(String searchTerm) {
    this.searchTerm = searchTerm;
  }

  public UserFilter identifiers(List<String> identifiers) {
    this.identifiers = identifiers;
    return this;
  }

  public UserFilter addIdentifiersItem(String identifiersItem) {
    if (this.identifiers == null) {
      this.identifiers = new ArrayList<String>();
    }
    this.identifiers.add(identifiersItem);
    return this;
  }

   /**
   * Filter by User Identifiers
   * @return identifiers
  **/
  @Schema(description = "Filter by User Identifiers")
  public List<String> getIdentifiers() {
    return identifiers;
  }

  public void setIdentifiers(List<String> identifiers) {
    this.identifiers = identifiers;
  }

  public UserFilter parentFilter(ParentFilterEnum parentFilter) {
    this.parentFilter = parentFilter;
    return this;
  }

   /**
   * Get parentFilter
   * @return parentFilter
  **/
  @Schema(description = "")
  public ParentFilterEnum getParentFilter() {
    return parentFilter;
  }

  public void setParentFilter(ParentFilterEnum parentFilter) {
    this.parentFilter = parentFilter;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserFilter userFilter = (UserFilter) o;
    return Objects.equals(this.searchTerm, userFilter.searchTerm) &&
        Objects.equals(this.identifiers, userFilter.identifiers) &&
        Objects.equals(this.parentFilter, userFilter.parentFilter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(searchTerm, identifiers, parentFilter);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserFilter {\n");
    
    sb.append("    searchTerm: ").append(toIndentedString(searchTerm)).append("\n");
    sb.append("    identifiers: ").append(toIndentedString(identifiers)).append("\n");
    sb.append("    parentFilter: ").append(toIndentedString(parentFilter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

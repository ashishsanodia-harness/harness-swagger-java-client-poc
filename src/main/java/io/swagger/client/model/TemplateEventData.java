/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AuditEventData;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * TemplateEventData
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class TemplateEventData extends AuditEventData {
  @SerializedName("comments")
  private String comments = null;

  @SerializedName("templateUpdateEventType")
  private String templateUpdateEventType = null;

  public TemplateEventData comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @Schema(description = "")
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }

  public TemplateEventData templateUpdateEventType(String templateUpdateEventType) {
    this.templateUpdateEventType = templateUpdateEventType;
    return this;
  }

   /**
   * Get templateUpdateEventType
   * @return templateUpdateEventType
  **/
  @Schema(description = "")
  public String getTemplateUpdateEventType() {
    return templateUpdateEventType;
  }

  public void setTemplateUpdateEventType(String templateUpdateEventType) {
    this.templateUpdateEventType = templateUpdateEventType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TemplateEventData templateEventData = (TemplateEventData) o;
    return Objects.equals(this.comments, templateEventData.comments) &&
        Objects.equals(this.templateUpdateEventType, templateEventData.templateUpdateEventType) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(comments, templateUpdateEventType, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TemplateEventData {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    templateUpdateEventType: ").append(toIndentedString(templateUpdateEventType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

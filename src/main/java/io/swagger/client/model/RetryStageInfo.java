/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * This is stage level info in Retry Failed Pipeline
 */
@Schema(description = "This is stage level info in Retry Failed Pipeline")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class RetryStageInfo {
  @SerializedName("name")
  private String name = null;

  @SerializedName("identifier")
  private String identifier = null;

  /**
   * This is the Execution Status of the entity
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    RUNNING("RUNNING"),
    ASYNCWAITING("ASYNCWAITING"),
    TASKWAITING("TASKWAITING"),
    TIMEDWAITING("TIMEDWAITING"),
    FAILED("FAILED"),
    ERRORED("ERRORED"),
    IGNOREFAILED("IGNOREFAILED"),
    NOTSTARTED("NOTSTARTED"),
    EXPIRED("EXPIRED"),
    ABORTED("ABORTED"),
    DISCONTINUING("DISCONTINUING"),
    QUEUED("QUEUED"),
    PAUSED("PAUSED"),
    RESOURCEWAITING("RESOURCEWAITING"),
    INTERVENTIONWAITING("INTERVENTIONWAITING"),
    APPROVALWAITING("APPROVALWAITING"),
    SUCCESS("SUCCESS"),
    SUSPENDED("SUSPENDED"),
    SKIPPED("SKIPPED"),
    PAUSING("PAUSING"),
    APPROVALREJECTED("APPROVALREJECTED"),
    NOT_STARTED("NOT_STARTED"),
    INTERVENTION_WAITING("INTERVENTION_WAITING"),
    APPROVAL_WAITING("APPROVAL_WAITING"),
    APPROVAL_REJECTED("APPROVAL_REJECTED"),
    WAITING("WAITING");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("createdAt")
  private Long createdAt = null;

  @SerializedName("parentId")
  private String parentId = null;

  @SerializedName("nextId")
  private String nextId = null;

  public RetryStageInfo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public RetryStageInfo identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @Schema(description = "")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public RetryStageInfo status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * This is the Execution Status of the entity
   * @return status
  **/
  @Schema(description = "This is the Execution Status of the entity")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public RetryStageInfo createdAt(Long createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public Long getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(Long createdAt) {
    this.createdAt = createdAt;
  }

  public RetryStageInfo parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * Get parentId
   * @return parentId
  **/
  @Schema(description = "")
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  public RetryStageInfo nextId(String nextId) {
    this.nextId = nextId;
    return this;
  }

   /**
   * Get nextId
   * @return nextId
  **/
  @Schema(description = "")
  public String getNextId() {
    return nextId;
  }

  public void setNextId(String nextId) {
    this.nextId = nextId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetryStageInfo retryStageInfo = (RetryStageInfo) o;
    return Objects.equals(this.name, retryStageInfo.name) &&
        Objects.equals(this.identifier, retryStageInfo.identifier) &&
        Objects.equals(this.status, retryStageInfo.status) &&
        Objects.equals(this.createdAt, retryStageInfo.createdAt) &&
        Objects.equals(this.parentId, retryStageInfo.parentId) &&
        Objects.equals(this.nextId, retryStageInfo.nextId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, identifier, status, createdAt, parentId, nextId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetryStageInfo {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    nextId: ").append(toIndentedString(nextId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

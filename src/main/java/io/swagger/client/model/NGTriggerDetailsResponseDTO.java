/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.BuildDetails;
import io.swagger.client.model.LastTriggerExecutionDetails;
import io.swagger.client.model.TriggerStatus;
import io.swagger.client.model.WebhookDetails;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * NGTriggerDetailsResponseDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class NGTriggerDetailsResponseDTO {
  @SerializedName("name")
  private String name = null;

  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("description")
  private String description = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    WEBHOOK("WEBHOOK"),
    ARTIFACT("ARTIFACT"),
    MANIFEST("MANIFEST"),
    SCHEDULED("SCHEDULED");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("triggerStatus")
  private TriggerStatus triggerStatus = null;

  @SerializedName("lastTriggerExecutionDetails")
  private LastTriggerExecutionDetails lastTriggerExecutionDetails = null;

  @SerializedName("webhookDetails")
  private WebhookDetails webhookDetails = null;

  @SerializedName("buildDetails")
  private BuildDetails buildDetails = null;

  @SerializedName("tags")
  private Map<String, String> tags = null;

  @SerializedName("executions")
  private List<Integer> executions = null;

  @SerializedName("yaml")
  private String yaml = null;

  @SerializedName("webhookUrl")
  private String webhookUrl = null;

  /**
   * Gets or Sets registrationStatus
   */
  @JsonAdapter(RegistrationStatusEnum.Adapter.class)
  public enum RegistrationStatusEnum {
    SUCCESS("SUCCESS"),
    FAILED("FAILED"),
    ERROR("ERROR"),
    TIMEOUT("TIMEOUT"),
    UNAVAILABLE("UNAVAILABLE");

    private String value;

    RegistrationStatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static RegistrationStatusEnum fromValue(String input) {
      for (RegistrationStatusEnum b : RegistrationStatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<RegistrationStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RegistrationStatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public RegistrationStatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return RegistrationStatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("registrationStatus")
  private RegistrationStatusEnum registrationStatus = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  public NGTriggerDetailsResponseDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public NGTriggerDetailsResponseDTO identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @Schema(description = "")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public NGTriggerDetailsResponseDTO description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public NGTriggerDetailsResponseDTO type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public NGTriggerDetailsResponseDTO triggerStatus(TriggerStatus triggerStatus) {
    this.triggerStatus = triggerStatus;
    return this;
  }

   /**
   * Get triggerStatus
   * @return triggerStatus
  **/
  @Schema(description = "")
  public TriggerStatus getTriggerStatus() {
    return triggerStatus;
  }

  public void setTriggerStatus(TriggerStatus triggerStatus) {
    this.triggerStatus = triggerStatus;
  }

  public NGTriggerDetailsResponseDTO lastTriggerExecutionDetails(LastTriggerExecutionDetails lastTriggerExecutionDetails) {
    this.lastTriggerExecutionDetails = lastTriggerExecutionDetails;
    return this;
  }

   /**
   * Get lastTriggerExecutionDetails
   * @return lastTriggerExecutionDetails
  **/
  @Schema(description = "")
  public LastTriggerExecutionDetails getLastTriggerExecutionDetails() {
    return lastTriggerExecutionDetails;
  }

  public void setLastTriggerExecutionDetails(LastTriggerExecutionDetails lastTriggerExecutionDetails) {
    this.lastTriggerExecutionDetails = lastTriggerExecutionDetails;
  }

  public NGTriggerDetailsResponseDTO webhookDetails(WebhookDetails webhookDetails) {
    this.webhookDetails = webhookDetails;
    return this;
  }

   /**
   * Get webhookDetails
   * @return webhookDetails
  **/
  @Schema(description = "")
  public WebhookDetails getWebhookDetails() {
    return webhookDetails;
  }

  public void setWebhookDetails(WebhookDetails webhookDetails) {
    this.webhookDetails = webhookDetails;
  }

  public NGTriggerDetailsResponseDTO buildDetails(BuildDetails buildDetails) {
    this.buildDetails = buildDetails;
    return this;
  }

   /**
   * Get buildDetails
   * @return buildDetails
  **/
  @Schema(description = "")
  public BuildDetails getBuildDetails() {
    return buildDetails;
  }

  public void setBuildDetails(BuildDetails buildDetails) {
    this.buildDetails = buildDetails;
  }

  public NGTriggerDetailsResponseDTO tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public NGTriggerDetailsResponseDTO putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<String, String>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }

  public NGTriggerDetailsResponseDTO executions(List<Integer> executions) {
    this.executions = executions;
    return this;
  }

  public NGTriggerDetailsResponseDTO addExecutionsItem(Integer executionsItem) {
    if (this.executions == null) {
      this.executions = new ArrayList<Integer>();
    }
    this.executions.add(executionsItem);
    return this;
  }

   /**
   * Get executions
   * @return executions
  **/
  @Schema(description = "")
  public List<Integer> getExecutions() {
    return executions;
  }

  public void setExecutions(List<Integer> executions) {
    this.executions = executions;
  }

  public NGTriggerDetailsResponseDTO yaml(String yaml) {
    this.yaml = yaml;
    return this;
  }

   /**
   * Get yaml
   * @return yaml
  **/
  @Schema(description = "")
  public String getYaml() {
    return yaml;
  }

  public void setYaml(String yaml) {
    this.yaml = yaml;
  }

  public NGTriggerDetailsResponseDTO webhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
    return this;
  }

   /**
   * Get webhookUrl
   * @return webhookUrl
  **/
  @Schema(description = "")
  public String getWebhookUrl() {
    return webhookUrl;
  }

  public void setWebhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
  }

  public NGTriggerDetailsResponseDTO registrationStatus(RegistrationStatusEnum registrationStatus) {
    this.registrationStatus = registrationStatus;
    return this;
  }

   /**
   * Get registrationStatus
   * @return registrationStatus
  **/
  @Schema(description = "")
  public RegistrationStatusEnum getRegistrationStatus() {
    return registrationStatus;
  }

  public void setRegistrationStatus(RegistrationStatusEnum registrationStatus) {
    this.registrationStatus = registrationStatus;
  }

  public NGTriggerDetailsResponseDTO enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(description = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NGTriggerDetailsResponseDTO ngTriggerDetailsResponseDTO = (NGTriggerDetailsResponseDTO) o;
    return Objects.equals(this.name, ngTriggerDetailsResponseDTO.name) &&
        Objects.equals(this.identifier, ngTriggerDetailsResponseDTO.identifier) &&
        Objects.equals(this.description, ngTriggerDetailsResponseDTO.description) &&
        Objects.equals(this.type, ngTriggerDetailsResponseDTO.type) &&
        Objects.equals(this.triggerStatus, ngTriggerDetailsResponseDTO.triggerStatus) &&
        Objects.equals(this.lastTriggerExecutionDetails, ngTriggerDetailsResponseDTO.lastTriggerExecutionDetails) &&
        Objects.equals(this.webhookDetails, ngTriggerDetailsResponseDTO.webhookDetails) &&
        Objects.equals(this.buildDetails, ngTriggerDetailsResponseDTO.buildDetails) &&
        Objects.equals(this.tags, ngTriggerDetailsResponseDTO.tags) &&
        Objects.equals(this.executions, ngTriggerDetailsResponseDTO.executions) &&
        Objects.equals(this.yaml, ngTriggerDetailsResponseDTO.yaml) &&
        Objects.equals(this.webhookUrl, ngTriggerDetailsResponseDTO.webhookUrl) &&
        Objects.equals(this.registrationStatus, ngTriggerDetailsResponseDTO.registrationStatus) &&
        Objects.equals(this.enabled, ngTriggerDetailsResponseDTO.enabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, identifier, description, type, triggerStatus, lastTriggerExecutionDetails, webhookDetails, buildDetails, tags, executions, yaml, webhookUrl, registrationStatus, enabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NGTriggerDetailsResponseDTO {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    triggerStatus: ").append(toIndentedString(triggerStatus)).append("\n");
    sb.append("    lastTriggerExecutionDetails: ").append(toIndentedString(lastTriggerExecutionDetails)).append("\n");
    sb.append("    webhookDetails: ").append(toIndentedString(webhookDetails)).append("\n");
    sb.append("    buildDetails: ").append(toIndentedString(buildDetails)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    executions: ").append(toIndentedString(executions)).append("\n");
    sb.append("    yaml: ").append(toIndentedString(yaml)).append("\n");
    sb.append("    webhookUrl: ").append(toIndentedString(webhookUrl)).append("\n");
    sb.append("    registrationStatus: ").append(toIndentedString(registrationStatus)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

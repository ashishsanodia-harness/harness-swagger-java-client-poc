/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * This contains details of Root Folder
 */
@Schema(description = "This contains details of Root Folder")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class GitSyncFolderConfig {
  @SerializedName("rootFolder")
  private String rootFolder = null;

  @SerializedName("isDefault")
  private Boolean isDefault = null;

  public GitSyncFolderConfig rootFolder(String rootFolder) {
    this.rootFolder = rootFolder;
    return this;
  }

   /**
   * Root Folder Name
   * @return rootFolder
  **/
  @Schema(description = "Root Folder Name")
  public String getRootFolder() {
    return rootFolder;
  }

  public void setRootFolder(String rootFolder) {
    this.rootFolder = rootFolder;
  }

  public GitSyncFolderConfig isDefault(Boolean isDefault) {
    this.isDefault = isDefault;
    return this;
  }

   /**
   * This checks if the folder is the default folder
   * @return isDefault
  **/
  @Schema(description = "This checks if the folder is the default folder")
  public Boolean isIsDefault() {
    return isDefault;
  }

  public void setIsDefault(Boolean isDefault) {
    this.isDefault = isDefault;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GitSyncFolderConfig gitSyncFolderConfig = (GitSyncFolderConfig) o;
    return Objects.equals(this.rootFolder, gitSyncFolderConfig.rootFolder) &&
        Objects.equals(this.isDefault, gitSyncFolderConfig.isDefault);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rootFolder, isDefault);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GitSyncFolderConfig {\n");
    
    sb.append("    rootFolder: ").append(toIndentedString(rootFolder)).append("\n");
    sb.append("    isDefault: ").append(toIndentedString(isDefault)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

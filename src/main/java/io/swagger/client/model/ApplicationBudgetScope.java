/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.BudgetScope;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ApplicationBudgetScope
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class ApplicationBudgetScope extends BudgetScope {
  @SerializedName("applicationIds")
  private List<String> applicationIds = null;

  /**
   * Gets or Sets environmentType
   */
  @JsonAdapter(EnvironmentTypeEnum.Adapter.class)
  public enum EnvironmentTypeEnum {
    PROD("PROD"),
    NON_PROD("NON_PROD"),
    ALL("ALL");

    private String value;

    EnvironmentTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static EnvironmentTypeEnum fromValue(String input) {
      for (EnvironmentTypeEnum b : EnvironmentTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<EnvironmentTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EnvironmentTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public EnvironmentTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return EnvironmentTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("environmentType")
  private EnvironmentTypeEnum environmentType = null;

  public ApplicationBudgetScope applicationIds(List<String> applicationIds) {
    this.applicationIds = applicationIds;
    return this;
  }

  public ApplicationBudgetScope addApplicationIdsItem(String applicationIdsItem) {
    if (this.applicationIds == null) {
      this.applicationIds = new ArrayList<String>();
    }
    this.applicationIds.add(applicationIdsItem);
    return this;
  }

   /**
   * Get applicationIds
   * @return applicationIds
  **/
  @Schema(description = "")
  public List<String> getApplicationIds() {
    return applicationIds;
  }

  public void setApplicationIds(List<String> applicationIds) {
    this.applicationIds = applicationIds;
  }

  public ApplicationBudgetScope environmentType(EnvironmentTypeEnum environmentType) {
    this.environmentType = environmentType;
    return this;
  }

   /**
   * Get environmentType
   * @return environmentType
  **/
  @Schema(description = "")
  public EnvironmentTypeEnum getEnvironmentType() {
    return environmentType;
  }

  public void setEnvironmentType(EnvironmentTypeEnum environmentType) {
    this.environmentType = environmentType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationBudgetScope applicationBudgetScope = (ApplicationBudgetScope) o;
    return Objects.equals(this.applicationIds, applicationBudgetScope.applicationIds) &&
        Objects.equals(this.environmentType, applicationBudgetScope.environmentType) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationIds, environmentType, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationBudgetScope {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    applicationIds: ").append(toIndentedString(applicationIds)).append("\n");
    sb.append("    environmentType: ").append(toIndentedString(environmentType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

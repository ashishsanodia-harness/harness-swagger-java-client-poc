/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.InputSetErrorWrapperDTOPMS;
import io.swagger.client.model.PipelineEntityGitDetails;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * This contains Input Set details.
 */
@Schema(description = "This contains Input Set details.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class InputSetResponse {
  @SerializedName("accountId")
  private String accountId = null;

  @SerializedName("orgIdentifier")
  private String orgIdentifier = null;

  @SerializedName("projectIdentifier")
  private String projectIdentifier = null;

  @SerializedName("pipelineIdentifier")
  private String pipelineIdentifier = null;

  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("inputSetYaml")
  private String inputSetYaml = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("tags")
  private Map<String, String> tags = null;

  @SerializedName("isOutdated")
  private Boolean isOutdated = null;

  @SerializedName("isErrorResponse")
  private Boolean isErrorResponse = null;

  @SerializedName("inputSetErrorWrapper")
  private InputSetErrorWrapperDTOPMS inputSetErrorWrapper = null;

  @SerializedName("version")
  private Long version = null;

  @SerializedName("gitDetails")
  private PipelineEntityGitDetails gitDetails = null;

  @SerializedName("entityValidityDetails")
  private PipelineEntityGitDetails entityValidityDetails = null;

  @SerializedName("errorResponse")
  private Boolean errorResponse = null;

  @SerializedName("outdated")
  private Boolean outdated = null;

  public InputSetResponse accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @Schema(description = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public InputSetResponse orgIdentifier(String orgIdentifier) {
    this.orgIdentifier = orgIdentifier;
    return this;
  }

   /**
   * Get orgIdentifier
   * @return orgIdentifier
  **/
  @Schema(description = "")
  public String getOrgIdentifier() {
    return orgIdentifier;
  }

  public void setOrgIdentifier(String orgIdentifier) {
    this.orgIdentifier = orgIdentifier;
  }

  public InputSetResponse projectIdentifier(String projectIdentifier) {
    this.projectIdentifier = projectIdentifier;
    return this;
  }

   /**
   * Get projectIdentifier
   * @return projectIdentifier
  **/
  @Schema(description = "")
  public String getProjectIdentifier() {
    return projectIdentifier;
  }

  public void setProjectIdentifier(String projectIdentifier) {
    this.projectIdentifier = projectIdentifier;
  }

  public InputSetResponse pipelineIdentifier(String pipelineIdentifier) {
    this.pipelineIdentifier = pipelineIdentifier;
    return this;
  }

   /**
   * Get pipelineIdentifier
   * @return pipelineIdentifier
  **/
  @Schema(description = "")
  public String getPipelineIdentifier() {
    return pipelineIdentifier;
  }

  public void setPipelineIdentifier(String pipelineIdentifier) {
    this.pipelineIdentifier = pipelineIdentifier;
  }

  public InputSetResponse identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @Schema(description = "")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public InputSetResponse inputSetYaml(String inputSetYaml) {
    this.inputSetYaml = inputSetYaml;
    return this;
  }

   /**
   * Get inputSetYaml
   * @return inputSetYaml
  **/
  @Schema(description = "")
  public String getInputSetYaml() {
    return inputSetYaml;
  }

  public void setInputSetYaml(String inputSetYaml) {
    this.inputSetYaml = inputSetYaml;
  }

  public InputSetResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InputSetResponse description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public InputSetResponse tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public InputSetResponse putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<String, String>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }

  public InputSetResponse isOutdated(Boolean isOutdated) {
    this.isOutdated = isOutdated;
    return this;
  }

   /**
   * Get isOutdated
   * @return isOutdated
  **/
  @Schema(description = "")
  public Boolean isIsOutdated() {
    return isOutdated;
  }

  public void setIsOutdated(Boolean isOutdated) {
    this.isOutdated = isOutdated;
  }

  public InputSetResponse isErrorResponse(Boolean isErrorResponse) {
    this.isErrorResponse = isErrorResponse;
    return this;
  }

   /**
   * Get isErrorResponse
   * @return isErrorResponse
  **/
  @Schema(description = "")
  public Boolean isIsErrorResponse() {
    return isErrorResponse;
  }

  public void setIsErrorResponse(Boolean isErrorResponse) {
    this.isErrorResponse = isErrorResponse;
  }

  public InputSetResponse inputSetErrorWrapper(InputSetErrorWrapperDTOPMS inputSetErrorWrapper) {
    this.inputSetErrorWrapper = inputSetErrorWrapper;
    return this;
  }

   /**
   * Get inputSetErrorWrapper
   * @return inputSetErrorWrapper
  **/
  @Schema(description = "")
  public InputSetErrorWrapperDTOPMS getInputSetErrorWrapper() {
    return inputSetErrorWrapper;
  }

  public void setInputSetErrorWrapper(InputSetErrorWrapperDTOPMS inputSetErrorWrapper) {
    this.inputSetErrorWrapper = inputSetErrorWrapper;
  }

  public InputSetResponse version(Long version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public Long getVersion() {
    return version;
  }

  public void setVersion(Long version) {
    this.version = version;
  }

  public InputSetResponse gitDetails(PipelineEntityGitDetails gitDetails) {
    this.gitDetails = gitDetails;
    return this;
  }

   /**
   * Get gitDetails
   * @return gitDetails
  **/
  @Schema(description = "")
  public PipelineEntityGitDetails getGitDetails() {
    return gitDetails;
  }

  public void setGitDetails(PipelineEntityGitDetails gitDetails) {
    this.gitDetails = gitDetails;
  }

  public InputSetResponse entityValidityDetails(PipelineEntityGitDetails entityValidityDetails) {
    this.entityValidityDetails = entityValidityDetails;
    return this;
  }

   /**
   * Get entityValidityDetails
   * @return entityValidityDetails
  **/
  @Schema(description = "")
  public PipelineEntityGitDetails getEntityValidityDetails() {
    return entityValidityDetails;
  }

  public void setEntityValidityDetails(PipelineEntityGitDetails entityValidityDetails) {
    this.entityValidityDetails = entityValidityDetails;
  }

  public InputSetResponse errorResponse(Boolean errorResponse) {
    this.errorResponse = errorResponse;
    return this;
  }

   /**
   * Get errorResponse
   * @return errorResponse
  **/
  @Schema(description = "")
  public Boolean isErrorResponse() {
    return errorResponse;
  }

  public void setErrorResponse(Boolean errorResponse) {
    this.errorResponse = errorResponse;
  }

  public InputSetResponse outdated(Boolean outdated) {
    this.outdated = outdated;
    return this;
  }

   /**
   * Get outdated
   * @return outdated
  **/
  @Schema(description = "")
  public Boolean isOutdated() {
    return outdated;
  }

  public void setOutdated(Boolean outdated) {
    this.outdated = outdated;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InputSetResponse inputSetResponse = (InputSetResponse) o;
    return Objects.equals(this.accountId, inputSetResponse.accountId) &&
        Objects.equals(this.orgIdentifier, inputSetResponse.orgIdentifier) &&
        Objects.equals(this.projectIdentifier, inputSetResponse.projectIdentifier) &&
        Objects.equals(this.pipelineIdentifier, inputSetResponse.pipelineIdentifier) &&
        Objects.equals(this.identifier, inputSetResponse.identifier) &&
        Objects.equals(this.inputSetYaml, inputSetResponse.inputSetYaml) &&
        Objects.equals(this.name, inputSetResponse.name) &&
        Objects.equals(this.description, inputSetResponse.description) &&
        Objects.equals(this.tags, inputSetResponse.tags) &&
        Objects.equals(this.isOutdated, inputSetResponse.isOutdated) &&
        Objects.equals(this.isErrorResponse, inputSetResponse.isErrorResponse) &&
        Objects.equals(this.inputSetErrorWrapper, inputSetResponse.inputSetErrorWrapper) &&
        Objects.equals(this.version, inputSetResponse.version) &&
        Objects.equals(this.gitDetails, inputSetResponse.gitDetails) &&
        Objects.equals(this.entityValidityDetails, inputSetResponse.entityValidityDetails) &&
        Objects.equals(this.errorResponse, inputSetResponse.errorResponse) &&
        Objects.equals(this.outdated, inputSetResponse.outdated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, orgIdentifier, projectIdentifier, pipelineIdentifier, identifier, inputSetYaml, name, description, tags, isOutdated, isErrorResponse, inputSetErrorWrapper, version, gitDetails, entityValidityDetails, errorResponse, outdated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InputSetResponse {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    orgIdentifier: ").append(toIndentedString(orgIdentifier)).append("\n");
    sb.append("    projectIdentifier: ").append(toIndentedString(projectIdentifier)).append("\n");
    sb.append("    pipelineIdentifier: ").append(toIndentedString(pipelineIdentifier)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    inputSetYaml: ").append(toIndentedString(inputSetYaml)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    isOutdated: ").append(toIndentedString(isOutdated)).append("\n");
    sb.append("    isErrorResponse: ").append(toIndentedString(isErrorResponse)).append("\n");
    sb.append("    inputSetErrorWrapper: ").append(toIndentedString(inputSetErrorWrapper)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    gitDetails: ").append(toIndentedString(gitDetails)).append("\n");
    sb.append("    entityValidityDetails: ").append(toIndentedString(entityValidityDetails)).append("\n");
    sb.append("    errorResponse: ").append(toIndentedString(errorResponse)).append("\n");
    sb.append("    outdated: ").append(toIndentedString(outdated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * CcmConnectorFilter
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class CcmConnectorFilter {
  /**
   * Gets or Sets featuresEnabled
   */
  @JsonAdapter(FeaturesEnabledEnum.Adapter.class)
  public enum FeaturesEnabledEnum {
    BILLING("BILLING"),
    OPTIMIZATION("OPTIMIZATION"),
    VISIBILITY("VISIBILITY");

    private String value;

    FeaturesEnabledEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static FeaturesEnabledEnum fromValue(String input) {
      for (FeaturesEnabledEnum b : FeaturesEnabledEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<FeaturesEnabledEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FeaturesEnabledEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public FeaturesEnabledEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return FeaturesEnabledEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("featuresEnabled")
  private List<FeaturesEnabledEnum> featuresEnabled = null;

  @SerializedName("awsAccountId")
  private String awsAccountId = null;

  @SerializedName("azureSubscriptionId")
  private String azureSubscriptionId = null;

  @SerializedName("azureTenantId")
  private String azureTenantId = null;

  @SerializedName("gcpProjectId")
  private String gcpProjectId = null;

  @SerializedName("k8sConnectorRef")
  private String k8sConnectorRef = null;

  public CcmConnectorFilter featuresEnabled(List<FeaturesEnabledEnum> featuresEnabled) {
    this.featuresEnabled = featuresEnabled;
    return this;
  }

  public CcmConnectorFilter addFeaturesEnabledItem(FeaturesEnabledEnum featuresEnabledItem) {
    if (this.featuresEnabled == null) {
      this.featuresEnabled = new ArrayList<FeaturesEnabledEnum>();
    }
    this.featuresEnabled.add(featuresEnabledItem);
    return this;
  }

   /**
   * Get featuresEnabled
   * @return featuresEnabled
  **/
  @Schema(description = "")
  public List<FeaturesEnabledEnum> getFeaturesEnabled() {
    return featuresEnabled;
  }

  public void setFeaturesEnabled(List<FeaturesEnabledEnum> featuresEnabled) {
    this.featuresEnabled = featuresEnabled;
  }

  public CcmConnectorFilter awsAccountId(String awsAccountId) {
    this.awsAccountId = awsAccountId;
    return this;
  }

   /**
   * Get awsAccountId
   * @return awsAccountId
  **/
  @Schema(description = "")
  public String getAwsAccountId() {
    return awsAccountId;
  }

  public void setAwsAccountId(String awsAccountId) {
    this.awsAccountId = awsAccountId;
  }

  public CcmConnectorFilter azureSubscriptionId(String azureSubscriptionId) {
    this.azureSubscriptionId = azureSubscriptionId;
    return this;
  }

   /**
   * Get azureSubscriptionId
   * @return azureSubscriptionId
  **/
  @Schema(description = "")
  public String getAzureSubscriptionId() {
    return azureSubscriptionId;
  }

  public void setAzureSubscriptionId(String azureSubscriptionId) {
    this.azureSubscriptionId = azureSubscriptionId;
  }

  public CcmConnectorFilter azureTenantId(String azureTenantId) {
    this.azureTenantId = azureTenantId;
    return this;
  }

   /**
   * Get azureTenantId
   * @return azureTenantId
  **/
  @Schema(description = "")
  public String getAzureTenantId() {
    return azureTenantId;
  }

  public void setAzureTenantId(String azureTenantId) {
    this.azureTenantId = azureTenantId;
  }

  public CcmConnectorFilter gcpProjectId(String gcpProjectId) {
    this.gcpProjectId = gcpProjectId;
    return this;
  }

   /**
   * Get gcpProjectId
   * @return gcpProjectId
  **/
  @Schema(description = "")
  public String getGcpProjectId() {
    return gcpProjectId;
  }

  public void setGcpProjectId(String gcpProjectId) {
    this.gcpProjectId = gcpProjectId;
  }

  public CcmConnectorFilter k8sConnectorRef(String k8sConnectorRef) {
    this.k8sConnectorRef = k8sConnectorRef;
    return this;
  }

   /**
   * Get k8sConnectorRef
   * @return k8sConnectorRef
  **/
  @Schema(description = "")
  public String getK8sConnectorRef() {
    return k8sConnectorRef;
  }

  public void setK8sConnectorRef(String k8sConnectorRef) {
    this.k8sConnectorRef = k8sConnectorRef;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CcmConnectorFilter ccmConnectorFilter = (CcmConnectorFilter) o;
    return Objects.equals(this.featuresEnabled, ccmConnectorFilter.featuresEnabled) &&
        Objects.equals(this.awsAccountId, ccmConnectorFilter.awsAccountId) &&
        Objects.equals(this.azureSubscriptionId, ccmConnectorFilter.azureSubscriptionId) &&
        Objects.equals(this.azureTenantId, ccmConnectorFilter.azureTenantId) &&
        Objects.equals(this.gcpProjectId, ccmConnectorFilter.gcpProjectId) &&
        Objects.equals(this.k8sConnectorRef, ccmConnectorFilter.k8sConnectorRef);
  }

  @Override
  public int hashCode() {
    return Objects.hash(featuresEnabled, awsAccountId, azureSubscriptionId, azureTenantId, gcpProjectId, k8sConnectorRef);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CcmConnectorFilter {\n");
    
    sb.append("    featuresEnabled: ").append(toIndentedString(featuresEnabled)).append("\n");
    sb.append("    awsAccountId: ").append(toIndentedString(awsAccountId)).append("\n");
    sb.append("    azureSubscriptionId: ").append(toIndentedString(azureSubscriptionId)).append("\n");
    sb.append("    azureTenantId: ").append(toIndentedString(azureTenantId)).append("\n");
    sb.append("    gcpProjectId: ").append(toIndentedString(gcpProjectId)).append("\n");
    sb.append("    k8sConnectorRef: ").append(toIndentedString(k8sConnectorRef)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

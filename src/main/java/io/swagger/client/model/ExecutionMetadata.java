/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ByteString;
import io.swagger.client.model.Descriptor;
import io.swagger.client.model.ExecutionMetadata;
import io.swagger.client.model.ExecutionPrincipalInfo;
import io.swagger.client.model.ExecutionPrincipalInfoOrBuilder;
import io.swagger.client.model.ExecutionTriggerInfo;
import io.swagger.client.model.ExecutionTriggerInfoOrBuilder;
import io.swagger.client.model.ParserExecutionMetadata;
import io.swagger.client.model.RetryExecutionInfo;
import io.swagger.client.model.RetryExecutionInfoOrBuilder;
import io.swagger.client.model.UnknownFieldSet;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * ExecutionMetadata
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class ExecutionMetadata {
  @SerializedName("unknownFields")
  private UnknownFieldSet unknownFields = null;

  @SerializedName("initialized")
  private Boolean initialized = null;

  @SerializedName("principalInfo")
  private ExecutionPrincipalInfo principalInfo = null;

  @SerializedName("triggerInfo")
  private ExecutionTriggerInfo triggerInfo = null;

  @SerializedName("triggerInfoOrBuilder")
  private ExecutionTriggerInfoOrBuilder triggerInfoOrBuilder = null;

  @SerializedName("pipelineIdentifier")
  private String pipelineIdentifier = null;

  @SerializedName("pipelineIdentifierBytes")
  private ByteString pipelineIdentifierBytes = null;

  @SerializedName("executionUuid")
  private String executionUuid = null;

  @SerializedName("executionUuidBytes")
  private ByteString executionUuidBytes = null;

  @SerializedName("principalInfoOrBuilder")
  private ExecutionPrincipalInfoOrBuilder principalInfoOrBuilder = null;

  @SerializedName("gitSyncBranchContext")
  private ByteString gitSyncBranchContext = null;

  @SerializedName("moduleType")
  private String moduleType = null;

  @SerializedName("moduleTypeBytes")
  private ByteString moduleTypeBytes = null;

  @SerializedName("retryInfo")
  private RetryExecutionInfo retryInfo = null;

  @SerializedName("retryInfoOrBuilder")
  private RetryExecutionInfoOrBuilder retryInfoOrBuilder = null;

  @SerializedName("runSequence")
  private Integer runSequence = null;

  @SerializedName("serializedSize")
  private Integer serializedSize = null;

  @SerializedName("parserForType")
  private ParserExecutionMetadata parserForType = null;

  @SerializedName("defaultInstanceForType")
  private ExecutionMetadata defaultInstanceForType = null;

  @SerializedName("allFields")
  private Map<String, Object> allFields = null;

  @SerializedName("initializationErrorString")
  private String initializationErrorString = null;

  @SerializedName("descriptorForType")
  private Descriptor descriptorForType = null;

  @SerializedName("memoizedSerializedSize")
  private Integer memoizedSerializedSize = null;

  public ExecutionMetadata unknownFields(UnknownFieldSet unknownFields) {
    this.unknownFields = unknownFields;
    return this;
  }

   /**
   * Get unknownFields
   * @return unknownFields
  **/
  @Schema(description = "")
  public UnknownFieldSet getUnknownFields() {
    return unknownFields;
  }

  public void setUnknownFields(UnknownFieldSet unknownFields) {
    this.unknownFields = unknownFields;
  }

  public ExecutionMetadata initialized(Boolean initialized) {
    this.initialized = initialized;
    return this;
  }

   /**
   * Get initialized
   * @return initialized
  **/
  @Schema(description = "")
  public Boolean isInitialized() {
    return initialized;
  }

  public void setInitialized(Boolean initialized) {
    this.initialized = initialized;
  }

  public ExecutionMetadata principalInfo(ExecutionPrincipalInfo principalInfo) {
    this.principalInfo = principalInfo;
    return this;
  }

   /**
   * Get principalInfo
   * @return principalInfo
  **/
  @Schema(description = "")
  public ExecutionPrincipalInfo getPrincipalInfo() {
    return principalInfo;
  }

  public void setPrincipalInfo(ExecutionPrincipalInfo principalInfo) {
    this.principalInfo = principalInfo;
  }

  public ExecutionMetadata triggerInfo(ExecutionTriggerInfo triggerInfo) {
    this.triggerInfo = triggerInfo;
    return this;
  }

   /**
   * Get triggerInfo
   * @return triggerInfo
  **/
  @Schema(description = "")
  public ExecutionTriggerInfo getTriggerInfo() {
    return triggerInfo;
  }

  public void setTriggerInfo(ExecutionTriggerInfo triggerInfo) {
    this.triggerInfo = triggerInfo;
  }

  public ExecutionMetadata triggerInfoOrBuilder(ExecutionTriggerInfoOrBuilder triggerInfoOrBuilder) {
    this.triggerInfoOrBuilder = triggerInfoOrBuilder;
    return this;
  }

   /**
   * Get triggerInfoOrBuilder
   * @return triggerInfoOrBuilder
  **/
  @Schema(description = "")
  public ExecutionTriggerInfoOrBuilder getTriggerInfoOrBuilder() {
    return triggerInfoOrBuilder;
  }

  public void setTriggerInfoOrBuilder(ExecutionTriggerInfoOrBuilder triggerInfoOrBuilder) {
    this.triggerInfoOrBuilder = triggerInfoOrBuilder;
  }

  public ExecutionMetadata pipelineIdentifier(String pipelineIdentifier) {
    this.pipelineIdentifier = pipelineIdentifier;
    return this;
  }

   /**
   * Get pipelineIdentifier
   * @return pipelineIdentifier
  **/
  @Schema(description = "")
  public String getPipelineIdentifier() {
    return pipelineIdentifier;
  }

  public void setPipelineIdentifier(String pipelineIdentifier) {
    this.pipelineIdentifier = pipelineIdentifier;
  }

  public ExecutionMetadata pipelineIdentifierBytes(ByteString pipelineIdentifierBytes) {
    this.pipelineIdentifierBytes = pipelineIdentifierBytes;
    return this;
  }

   /**
   * Get pipelineIdentifierBytes
   * @return pipelineIdentifierBytes
  **/
  @Schema(description = "")
  public ByteString getPipelineIdentifierBytes() {
    return pipelineIdentifierBytes;
  }

  public void setPipelineIdentifierBytes(ByteString pipelineIdentifierBytes) {
    this.pipelineIdentifierBytes = pipelineIdentifierBytes;
  }

  public ExecutionMetadata executionUuid(String executionUuid) {
    this.executionUuid = executionUuid;
    return this;
  }

   /**
   * Get executionUuid
   * @return executionUuid
  **/
  @Schema(description = "")
  public String getExecutionUuid() {
    return executionUuid;
  }

  public void setExecutionUuid(String executionUuid) {
    this.executionUuid = executionUuid;
  }

  public ExecutionMetadata executionUuidBytes(ByteString executionUuidBytes) {
    this.executionUuidBytes = executionUuidBytes;
    return this;
  }

   /**
   * Get executionUuidBytes
   * @return executionUuidBytes
  **/
  @Schema(description = "")
  public ByteString getExecutionUuidBytes() {
    return executionUuidBytes;
  }

  public void setExecutionUuidBytes(ByteString executionUuidBytes) {
    this.executionUuidBytes = executionUuidBytes;
  }

  public ExecutionMetadata principalInfoOrBuilder(ExecutionPrincipalInfoOrBuilder principalInfoOrBuilder) {
    this.principalInfoOrBuilder = principalInfoOrBuilder;
    return this;
  }

   /**
   * Get principalInfoOrBuilder
   * @return principalInfoOrBuilder
  **/
  @Schema(description = "")
  public ExecutionPrincipalInfoOrBuilder getPrincipalInfoOrBuilder() {
    return principalInfoOrBuilder;
  }

  public void setPrincipalInfoOrBuilder(ExecutionPrincipalInfoOrBuilder principalInfoOrBuilder) {
    this.principalInfoOrBuilder = principalInfoOrBuilder;
  }

  public ExecutionMetadata gitSyncBranchContext(ByteString gitSyncBranchContext) {
    this.gitSyncBranchContext = gitSyncBranchContext;
    return this;
  }

   /**
   * Get gitSyncBranchContext
   * @return gitSyncBranchContext
  **/
  @Schema(description = "")
  public ByteString getGitSyncBranchContext() {
    return gitSyncBranchContext;
  }

  public void setGitSyncBranchContext(ByteString gitSyncBranchContext) {
    this.gitSyncBranchContext = gitSyncBranchContext;
  }

  public ExecutionMetadata moduleType(String moduleType) {
    this.moduleType = moduleType;
    return this;
  }

   /**
   * Get moduleType
   * @return moduleType
  **/
  @Schema(description = "")
  public String getModuleType() {
    return moduleType;
  }

  public void setModuleType(String moduleType) {
    this.moduleType = moduleType;
  }

  public ExecutionMetadata moduleTypeBytes(ByteString moduleTypeBytes) {
    this.moduleTypeBytes = moduleTypeBytes;
    return this;
  }

   /**
   * Get moduleTypeBytes
   * @return moduleTypeBytes
  **/
  @Schema(description = "")
  public ByteString getModuleTypeBytes() {
    return moduleTypeBytes;
  }

  public void setModuleTypeBytes(ByteString moduleTypeBytes) {
    this.moduleTypeBytes = moduleTypeBytes;
  }

  public ExecutionMetadata retryInfo(RetryExecutionInfo retryInfo) {
    this.retryInfo = retryInfo;
    return this;
  }

   /**
   * Get retryInfo
   * @return retryInfo
  **/
  @Schema(description = "")
  public RetryExecutionInfo getRetryInfo() {
    return retryInfo;
  }

  public void setRetryInfo(RetryExecutionInfo retryInfo) {
    this.retryInfo = retryInfo;
  }

  public ExecutionMetadata retryInfoOrBuilder(RetryExecutionInfoOrBuilder retryInfoOrBuilder) {
    this.retryInfoOrBuilder = retryInfoOrBuilder;
    return this;
  }

   /**
   * Get retryInfoOrBuilder
   * @return retryInfoOrBuilder
  **/
  @Schema(description = "")
  public RetryExecutionInfoOrBuilder getRetryInfoOrBuilder() {
    return retryInfoOrBuilder;
  }

  public void setRetryInfoOrBuilder(RetryExecutionInfoOrBuilder retryInfoOrBuilder) {
    this.retryInfoOrBuilder = retryInfoOrBuilder;
  }

  public ExecutionMetadata runSequence(Integer runSequence) {
    this.runSequence = runSequence;
    return this;
  }

   /**
   * Get runSequence
   * @return runSequence
  **/
  @Schema(description = "")
  public Integer getRunSequence() {
    return runSequence;
  }

  public void setRunSequence(Integer runSequence) {
    this.runSequence = runSequence;
  }

  public ExecutionMetadata serializedSize(Integer serializedSize) {
    this.serializedSize = serializedSize;
    return this;
  }

   /**
   * Get serializedSize
   * @return serializedSize
  **/
  @Schema(description = "")
  public Integer getSerializedSize() {
    return serializedSize;
  }

  public void setSerializedSize(Integer serializedSize) {
    this.serializedSize = serializedSize;
  }

  public ExecutionMetadata parserForType(ParserExecutionMetadata parserForType) {
    this.parserForType = parserForType;
    return this;
  }

   /**
   * Get parserForType
   * @return parserForType
  **/
  @Schema(description = "")
  public ParserExecutionMetadata getParserForType() {
    return parserForType;
  }

  public void setParserForType(ParserExecutionMetadata parserForType) {
    this.parserForType = parserForType;
  }

  public ExecutionMetadata defaultInstanceForType(ExecutionMetadata defaultInstanceForType) {
    this.defaultInstanceForType = defaultInstanceForType;
    return this;
  }

   /**
   * Get defaultInstanceForType
   * @return defaultInstanceForType
  **/
  @Schema(description = "")
  public ExecutionMetadata getDefaultInstanceForType() {
    return defaultInstanceForType;
  }

  public void setDefaultInstanceForType(ExecutionMetadata defaultInstanceForType) {
    this.defaultInstanceForType = defaultInstanceForType;
  }

  public ExecutionMetadata allFields(Map<String, Object> allFields) {
    this.allFields = allFields;
    return this;
  }

  public ExecutionMetadata putAllFieldsItem(String key, Object allFieldsItem) {
    if (this.allFields == null) {
      this.allFields = new HashMap<String, Object>();
    }
    this.allFields.put(key, allFieldsItem);
    return this;
  }

   /**
   * Get allFields
   * @return allFields
  **/
  @Schema(description = "")
  public Map<String, Object> getAllFields() {
    return allFields;
  }

  public void setAllFields(Map<String, Object> allFields) {
    this.allFields = allFields;
  }

  public ExecutionMetadata initializationErrorString(String initializationErrorString) {
    this.initializationErrorString = initializationErrorString;
    return this;
  }

   /**
   * Get initializationErrorString
   * @return initializationErrorString
  **/
  @Schema(description = "")
  public String getInitializationErrorString() {
    return initializationErrorString;
  }

  public void setInitializationErrorString(String initializationErrorString) {
    this.initializationErrorString = initializationErrorString;
  }

  public ExecutionMetadata descriptorForType(Descriptor descriptorForType) {
    this.descriptorForType = descriptorForType;
    return this;
  }

   /**
   * Get descriptorForType
   * @return descriptorForType
  **/
  @Schema(description = "")
  public Descriptor getDescriptorForType() {
    return descriptorForType;
  }

  public void setDescriptorForType(Descriptor descriptorForType) {
    this.descriptorForType = descriptorForType;
  }

  public ExecutionMetadata memoizedSerializedSize(Integer memoizedSerializedSize) {
    this.memoizedSerializedSize = memoizedSerializedSize;
    return this;
  }

   /**
   * Get memoizedSerializedSize
   * @return memoizedSerializedSize
  **/
  @Schema(description = "")
  public Integer getMemoizedSerializedSize() {
    return memoizedSerializedSize;
  }

  public void setMemoizedSerializedSize(Integer memoizedSerializedSize) {
    this.memoizedSerializedSize = memoizedSerializedSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExecutionMetadata executionMetadata = (ExecutionMetadata) o;
    return Objects.equals(this.unknownFields, executionMetadata.unknownFields) &&
        Objects.equals(this.initialized, executionMetadata.initialized) &&
        Objects.equals(this.principalInfo, executionMetadata.principalInfo) &&
        Objects.equals(this.triggerInfo, executionMetadata.triggerInfo) &&
        Objects.equals(this.triggerInfoOrBuilder, executionMetadata.triggerInfoOrBuilder) &&
        Objects.equals(this.pipelineIdentifier, executionMetadata.pipelineIdentifier) &&
        Objects.equals(this.pipelineIdentifierBytes, executionMetadata.pipelineIdentifierBytes) &&
        Objects.equals(this.executionUuid, executionMetadata.executionUuid) &&
        Objects.equals(this.executionUuidBytes, executionMetadata.executionUuidBytes) &&
        Objects.equals(this.principalInfoOrBuilder, executionMetadata.principalInfoOrBuilder) &&
        Objects.equals(this.gitSyncBranchContext, executionMetadata.gitSyncBranchContext) &&
        Objects.equals(this.moduleType, executionMetadata.moduleType) &&
        Objects.equals(this.moduleTypeBytes, executionMetadata.moduleTypeBytes) &&
        Objects.equals(this.retryInfo, executionMetadata.retryInfo) &&
        Objects.equals(this.retryInfoOrBuilder, executionMetadata.retryInfoOrBuilder) &&
        Objects.equals(this.runSequence, executionMetadata.runSequence) &&
        Objects.equals(this.serializedSize, executionMetadata.serializedSize) &&
        Objects.equals(this.parserForType, executionMetadata.parserForType) &&
        Objects.equals(this.defaultInstanceForType, executionMetadata.defaultInstanceForType) &&
        Objects.equals(this.allFields, executionMetadata.allFields) &&
        Objects.equals(this.initializationErrorString, executionMetadata.initializationErrorString) &&
        Objects.equals(this.descriptorForType, executionMetadata.descriptorForType) &&
        Objects.equals(this.memoizedSerializedSize, executionMetadata.memoizedSerializedSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(unknownFields, initialized, principalInfo, triggerInfo, triggerInfoOrBuilder, pipelineIdentifier, pipelineIdentifierBytes, executionUuid, executionUuidBytes, principalInfoOrBuilder, gitSyncBranchContext, moduleType, moduleTypeBytes, retryInfo, retryInfoOrBuilder, runSequence, serializedSize, parserForType, defaultInstanceForType, allFields, initializationErrorString, descriptorForType, memoizedSerializedSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExecutionMetadata {\n");
    
    sb.append("    unknownFields: ").append(toIndentedString(unknownFields)).append("\n");
    sb.append("    initialized: ").append(toIndentedString(initialized)).append("\n");
    sb.append("    principalInfo: ").append(toIndentedString(principalInfo)).append("\n");
    sb.append("    triggerInfo: ").append(toIndentedString(triggerInfo)).append("\n");
    sb.append("    triggerInfoOrBuilder: ").append(toIndentedString(triggerInfoOrBuilder)).append("\n");
    sb.append("    pipelineIdentifier: ").append(toIndentedString(pipelineIdentifier)).append("\n");
    sb.append("    pipelineIdentifierBytes: ").append(toIndentedString(pipelineIdentifierBytes)).append("\n");
    sb.append("    executionUuid: ").append(toIndentedString(executionUuid)).append("\n");
    sb.append("    executionUuidBytes: ").append(toIndentedString(executionUuidBytes)).append("\n");
    sb.append("    principalInfoOrBuilder: ").append(toIndentedString(principalInfoOrBuilder)).append("\n");
    sb.append("    gitSyncBranchContext: ").append(toIndentedString(gitSyncBranchContext)).append("\n");
    sb.append("    moduleType: ").append(toIndentedString(moduleType)).append("\n");
    sb.append("    moduleTypeBytes: ").append(toIndentedString(moduleTypeBytes)).append("\n");
    sb.append("    retryInfo: ").append(toIndentedString(retryInfo)).append("\n");
    sb.append("    retryInfoOrBuilder: ").append(toIndentedString(retryInfoOrBuilder)).append("\n");
    sb.append("    runSequence: ").append(toIndentedString(runSequence)).append("\n");
    sb.append("    serializedSize: ").append(toIndentedString(serializedSize)).append("\n");
    sb.append("    parserForType: ").append(toIndentedString(parserForType)).append("\n");
    sb.append("    defaultInstanceForType: ").append(toIndentedString(defaultInstanceForType)).append("\n");
    sb.append("    allFields: ").append(toIndentedString(allFields)).append("\n");
    sb.append("    initializationErrorString: ").append(toIndentedString(initializationErrorString)).append("\n");
    sb.append("    descriptorForType: ").append(toIndentedString(descriptorForType)).append("\n");
    sb.append("    memoizedSerializedSize: ").append(toIndentedString(memoizedSerializedSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

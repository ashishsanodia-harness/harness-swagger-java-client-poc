/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Document;
import io.swagger.client.model.ExecutionSummaryInfo;
import io.swagger.client.model.PipelineEntityGitDetails;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * This is the view of the Pipeline Summary for Pipeline entity defined in Harness.
 */
@Schema(description = "This is the view of the Pipeline Summary for Pipeline entity defined in Harness.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class PMSPipelineSummaryResponse {
  @SerializedName("name")
  private String name = null;

  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("tags")
  private Map<String, String> tags = null;

  @SerializedName("version")
  private Long version = null;

  @SerializedName("numOfStages")
  private Integer numOfStages = null;

  @SerializedName("createdAt")
  private Long createdAt = null;

  @SerializedName("lastUpdatedAt")
  private Long lastUpdatedAt = null;

  @SerializedName("modules")
  private List<String> modules = null;

  @SerializedName("executionSummaryInfo")
  private ExecutionSummaryInfo executionSummaryInfo = null;

  @SerializedName("filters")
  private Map<String, Document> filters = null;

  @SerializedName("stageNames")
  private List<String> stageNames = null;

  @SerializedName("gitDetails")
  private PipelineEntityGitDetails gitDetails = null;

  @SerializedName("entityValidityDetails")
  private PipelineEntityGitDetails entityValidityDetails = null;

  public PMSPipelineSummaryResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PMSPipelineSummaryResponse identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @Schema(description = "")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public PMSPipelineSummaryResponse description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PMSPipelineSummaryResponse tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public PMSPipelineSummaryResponse putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<String, String>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }

  public PMSPipelineSummaryResponse version(Long version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public Long getVersion() {
    return version;
  }

  public void setVersion(Long version) {
    this.version = version;
  }

  public PMSPipelineSummaryResponse numOfStages(Integer numOfStages) {
    this.numOfStages = numOfStages;
    return this;
  }

   /**
   * Get numOfStages
   * @return numOfStages
  **/
  @Schema(description = "")
  public Integer getNumOfStages() {
    return numOfStages;
  }

  public void setNumOfStages(Integer numOfStages) {
    this.numOfStages = numOfStages;
  }

  public PMSPipelineSummaryResponse createdAt(Long createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public Long getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(Long createdAt) {
    this.createdAt = createdAt;
  }

  public PMSPipelineSummaryResponse lastUpdatedAt(Long lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

   /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
  **/
  @Schema(description = "")
  public Long getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(Long lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }

  public PMSPipelineSummaryResponse modules(List<String> modules) {
    this.modules = modules;
    return this;
  }

  public PMSPipelineSummaryResponse addModulesItem(String modulesItem) {
    if (this.modules == null) {
      this.modules = new ArrayList<String>();
    }
    this.modules.add(modulesItem);
    return this;
  }

   /**
   * Get modules
   * @return modules
  **/
  @Schema(description = "")
  public List<String> getModules() {
    return modules;
  }

  public void setModules(List<String> modules) {
    this.modules = modules;
  }

  public PMSPipelineSummaryResponse executionSummaryInfo(ExecutionSummaryInfo executionSummaryInfo) {
    this.executionSummaryInfo = executionSummaryInfo;
    return this;
  }

   /**
   * Get executionSummaryInfo
   * @return executionSummaryInfo
  **/
  @Schema(description = "")
  public ExecutionSummaryInfo getExecutionSummaryInfo() {
    return executionSummaryInfo;
  }

  public void setExecutionSummaryInfo(ExecutionSummaryInfo executionSummaryInfo) {
    this.executionSummaryInfo = executionSummaryInfo;
  }

  public PMSPipelineSummaryResponse filters(Map<String, Document> filters) {
    this.filters = filters;
    return this;
  }

  public PMSPipelineSummaryResponse putFiltersItem(String key, Document filtersItem) {
    if (this.filters == null) {
      this.filters = new HashMap<String, Document>();
    }
    this.filters.put(key, filtersItem);
    return this;
  }

   /**
   * Get filters
   * @return filters
  **/
  @Schema(description = "")
  public Map<String, Document> getFilters() {
    return filters;
  }

  public void setFilters(Map<String, Document> filters) {
    this.filters = filters;
  }

  public PMSPipelineSummaryResponse stageNames(List<String> stageNames) {
    this.stageNames = stageNames;
    return this;
  }

  public PMSPipelineSummaryResponse addStageNamesItem(String stageNamesItem) {
    if (this.stageNames == null) {
      this.stageNames = new ArrayList<String>();
    }
    this.stageNames.add(stageNamesItem);
    return this;
  }

   /**
   * Get stageNames
   * @return stageNames
  **/
  @Schema(description = "")
  public List<String> getStageNames() {
    return stageNames;
  }

  public void setStageNames(List<String> stageNames) {
    this.stageNames = stageNames;
  }

  public PMSPipelineSummaryResponse gitDetails(PipelineEntityGitDetails gitDetails) {
    this.gitDetails = gitDetails;
    return this;
  }

   /**
   * Get gitDetails
   * @return gitDetails
  **/
  @Schema(description = "")
  public PipelineEntityGitDetails getGitDetails() {
    return gitDetails;
  }

  public void setGitDetails(PipelineEntityGitDetails gitDetails) {
    this.gitDetails = gitDetails;
  }

  public PMSPipelineSummaryResponse entityValidityDetails(PipelineEntityGitDetails entityValidityDetails) {
    this.entityValidityDetails = entityValidityDetails;
    return this;
  }

   /**
   * Get entityValidityDetails
   * @return entityValidityDetails
  **/
  @Schema(description = "")
  public PipelineEntityGitDetails getEntityValidityDetails() {
    return entityValidityDetails;
  }

  public void setEntityValidityDetails(PipelineEntityGitDetails entityValidityDetails) {
    this.entityValidityDetails = entityValidityDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PMSPipelineSummaryResponse pmSPipelineSummaryResponse = (PMSPipelineSummaryResponse) o;
    return Objects.equals(this.name, pmSPipelineSummaryResponse.name) &&
        Objects.equals(this.identifier, pmSPipelineSummaryResponse.identifier) &&
        Objects.equals(this.description, pmSPipelineSummaryResponse.description) &&
        Objects.equals(this.tags, pmSPipelineSummaryResponse.tags) &&
        Objects.equals(this.version, pmSPipelineSummaryResponse.version) &&
        Objects.equals(this.numOfStages, pmSPipelineSummaryResponse.numOfStages) &&
        Objects.equals(this.createdAt, pmSPipelineSummaryResponse.createdAt) &&
        Objects.equals(this.lastUpdatedAt, pmSPipelineSummaryResponse.lastUpdatedAt) &&
        Objects.equals(this.modules, pmSPipelineSummaryResponse.modules) &&
        Objects.equals(this.executionSummaryInfo, pmSPipelineSummaryResponse.executionSummaryInfo) &&
        Objects.equals(this.filters, pmSPipelineSummaryResponse.filters) &&
        Objects.equals(this.stageNames, pmSPipelineSummaryResponse.stageNames) &&
        Objects.equals(this.gitDetails, pmSPipelineSummaryResponse.gitDetails) &&
        Objects.equals(this.entityValidityDetails, pmSPipelineSummaryResponse.entityValidityDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, identifier, description, tags, version, numOfStages, createdAt, lastUpdatedAt, modules, executionSummaryInfo, filters, stageNames, gitDetails, entityValidityDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PMSPipelineSummaryResponse {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    numOfStages: ").append(toIndentedString(numOfStages)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("    modules: ").append(toIndentedString(modules)).append("\n");
    sb.append("    executionSummaryInfo: ").append(toIndentedString(executionSummaryInfo)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    stageNames: ").append(toIndentedString(stageNames)).append("\n");
    sb.append("    gitDetails: ").append(toIndentedString(gitDetails)).append("\n");
    sb.append("    entityValidityDetails: ").append(toIndentedString(entityValidityDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

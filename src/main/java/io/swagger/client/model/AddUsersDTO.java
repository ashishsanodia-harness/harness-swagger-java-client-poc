/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.RoleBinding;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * AddUsersDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class AddUsersDTO {
  @SerializedName("emails")
  private List<String> emails = null;

  @SerializedName("roleBindings")
  private List<RoleBinding> roleBindings = null;

  @SerializedName("userGroups")
  private List<String> userGroups = null;

  public AddUsersDTO emails(List<String> emails) {
    this.emails = emails;
    return this;
  }

  public AddUsersDTO addEmailsItem(String emailsItem) {
    if (this.emails == null) {
      this.emails = new ArrayList<String>();
    }
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * Get emails
   * @return emails
  **/
  @Schema(description = "")
  public List<String> getEmails() {
    return emails;
  }

  public void setEmails(List<String> emails) {
    this.emails = emails;
  }

  public AddUsersDTO roleBindings(List<RoleBinding> roleBindings) {
    this.roleBindings = roleBindings;
    return this;
  }

  public AddUsersDTO addRoleBindingsItem(RoleBinding roleBindingsItem) {
    if (this.roleBindings == null) {
      this.roleBindings = new ArrayList<RoleBinding>();
    }
    this.roleBindings.add(roleBindingsItem);
    return this;
  }

   /**
   * Get roleBindings
   * @return roleBindings
  **/
  @Schema(description = "")
  public List<RoleBinding> getRoleBindings() {
    return roleBindings;
  }

  public void setRoleBindings(List<RoleBinding> roleBindings) {
    this.roleBindings = roleBindings;
  }

  public AddUsersDTO userGroups(List<String> userGroups) {
    this.userGroups = userGroups;
    return this;
  }

  public AddUsersDTO addUserGroupsItem(String userGroupsItem) {
    if (this.userGroups == null) {
      this.userGroups = new ArrayList<String>();
    }
    this.userGroups.add(userGroupsItem);
    return this;
  }

   /**
   * Get userGroups
   * @return userGroups
  **/
  @Schema(description = "")
  public List<String> getUserGroups() {
    return userGroups;
  }

  public void setUserGroups(List<String> userGroups) {
    this.userGroups = userGroups;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddUsersDTO addUsersDTO = (AddUsersDTO) o;
    return Objects.equals(this.emails, addUsersDTO.emails) &&
        Objects.equals(this.roleBindings, addUsersDTO.roleBindings) &&
        Objects.equals(this.userGroups, addUsersDTO.userGroups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emails, roleBindings, userGroups);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddUsersDTO {\n");
    
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    roleBindings: ").append(toIndentedString(roleBindings)).append("\n");
    sb.append("    userGroups: ").append(toIndentedString(userGroups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

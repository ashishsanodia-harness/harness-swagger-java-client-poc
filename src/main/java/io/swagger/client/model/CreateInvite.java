/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.RoleBinding;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * This is the view of the CreateInvite entity defined in Harness
 */
@Schema(description = "This is the view of the CreateInvite entity defined in Harness")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class CreateInvite {
  @SerializedName("users")
  private List<String> users = null;

  @SerializedName("roleBindings")
  private List<RoleBinding> roleBindings = null;

  /**
   * Gets or Sets inviteType
   */
  @JsonAdapter(InviteTypeEnum.Adapter.class)
  public enum InviteTypeEnum {
    USER_INITIATED_INVITE("USER_INITIATED_INVITE"),
    ADMIN_INITIATED_INVITE("ADMIN_INITIATED_INVITE"),
    SCIM_INITIATED_INVITE("SCIM_INITIATED_INVITE");

    private String value;

    InviteTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static InviteTypeEnum fromValue(String input) {
      for (InviteTypeEnum b : InviteTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<InviteTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InviteTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public InviteTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return InviteTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("inviteType")
  private InviteTypeEnum inviteType = null;

  @SerializedName("userGroups")
  private List<String> userGroups = null;

  public CreateInvite users(List<String> users) {
    this.users = users;
    return this;
  }

  public CreateInvite addUsersItem(String usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<String>();
    }
    this.users.add(usersItem);
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @Schema(description = "")
  public List<String> getUsers() {
    return users;
  }

  public void setUsers(List<String> users) {
    this.users = users;
  }

  public CreateInvite roleBindings(List<RoleBinding> roleBindings) {
    this.roleBindings = roleBindings;
    return this;
  }

  public CreateInvite addRoleBindingsItem(RoleBinding roleBindingsItem) {
    if (this.roleBindings == null) {
      this.roleBindings = new ArrayList<RoleBinding>();
    }
    this.roleBindings.add(roleBindingsItem);
    return this;
  }

   /**
   * Get roleBindings
   * @return roleBindings
  **/
  @Schema(description = "")
  public List<RoleBinding> getRoleBindings() {
    return roleBindings;
  }

  public void setRoleBindings(List<RoleBinding> roleBindings) {
    this.roleBindings = roleBindings;
  }

  public CreateInvite inviteType(InviteTypeEnum inviteType) {
    this.inviteType = inviteType;
    return this;
  }

   /**
   * Get inviteType
   * @return inviteType
  **/
  @Schema(description = "")
  public InviteTypeEnum getInviteType() {
    return inviteType;
  }

  public void setInviteType(InviteTypeEnum inviteType) {
    this.inviteType = inviteType;
  }

  public CreateInvite userGroups(List<String> userGroups) {
    this.userGroups = userGroups;
    return this;
  }

  public CreateInvite addUserGroupsItem(String userGroupsItem) {
    if (this.userGroups == null) {
      this.userGroups = new ArrayList<String>();
    }
    this.userGroups.add(userGroupsItem);
    return this;
  }

   /**
   * Get userGroups
   * @return userGroups
  **/
  @Schema(description = "")
  public List<String> getUserGroups() {
    return userGroups;
  }

  public void setUserGroups(List<String> userGroups) {
    this.userGroups = userGroups;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateInvite createInvite = (CreateInvite) o;
    return Objects.equals(this.users, createInvite.users) &&
        Objects.equals(this.roleBindings, createInvite.roleBindings) &&
        Objects.equals(this.inviteType, createInvite.inviteType) &&
        Objects.equals(this.userGroups, createInvite.userGroups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(users, roleBindings, inviteType, userGroups);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateInvite {\n");
    
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    roleBindings: ").append(toIndentedString(roleBindings)).append("\n");
    sb.append("    inviteType: ").append(toIndentedString(inviteType)).append("\n");
    sb.append("    userGroups: ").append(toIndentedString(userGroups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

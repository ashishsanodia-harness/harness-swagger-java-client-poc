/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.BillingExportSpec;
import io.swagger.client.model.ConnectorConfig;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * This contains the cost explorer of Azure connector
 */
@Schema(description = "This contains the cost explorer of Azure connector")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class CEAzureConnector extends ConnectorConfig {
  /**
   * Gets or Sets featuresEnabled
   */
  @JsonAdapter(FeaturesEnabledEnum.Adapter.class)
  public enum FeaturesEnabledEnum {
    BILLING("BILLING"),
    OPTIMIZATION("OPTIMIZATION"),
    VISIBILITY("VISIBILITY");

    private String value;

    FeaturesEnabledEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static FeaturesEnabledEnum fromValue(String input) {
      for (FeaturesEnabledEnum b : FeaturesEnabledEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<FeaturesEnabledEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FeaturesEnabledEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public FeaturesEnabledEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return FeaturesEnabledEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("featuresEnabled")
  private List<FeaturesEnabledEnum> featuresEnabled = null;

  @SerializedName("tenantId")
  private String tenantId = null;

  @SerializedName("subscriptionId")
  private String subscriptionId = null;

  @SerializedName("billingExportSpec")
  private BillingExportSpec billingExportSpec = null;

  public CEAzureConnector featuresEnabled(List<FeaturesEnabledEnum> featuresEnabled) {
    this.featuresEnabled = featuresEnabled;
    return this;
  }

  public CEAzureConnector addFeaturesEnabledItem(FeaturesEnabledEnum featuresEnabledItem) {
    if (this.featuresEnabled == null) {
      this.featuresEnabled = new ArrayList<FeaturesEnabledEnum>();
    }
    this.featuresEnabled.add(featuresEnabledItem);
    return this;
  }

   /**
   * Get featuresEnabled
   * @return featuresEnabled
  **/
  @Schema(description = "")
  public List<FeaturesEnabledEnum> getFeaturesEnabled() {
    return featuresEnabled;
  }

  public void setFeaturesEnabled(List<FeaturesEnabledEnum> featuresEnabled) {
    this.featuresEnabled = featuresEnabled;
  }

  public CEAzureConnector tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

   /**
   * Get tenantId
   * @return tenantId
  **/
  @Schema(required = true, description = "")
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }

  public CEAzureConnector subscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
    return this;
  }

   /**
   * Get subscriptionId
   * @return subscriptionId
  **/
  @Schema(required = true, description = "")
  public String getSubscriptionId() {
    return subscriptionId;
  }

  public void setSubscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
  }

  public CEAzureConnector billingExportSpec(BillingExportSpec billingExportSpec) {
    this.billingExportSpec = billingExportSpec;
    return this;
  }

   /**
   * Get billingExportSpec
   * @return billingExportSpec
  **/
  @Schema(description = "")
  public BillingExportSpec getBillingExportSpec() {
    return billingExportSpec;
  }

  public void setBillingExportSpec(BillingExportSpec billingExportSpec) {
    this.billingExportSpec = billingExportSpec;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CEAzureConnector ceAzureConnector = (CEAzureConnector) o;
    return Objects.equals(this.featuresEnabled, ceAzureConnector.featuresEnabled) &&
        Objects.equals(this.tenantId, ceAzureConnector.tenantId) &&
        Objects.equals(this.subscriptionId, ceAzureConnector.subscriptionId) &&
        Objects.equals(this.billingExportSpec, ceAzureConnector.billingExportSpec) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(featuresEnabled, tenantId, subscriptionId, billingExportSpec, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CEAzureConnector {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    featuresEnabled: ").append(toIndentedString(featuresEnabled)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("    billingExportSpec: ").append(toIndentedString(billingExportSpec)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

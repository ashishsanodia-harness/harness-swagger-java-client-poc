/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ByteString;
import io.swagger.client.model.Descriptor;
import io.swagger.client.model.GovernanceMetadata;
import io.swagger.client.model.ParserGovernanceMetadata;
import io.swagger.client.model.PolicySetMetadata;
import io.swagger.client.model.PolicySetMetadataOrBuilder;
import io.swagger.client.model.UnknownFieldSet;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * GovernanceMetadata
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class GovernanceMetadata {
  @SerializedName("unknownFields")
  private UnknownFieldSet unknownFields = null;

  @SerializedName("timestamp")
  private Long timestamp = null;

  @SerializedName("initialized")
  private Boolean initialized = null;

  @SerializedName("action")
  private String action = null;

  @SerializedName("created")
  private Long created = null;

  @SerializedName("entity")
  private String entity = null;

  @SerializedName("accountId")
  private String accountId = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("statusBytes")
  private ByteString statusBytes = null;

  @SerializedName("accountIdBytes")
  private ByteString accountIdBytes = null;

  @SerializedName("orgIdBytes")
  private ByteString orgIdBytes = null;

  @SerializedName("projectId")
  private String projectId = null;

  @SerializedName("projectIdBytes")
  private ByteString projectIdBytes = null;

  @SerializedName("idBytes")
  private ByteString idBytes = null;

  @SerializedName("detailsList")
  private List<PolicySetMetadata> detailsList = null;

  @SerializedName("detailsOrBuilderList")
  private List<PolicySetMetadataOrBuilder> detailsOrBuilderList = null;

  @SerializedName("detailsCount")
  private Integer detailsCount = null;

  @SerializedName("entityBytes")
  private ByteString entityBytes = null;

  @SerializedName("actionBytes")
  private ByteString actionBytes = null;

  @SerializedName("messageBytes")
  private ByteString messageBytes = null;

  @SerializedName("orgId")
  private String orgId = null;

  @SerializedName("deny")
  private Boolean deny = null;

  @SerializedName("serializedSize")
  private Integer serializedSize = null;

  @SerializedName("parserForType")
  private ParserGovernanceMetadata parserForType = null;

  @SerializedName("defaultInstanceForType")
  private GovernanceMetadata defaultInstanceForType = null;

  @SerializedName("typeBytes")
  private ByteString typeBytes = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("allFields")
  private Map<String, Object> allFields = null;

  @SerializedName("initializationErrorString")
  private String initializationErrorString = null;

  @SerializedName("descriptorForType")
  private Descriptor descriptorForType = null;

  @SerializedName("memoizedSerializedSize")
  private Integer memoizedSerializedSize = null;

  public GovernanceMetadata unknownFields(UnknownFieldSet unknownFields) {
    this.unknownFields = unknownFields;
    return this;
  }

   /**
   * Get unknownFields
   * @return unknownFields
  **/
  @Schema(description = "")
  public UnknownFieldSet getUnknownFields() {
    return unknownFields;
  }

  public void setUnknownFields(UnknownFieldSet unknownFields) {
    this.unknownFields = unknownFields;
  }

  public GovernanceMetadata timestamp(Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @Schema(description = "")
  public Long getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }

  public GovernanceMetadata initialized(Boolean initialized) {
    this.initialized = initialized;
    return this;
  }

   /**
   * Get initialized
   * @return initialized
  **/
  @Schema(description = "")
  public Boolean isInitialized() {
    return initialized;
  }

  public void setInitialized(Boolean initialized) {
    this.initialized = initialized;
  }

  public GovernanceMetadata action(String action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @Schema(description = "")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }

  public GovernanceMetadata created(Long created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @Schema(description = "")
  public Long getCreated() {
    return created;
  }

  public void setCreated(Long created) {
    this.created = created;
  }

  public GovernanceMetadata entity(String entity) {
    this.entity = entity;
    return this;
  }

   /**
   * Get entity
   * @return entity
  **/
  @Schema(description = "")
  public String getEntity() {
    return entity;
  }

  public void setEntity(String entity) {
    this.entity = entity;
  }

  public GovernanceMetadata accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @Schema(description = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public GovernanceMetadata status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public GovernanceMetadata statusBytes(ByteString statusBytes) {
    this.statusBytes = statusBytes;
    return this;
  }

   /**
   * Get statusBytes
   * @return statusBytes
  **/
  @Schema(description = "")
  public ByteString getStatusBytes() {
    return statusBytes;
  }

  public void setStatusBytes(ByteString statusBytes) {
    this.statusBytes = statusBytes;
  }

  public GovernanceMetadata accountIdBytes(ByteString accountIdBytes) {
    this.accountIdBytes = accountIdBytes;
    return this;
  }

   /**
   * Get accountIdBytes
   * @return accountIdBytes
  **/
  @Schema(description = "")
  public ByteString getAccountIdBytes() {
    return accountIdBytes;
  }

  public void setAccountIdBytes(ByteString accountIdBytes) {
    this.accountIdBytes = accountIdBytes;
  }

  public GovernanceMetadata orgIdBytes(ByteString orgIdBytes) {
    this.orgIdBytes = orgIdBytes;
    return this;
  }

   /**
   * Get orgIdBytes
   * @return orgIdBytes
  **/
  @Schema(description = "")
  public ByteString getOrgIdBytes() {
    return orgIdBytes;
  }

  public void setOrgIdBytes(ByteString orgIdBytes) {
    this.orgIdBytes = orgIdBytes;
  }

  public GovernanceMetadata projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @Schema(description = "")
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

  public GovernanceMetadata projectIdBytes(ByteString projectIdBytes) {
    this.projectIdBytes = projectIdBytes;
    return this;
  }

   /**
   * Get projectIdBytes
   * @return projectIdBytes
  **/
  @Schema(description = "")
  public ByteString getProjectIdBytes() {
    return projectIdBytes;
  }

  public void setProjectIdBytes(ByteString projectIdBytes) {
    this.projectIdBytes = projectIdBytes;
  }

  public GovernanceMetadata idBytes(ByteString idBytes) {
    this.idBytes = idBytes;
    return this;
  }

   /**
   * Get idBytes
   * @return idBytes
  **/
  @Schema(description = "")
  public ByteString getIdBytes() {
    return idBytes;
  }

  public void setIdBytes(ByteString idBytes) {
    this.idBytes = idBytes;
  }

  public GovernanceMetadata detailsList(List<PolicySetMetadata> detailsList) {
    this.detailsList = detailsList;
    return this;
  }

  public GovernanceMetadata addDetailsListItem(PolicySetMetadata detailsListItem) {
    if (this.detailsList == null) {
      this.detailsList = new ArrayList<PolicySetMetadata>();
    }
    this.detailsList.add(detailsListItem);
    return this;
  }

   /**
   * Get detailsList
   * @return detailsList
  **/
  @Schema(description = "")
  public List<PolicySetMetadata> getDetailsList() {
    return detailsList;
  }

  public void setDetailsList(List<PolicySetMetadata> detailsList) {
    this.detailsList = detailsList;
  }

  public GovernanceMetadata detailsOrBuilderList(List<PolicySetMetadataOrBuilder> detailsOrBuilderList) {
    this.detailsOrBuilderList = detailsOrBuilderList;
    return this;
  }

  public GovernanceMetadata addDetailsOrBuilderListItem(PolicySetMetadataOrBuilder detailsOrBuilderListItem) {
    if (this.detailsOrBuilderList == null) {
      this.detailsOrBuilderList = new ArrayList<PolicySetMetadataOrBuilder>();
    }
    this.detailsOrBuilderList.add(detailsOrBuilderListItem);
    return this;
  }

   /**
   * Get detailsOrBuilderList
   * @return detailsOrBuilderList
  **/
  @Schema(description = "")
  public List<PolicySetMetadataOrBuilder> getDetailsOrBuilderList() {
    return detailsOrBuilderList;
  }

  public void setDetailsOrBuilderList(List<PolicySetMetadataOrBuilder> detailsOrBuilderList) {
    this.detailsOrBuilderList = detailsOrBuilderList;
  }

  public GovernanceMetadata detailsCount(Integer detailsCount) {
    this.detailsCount = detailsCount;
    return this;
  }

   /**
   * Get detailsCount
   * @return detailsCount
  **/
  @Schema(description = "")
  public Integer getDetailsCount() {
    return detailsCount;
  }

  public void setDetailsCount(Integer detailsCount) {
    this.detailsCount = detailsCount;
  }

  public GovernanceMetadata entityBytes(ByteString entityBytes) {
    this.entityBytes = entityBytes;
    return this;
  }

   /**
   * Get entityBytes
   * @return entityBytes
  **/
  @Schema(description = "")
  public ByteString getEntityBytes() {
    return entityBytes;
  }

  public void setEntityBytes(ByteString entityBytes) {
    this.entityBytes = entityBytes;
  }

  public GovernanceMetadata actionBytes(ByteString actionBytes) {
    this.actionBytes = actionBytes;
    return this;
  }

   /**
   * Get actionBytes
   * @return actionBytes
  **/
  @Schema(description = "")
  public ByteString getActionBytes() {
    return actionBytes;
  }

  public void setActionBytes(ByteString actionBytes) {
    this.actionBytes = actionBytes;
  }

  public GovernanceMetadata messageBytes(ByteString messageBytes) {
    this.messageBytes = messageBytes;
    return this;
  }

   /**
   * Get messageBytes
   * @return messageBytes
  **/
  @Schema(description = "")
  public ByteString getMessageBytes() {
    return messageBytes;
  }

  public void setMessageBytes(ByteString messageBytes) {
    this.messageBytes = messageBytes;
  }

  public GovernanceMetadata orgId(String orgId) {
    this.orgId = orgId;
    return this;
  }

   /**
   * Get orgId
   * @return orgId
  **/
  @Schema(description = "")
  public String getOrgId() {
    return orgId;
  }

  public void setOrgId(String orgId) {
    this.orgId = orgId;
  }

  public GovernanceMetadata deny(Boolean deny) {
    this.deny = deny;
    return this;
  }

   /**
   * Get deny
   * @return deny
  **/
  @Schema(description = "")
  public Boolean isDeny() {
    return deny;
  }

  public void setDeny(Boolean deny) {
    this.deny = deny;
  }

  public GovernanceMetadata serializedSize(Integer serializedSize) {
    this.serializedSize = serializedSize;
    return this;
  }

   /**
   * Get serializedSize
   * @return serializedSize
  **/
  @Schema(description = "")
  public Integer getSerializedSize() {
    return serializedSize;
  }

  public void setSerializedSize(Integer serializedSize) {
    this.serializedSize = serializedSize;
  }

  public GovernanceMetadata parserForType(ParserGovernanceMetadata parserForType) {
    this.parserForType = parserForType;
    return this;
  }

   /**
   * Get parserForType
   * @return parserForType
  **/
  @Schema(description = "")
  public ParserGovernanceMetadata getParserForType() {
    return parserForType;
  }

  public void setParserForType(ParserGovernanceMetadata parserForType) {
    this.parserForType = parserForType;
  }

  public GovernanceMetadata defaultInstanceForType(GovernanceMetadata defaultInstanceForType) {
    this.defaultInstanceForType = defaultInstanceForType;
    return this;
  }

   /**
   * Get defaultInstanceForType
   * @return defaultInstanceForType
  **/
  @Schema(description = "")
  public GovernanceMetadata getDefaultInstanceForType() {
    return defaultInstanceForType;
  }

  public void setDefaultInstanceForType(GovernanceMetadata defaultInstanceForType) {
    this.defaultInstanceForType = defaultInstanceForType;
  }

  public GovernanceMetadata typeBytes(ByteString typeBytes) {
    this.typeBytes = typeBytes;
    return this;
  }

   /**
   * Get typeBytes
   * @return typeBytes
  **/
  @Schema(description = "")
  public ByteString getTypeBytes() {
    return typeBytes;
  }

  public void setTypeBytes(ByteString typeBytes) {
    this.typeBytes = typeBytes;
  }

  public GovernanceMetadata message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @Schema(description = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public GovernanceMetadata id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public GovernanceMetadata type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public GovernanceMetadata allFields(Map<String, Object> allFields) {
    this.allFields = allFields;
    return this;
  }

  public GovernanceMetadata putAllFieldsItem(String key, Object allFieldsItem) {
    if (this.allFields == null) {
      this.allFields = new HashMap<String, Object>();
    }
    this.allFields.put(key, allFieldsItem);
    return this;
  }

   /**
   * Get allFields
   * @return allFields
  **/
  @Schema(description = "")
  public Map<String, Object> getAllFields() {
    return allFields;
  }

  public void setAllFields(Map<String, Object> allFields) {
    this.allFields = allFields;
  }

  public GovernanceMetadata initializationErrorString(String initializationErrorString) {
    this.initializationErrorString = initializationErrorString;
    return this;
  }

   /**
   * Get initializationErrorString
   * @return initializationErrorString
  **/
  @Schema(description = "")
  public String getInitializationErrorString() {
    return initializationErrorString;
  }

  public void setInitializationErrorString(String initializationErrorString) {
    this.initializationErrorString = initializationErrorString;
  }

  public GovernanceMetadata descriptorForType(Descriptor descriptorForType) {
    this.descriptorForType = descriptorForType;
    return this;
  }

   /**
   * Get descriptorForType
   * @return descriptorForType
  **/
  @Schema(description = "")
  public Descriptor getDescriptorForType() {
    return descriptorForType;
  }

  public void setDescriptorForType(Descriptor descriptorForType) {
    this.descriptorForType = descriptorForType;
  }

  public GovernanceMetadata memoizedSerializedSize(Integer memoizedSerializedSize) {
    this.memoizedSerializedSize = memoizedSerializedSize;
    return this;
  }

   /**
   * Get memoizedSerializedSize
   * @return memoizedSerializedSize
  **/
  @Schema(description = "")
  public Integer getMemoizedSerializedSize() {
    return memoizedSerializedSize;
  }

  public void setMemoizedSerializedSize(Integer memoizedSerializedSize) {
    this.memoizedSerializedSize = memoizedSerializedSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GovernanceMetadata governanceMetadata = (GovernanceMetadata) o;
    return Objects.equals(this.unknownFields, governanceMetadata.unknownFields) &&
        Objects.equals(this.timestamp, governanceMetadata.timestamp) &&
        Objects.equals(this.initialized, governanceMetadata.initialized) &&
        Objects.equals(this.action, governanceMetadata.action) &&
        Objects.equals(this.created, governanceMetadata.created) &&
        Objects.equals(this.entity, governanceMetadata.entity) &&
        Objects.equals(this.accountId, governanceMetadata.accountId) &&
        Objects.equals(this.status, governanceMetadata.status) &&
        Objects.equals(this.statusBytes, governanceMetadata.statusBytes) &&
        Objects.equals(this.accountIdBytes, governanceMetadata.accountIdBytes) &&
        Objects.equals(this.orgIdBytes, governanceMetadata.orgIdBytes) &&
        Objects.equals(this.projectId, governanceMetadata.projectId) &&
        Objects.equals(this.projectIdBytes, governanceMetadata.projectIdBytes) &&
        Objects.equals(this.idBytes, governanceMetadata.idBytes) &&
        Objects.equals(this.detailsList, governanceMetadata.detailsList) &&
        Objects.equals(this.detailsOrBuilderList, governanceMetadata.detailsOrBuilderList) &&
        Objects.equals(this.detailsCount, governanceMetadata.detailsCount) &&
        Objects.equals(this.entityBytes, governanceMetadata.entityBytes) &&
        Objects.equals(this.actionBytes, governanceMetadata.actionBytes) &&
        Objects.equals(this.messageBytes, governanceMetadata.messageBytes) &&
        Objects.equals(this.orgId, governanceMetadata.orgId) &&
        Objects.equals(this.deny, governanceMetadata.deny) &&
        Objects.equals(this.serializedSize, governanceMetadata.serializedSize) &&
        Objects.equals(this.parserForType, governanceMetadata.parserForType) &&
        Objects.equals(this.defaultInstanceForType, governanceMetadata.defaultInstanceForType) &&
        Objects.equals(this.typeBytes, governanceMetadata.typeBytes) &&
        Objects.equals(this.message, governanceMetadata.message) &&
        Objects.equals(this.id, governanceMetadata.id) &&
        Objects.equals(this.type, governanceMetadata.type) &&
        Objects.equals(this.allFields, governanceMetadata.allFields) &&
        Objects.equals(this.initializationErrorString, governanceMetadata.initializationErrorString) &&
        Objects.equals(this.descriptorForType, governanceMetadata.descriptorForType) &&
        Objects.equals(this.memoizedSerializedSize, governanceMetadata.memoizedSerializedSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(unknownFields, timestamp, initialized, action, created, entity, accountId, status, statusBytes, accountIdBytes, orgIdBytes, projectId, projectIdBytes, idBytes, detailsList, detailsOrBuilderList, detailsCount, entityBytes, actionBytes, messageBytes, orgId, deny, serializedSize, parserForType, defaultInstanceForType, typeBytes, message, id, type, allFields, initializationErrorString, descriptorForType, memoizedSerializedSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GovernanceMetadata {\n");
    
    sb.append("    unknownFields: ").append(toIndentedString(unknownFields)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    initialized: ").append(toIndentedString(initialized)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusBytes: ").append(toIndentedString(statusBytes)).append("\n");
    sb.append("    accountIdBytes: ").append(toIndentedString(accountIdBytes)).append("\n");
    sb.append("    orgIdBytes: ").append(toIndentedString(orgIdBytes)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    projectIdBytes: ").append(toIndentedString(projectIdBytes)).append("\n");
    sb.append("    idBytes: ").append(toIndentedString(idBytes)).append("\n");
    sb.append("    detailsList: ").append(toIndentedString(detailsList)).append("\n");
    sb.append("    detailsOrBuilderList: ").append(toIndentedString(detailsOrBuilderList)).append("\n");
    sb.append("    detailsCount: ").append(toIndentedString(detailsCount)).append("\n");
    sb.append("    entityBytes: ").append(toIndentedString(entityBytes)).append("\n");
    sb.append("    actionBytes: ").append(toIndentedString(actionBytes)).append("\n");
    sb.append("    messageBytes: ").append(toIndentedString(messageBytes)).append("\n");
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("    deny: ").append(toIndentedString(deny)).append("\n");
    sb.append("    serializedSize: ").append(toIndentedString(serializedSize)).append("\n");
    sb.append("    parserForType: ").append(toIndentedString(parserForType)).append("\n");
    sb.append("    defaultInstanceForType: ").append(toIndentedString(defaultInstanceForType)).append("\n");
    sb.append("    typeBytes: ").append(toIndentedString(typeBytes)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    allFields: ").append(toIndentedString(allFields)).append("\n");
    sb.append("    initializationErrorString: ").append(toIndentedString(initializationErrorString)).append("\n");
    sb.append("    descriptorForType: ").append(toIndentedString(descriptorForType)).append("\n");
    sb.append("    memoizedSerializedSize: ").append(toIndentedString(memoizedSerializedSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

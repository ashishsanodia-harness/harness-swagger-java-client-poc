/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * The time interval on which you want to create a Perspective
 */
@Schema(description = "The time interval on which you want to create a Perspective")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class ViewTimeRange {
  /**
   * The type of Perspective time range filter, select CUSTOM is you want a Perspective between a fixed set of startTime and endTime
   */
  @JsonAdapter(ViewTimeRangeTypeEnum.Adapter.class)
  public enum ViewTimeRangeTypeEnum {
    LAST_7("LAST_7"),
    LAST_30("LAST_30"),
    LAST_MONTH("LAST_MONTH"),
    CURRENT_MONTH("CURRENT_MONTH"),
    CUSTOM("CUSTOM");

    private String value;

    ViewTimeRangeTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ViewTimeRangeTypeEnum fromValue(String input) {
      for (ViewTimeRangeTypeEnum b : ViewTimeRangeTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ViewTimeRangeTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ViewTimeRangeTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ViewTimeRangeTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ViewTimeRangeTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("viewTimeRangeType")
  private ViewTimeRangeTypeEnum viewTimeRangeType = null;

  @SerializedName("startTime")
  private Long startTime = null;

  @SerializedName("endTime")
  private Long endTime = null;

  public ViewTimeRange viewTimeRangeType(ViewTimeRangeTypeEnum viewTimeRangeType) {
    this.viewTimeRangeType = viewTimeRangeType;
    return this;
  }

   /**
   * The type of Perspective time range filter, select CUSTOM is you want a Perspective between a fixed set of startTime and endTime
   * @return viewTimeRangeType
  **/
  @Schema(description = "The type of Perspective time range filter, select CUSTOM is you want a Perspective between a fixed set of startTime and endTime")
  public ViewTimeRangeTypeEnum getViewTimeRangeType() {
    return viewTimeRangeType;
  }

  public void setViewTimeRangeType(ViewTimeRangeTypeEnum viewTimeRangeType) {
    this.viewTimeRangeType = viewTimeRangeType;
  }

  public ViewTimeRange startTime(Long startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public Long getStartTime() {
    return startTime;
  }

  public void setStartTime(Long startTime) {
    this.startTime = startTime;
  }

  public ViewTimeRange endTime(Long endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @Schema(description = "")
  public Long getEndTime() {
    return endTime;
  }

  public void setEndTime(Long endTime) {
    this.endTime = endTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ViewTimeRange viewTimeRange = (ViewTimeRange) o;
    return Objects.equals(this.viewTimeRangeType, viewTimeRange.viewTimeRangeType) &&
        Objects.equals(this.startTime, viewTimeRange.startTime) &&
        Objects.equals(this.endTime, viewTimeRange.endTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(viewTimeRangeType, startTime, endTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ViewTimeRange {\n");
    
    sb.append("    viewTimeRangeType: ").append(toIndentedString(viewTimeRangeType)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

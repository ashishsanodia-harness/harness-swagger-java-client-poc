/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ByteString;
import io.swagger.client.model.Descriptor;
import io.swagger.client.model.Message;
import io.swagger.client.model.PolicyMetadata;
import io.swagger.client.model.PolicyMetadataOrBuilder;
import io.swagger.client.model.UnknownFieldSet;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * PolicySetMetadataOrBuilder
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class PolicySetMetadataOrBuilder {
  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("created")
  private Long created = null;

  @SerializedName("accountId")
  private String accountId = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("statusBytes")
  private ByteString statusBytes = null;

  @SerializedName("accountIdBytes")
  private ByteString accountIdBytes = null;

  @SerializedName("orgIdBytes")
  private ByteString orgIdBytes = null;

  @SerializedName("projectId")
  private String projectId = null;

  @SerializedName("projectIdBytes")
  private ByteString projectIdBytes = null;

  @SerializedName("policySetId")
  private String policySetId = null;

  @SerializedName("policySetIdBytes")
  private ByteString policySetIdBytes = null;

  @SerializedName("policyMetadataList")
  private List<PolicyMetadata> policyMetadataList = null;

  @SerializedName("policyMetadataOrBuilderList")
  private List<PolicyMetadataOrBuilder> policyMetadataOrBuilderList = null;

  @SerializedName("policyMetadataCount")
  private Integer policyMetadataCount = null;

  @SerializedName("policySetName")
  private String policySetName = null;

  @SerializedName("policySetNameBytes")
  private ByteString policySetNameBytes = null;

  @SerializedName("identifierBytes")
  private ByteString identifierBytes = null;

  @SerializedName("orgId")
  private String orgId = null;

  @SerializedName("deny")
  private Boolean deny = null;

  @SerializedName("allFields")
  private Map<String, Object> allFields = null;

  @SerializedName("initializationErrorString")
  private String initializationErrorString = null;

  @SerializedName("descriptorForType")
  private Descriptor descriptorForType = null;

  @SerializedName("defaultInstanceForType")
  private Message defaultInstanceForType = null;

  @SerializedName("unknownFields")
  private UnknownFieldSet unknownFields = null;

  @SerializedName("initialized")
  private Boolean initialized = null;

  public PolicySetMetadataOrBuilder identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @Schema(description = "")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public PolicySetMetadataOrBuilder created(Long created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @Schema(description = "")
  public Long getCreated() {
    return created;
  }

  public void setCreated(Long created) {
    this.created = created;
  }

  public PolicySetMetadataOrBuilder accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @Schema(description = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public PolicySetMetadataOrBuilder status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public PolicySetMetadataOrBuilder statusBytes(ByteString statusBytes) {
    this.statusBytes = statusBytes;
    return this;
  }

   /**
   * Get statusBytes
   * @return statusBytes
  **/
  @Schema(description = "")
  public ByteString getStatusBytes() {
    return statusBytes;
  }

  public void setStatusBytes(ByteString statusBytes) {
    this.statusBytes = statusBytes;
  }

  public PolicySetMetadataOrBuilder accountIdBytes(ByteString accountIdBytes) {
    this.accountIdBytes = accountIdBytes;
    return this;
  }

   /**
   * Get accountIdBytes
   * @return accountIdBytes
  **/
  @Schema(description = "")
  public ByteString getAccountIdBytes() {
    return accountIdBytes;
  }

  public void setAccountIdBytes(ByteString accountIdBytes) {
    this.accountIdBytes = accountIdBytes;
  }

  public PolicySetMetadataOrBuilder orgIdBytes(ByteString orgIdBytes) {
    this.orgIdBytes = orgIdBytes;
    return this;
  }

   /**
   * Get orgIdBytes
   * @return orgIdBytes
  **/
  @Schema(description = "")
  public ByteString getOrgIdBytes() {
    return orgIdBytes;
  }

  public void setOrgIdBytes(ByteString orgIdBytes) {
    this.orgIdBytes = orgIdBytes;
  }

  public PolicySetMetadataOrBuilder projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @Schema(description = "")
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

  public PolicySetMetadataOrBuilder projectIdBytes(ByteString projectIdBytes) {
    this.projectIdBytes = projectIdBytes;
    return this;
  }

   /**
   * Get projectIdBytes
   * @return projectIdBytes
  **/
  @Schema(description = "")
  public ByteString getProjectIdBytes() {
    return projectIdBytes;
  }

  public void setProjectIdBytes(ByteString projectIdBytes) {
    this.projectIdBytes = projectIdBytes;
  }

  public PolicySetMetadataOrBuilder policySetId(String policySetId) {
    this.policySetId = policySetId;
    return this;
  }

   /**
   * Get policySetId
   * @return policySetId
  **/
  @Schema(description = "")
  public String getPolicySetId() {
    return policySetId;
  }

  public void setPolicySetId(String policySetId) {
    this.policySetId = policySetId;
  }

  public PolicySetMetadataOrBuilder policySetIdBytes(ByteString policySetIdBytes) {
    this.policySetIdBytes = policySetIdBytes;
    return this;
  }

   /**
   * Get policySetIdBytes
   * @return policySetIdBytes
  **/
  @Schema(description = "")
  public ByteString getPolicySetIdBytes() {
    return policySetIdBytes;
  }

  public void setPolicySetIdBytes(ByteString policySetIdBytes) {
    this.policySetIdBytes = policySetIdBytes;
  }

  public PolicySetMetadataOrBuilder policyMetadataList(List<PolicyMetadata> policyMetadataList) {
    this.policyMetadataList = policyMetadataList;
    return this;
  }

  public PolicySetMetadataOrBuilder addPolicyMetadataListItem(PolicyMetadata policyMetadataListItem) {
    if (this.policyMetadataList == null) {
      this.policyMetadataList = new ArrayList<PolicyMetadata>();
    }
    this.policyMetadataList.add(policyMetadataListItem);
    return this;
  }

   /**
   * Get policyMetadataList
   * @return policyMetadataList
  **/
  @Schema(description = "")
  public List<PolicyMetadata> getPolicyMetadataList() {
    return policyMetadataList;
  }

  public void setPolicyMetadataList(List<PolicyMetadata> policyMetadataList) {
    this.policyMetadataList = policyMetadataList;
  }

  public PolicySetMetadataOrBuilder policyMetadataOrBuilderList(List<PolicyMetadataOrBuilder> policyMetadataOrBuilderList) {
    this.policyMetadataOrBuilderList = policyMetadataOrBuilderList;
    return this;
  }

  public PolicySetMetadataOrBuilder addPolicyMetadataOrBuilderListItem(PolicyMetadataOrBuilder policyMetadataOrBuilderListItem) {
    if (this.policyMetadataOrBuilderList == null) {
      this.policyMetadataOrBuilderList = new ArrayList<PolicyMetadataOrBuilder>();
    }
    this.policyMetadataOrBuilderList.add(policyMetadataOrBuilderListItem);
    return this;
  }

   /**
   * Get policyMetadataOrBuilderList
   * @return policyMetadataOrBuilderList
  **/
  @Schema(description = "")
  public List<PolicyMetadataOrBuilder> getPolicyMetadataOrBuilderList() {
    return policyMetadataOrBuilderList;
  }

  public void setPolicyMetadataOrBuilderList(List<PolicyMetadataOrBuilder> policyMetadataOrBuilderList) {
    this.policyMetadataOrBuilderList = policyMetadataOrBuilderList;
  }

  public PolicySetMetadataOrBuilder policyMetadataCount(Integer policyMetadataCount) {
    this.policyMetadataCount = policyMetadataCount;
    return this;
  }

   /**
   * Get policyMetadataCount
   * @return policyMetadataCount
  **/
  @Schema(description = "")
  public Integer getPolicyMetadataCount() {
    return policyMetadataCount;
  }

  public void setPolicyMetadataCount(Integer policyMetadataCount) {
    this.policyMetadataCount = policyMetadataCount;
  }

  public PolicySetMetadataOrBuilder policySetName(String policySetName) {
    this.policySetName = policySetName;
    return this;
  }

   /**
   * Get policySetName
   * @return policySetName
  **/
  @Schema(description = "")
  public String getPolicySetName() {
    return policySetName;
  }

  public void setPolicySetName(String policySetName) {
    this.policySetName = policySetName;
  }

  public PolicySetMetadataOrBuilder policySetNameBytes(ByteString policySetNameBytes) {
    this.policySetNameBytes = policySetNameBytes;
    return this;
  }

   /**
   * Get policySetNameBytes
   * @return policySetNameBytes
  **/
  @Schema(description = "")
  public ByteString getPolicySetNameBytes() {
    return policySetNameBytes;
  }

  public void setPolicySetNameBytes(ByteString policySetNameBytes) {
    this.policySetNameBytes = policySetNameBytes;
  }

  public PolicySetMetadataOrBuilder identifierBytes(ByteString identifierBytes) {
    this.identifierBytes = identifierBytes;
    return this;
  }

   /**
   * Get identifierBytes
   * @return identifierBytes
  **/
  @Schema(description = "")
  public ByteString getIdentifierBytes() {
    return identifierBytes;
  }

  public void setIdentifierBytes(ByteString identifierBytes) {
    this.identifierBytes = identifierBytes;
  }

  public PolicySetMetadataOrBuilder orgId(String orgId) {
    this.orgId = orgId;
    return this;
  }

   /**
   * Get orgId
   * @return orgId
  **/
  @Schema(description = "")
  public String getOrgId() {
    return orgId;
  }

  public void setOrgId(String orgId) {
    this.orgId = orgId;
  }

  public PolicySetMetadataOrBuilder deny(Boolean deny) {
    this.deny = deny;
    return this;
  }

   /**
   * Get deny
   * @return deny
  **/
  @Schema(description = "")
  public Boolean isDeny() {
    return deny;
  }

  public void setDeny(Boolean deny) {
    this.deny = deny;
  }

  public PolicySetMetadataOrBuilder allFields(Map<String, Object> allFields) {
    this.allFields = allFields;
    return this;
  }

  public PolicySetMetadataOrBuilder putAllFieldsItem(String key, Object allFieldsItem) {
    if (this.allFields == null) {
      this.allFields = new HashMap<String, Object>();
    }
    this.allFields.put(key, allFieldsItem);
    return this;
  }

   /**
   * Get allFields
   * @return allFields
  **/
  @Schema(description = "")
  public Map<String, Object> getAllFields() {
    return allFields;
  }

  public void setAllFields(Map<String, Object> allFields) {
    this.allFields = allFields;
  }

  public PolicySetMetadataOrBuilder initializationErrorString(String initializationErrorString) {
    this.initializationErrorString = initializationErrorString;
    return this;
  }

   /**
   * Get initializationErrorString
   * @return initializationErrorString
  **/
  @Schema(description = "")
  public String getInitializationErrorString() {
    return initializationErrorString;
  }

  public void setInitializationErrorString(String initializationErrorString) {
    this.initializationErrorString = initializationErrorString;
  }

  public PolicySetMetadataOrBuilder descriptorForType(Descriptor descriptorForType) {
    this.descriptorForType = descriptorForType;
    return this;
  }

   /**
   * Get descriptorForType
   * @return descriptorForType
  **/
  @Schema(description = "")
  public Descriptor getDescriptorForType() {
    return descriptorForType;
  }

  public void setDescriptorForType(Descriptor descriptorForType) {
    this.descriptorForType = descriptorForType;
  }

  public PolicySetMetadataOrBuilder defaultInstanceForType(Message defaultInstanceForType) {
    this.defaultInstanceForType = defaultInstanceForType;
    return this;
  }

   /**
   * Get defaultInstanceForType
   * @return defaultInstanceForType
  **/
  @Schema(description = "")
  public Message getDefaultInstanceForType() {
    return defaultInstanceForType;
  }

  public void setDefaultInstanceForType(Message defaultInstanceForType) {
    this.defaultInstanceForType = defaultInstanceForType;
  }

  public PolicySetMetadataOrBuilder unknownFields(UnknownFieldSet unknownFields) {
    this.unknownFields = unknownFields;
    return this;
  }

   /**
   * Get unknownFields
   * @return unknownFields
  **/
  @Schema(description = "")
  public UnknownFieldSet getUnknownFields() {
    return unknownFields;
  }

  public void setUnknownFields(UnknownFieldSet unknownFields) {
    this.unknownFields = unknownFields;
  }

  public PolicySetMetadataOrBuilder initialized(Boolean initialized) {
    this.initialized = initialized;
    return this;
  }

   /**
   * Get initialized
   * @return initialized
  **/
  @Schema(description = "")
  public Boolean isInitialized() {
    return initialized;
  }

  public void setInitialized(Boolean initialized) {
    this.initialized = initialized;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PolicySetMetadataOrBuilder policySetMetadataOrBuilder = (PolicySetMetadataOrBuilder) o;
    return Objects.equals(this.identifier, policySetMetadataOrBuilder.identifier) &&
        Objects.equals(this.created, policySetMetadataOrBuilder.created) &&
        Objects.equals(this.accountId, policySetMetadataOrBuilder.accountId) &&
        Objects.equals(this.status, policySetMetadataOrBuilder.status) &&
        Objects.equals(this.statusBytes, policySetMetadataOrBuilder.statusBytes) &&
        Objects.equals(this.accountIdBytes, policySetMetadataOrBuilder.accountIdBytes) &&
        Objects.equals(this.orgIdBytes, policySetMetadataOrBuilder.orgIdBytes) &&
        Objects.equals(this.projectId, policySetMetadataOrBuilder.projectId) &&
        Objects.equals(this.projectIdBytes, policySetMetadataOrBuilder.projectIdBytes) &&
        Objects.equals(this.policySetId, policySetMetadataOrBuilder.policySetId) &&
        Objects.equals(this.policySetIdBytes, policySetMetadataOrBuilder.policySetIdBytes) &&
        Objects.equals(this.policyMetadataList, policySetMetadataOrBuilder.policyMetadataList) &&
        Objects.equals(this.policyMetadataOrBuilderList, policySetMetadataOrBuilder.policyMetadataOrBuilderList) &&
        Objects.equals(this.policyMetadataCount, policySetMetadataOrBuilder.policyMetadataCount) &&
        Objects.equals(this.policySetName, policySetMetadataOrBuilder.policySetName) &&
        Objects.equals(this.policySetNameBytes, policySetMetadataOrBuilder.policySetNameBytes) &&
        Objects.equals(this.identifierBytes, policySetMetadataOrBuilder.identifierBytes) &&
        Objects.equals(this.orgId, policySetMetadataOrBuilder.orgId) &&
        Objects.equals(this.deny, policySetMetadataOrBuilder.deny) &&
        Objects.equals(this.allFields, policySetMetadataOrBuilder.allFields) &&
        Objects.equals(this.initializationErrorString, policySetMetadataOrBuilder.initializationErrorString) &&
        Objects.equals(this.descriptorForType, policySetMetadataOrBuilder.descriptorForType) &&
        Objects.equals(this.defaultInstanceForType, policySetMetadataOrBuilder.defaultInstanceForType) &&
        Objects.equals(this.unknownFields, policySetMetadataOrBuilder.unknownFields) &&
        Objects.equals(this.initialized, policySetMetadataOrBuilder.initialized);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifier, created, accountId, status, statusBytes, accountIdBytes, orgIdBytes, projectId, projectIdBytes, policySetId, policySetIdBytes, policyMetadataList, policyMetadataOrBuilderList, policyMetadataCount, policySetName, policySetNameBytes, identifierBytes, orgId, deny, allFields, initializationErrorString, descriptorForType, defaultInstanceForType, unknownFields, initialized);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PolicySetMetadataOrBuilder {\n");
    
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusBytes: ").append(toIndentedString(statusBytes)).append("\n");
    sb.append("    accountIdBytes: ").append(toIndentedString(accountIdBytes)).append("\n");
    sb.append("    orgIdBytes: ").append(toIndentedString(orgIdBytes)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    projectIdBytes: ").append(toIndentedString(projectIdBytes)).append("\n");
    sb.append("    policySetId: ").append(toIndentedString(policySetId)).append("\n");
    sb.append("    policySetIdBytes: ").append(toIndentedString(policySetIdBytes)).append("\n");
    sb.append("    policyMetadataList: ").append(toIndentedString(policyMetadataList)).append("\n");
    sb.append("    policyMetadataOrBuilderList: ").append(toIndentedString(policyMetadataOrBuilderList)).append("\n");
    sb.append("    policyMetadataCount: ").append(toIndentedString(policyMetadataCount)).append("\n");
    sb.append("    policySetName: ").append(toIndentedString(policySetName)).append("\n");
    sb.append("    policySetNameBytes: ").append(toIndentedString(policySetNameBytes)).append("\n");
    sb.append("    identifierBytes: ").append(toIndentedString(identifierBytes)).append("\n");
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("    deny: ").append(toIndentedString(deny)).append("\n");
    sb.append("    allFields: ").append(toIndentedString(allFields)).append("\n");
    sb.append("    initializationErrorString: ").append(toIndentedString(initializationErrorString)).append("\n");
    sb.append("    descriptorForType: ").append(toIndentedString(descriptorForType)).append("\n");
    sb.append("    defaultInstanceForType: ").append(toIndentedString(defaultInstanceForType)).append("\n");
    sb.append("    unknownFields: ").append(toIndentedString(unknownFields)).append("\n");
    sb.append("    initialized: ").append(toIndentedString(initialized)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

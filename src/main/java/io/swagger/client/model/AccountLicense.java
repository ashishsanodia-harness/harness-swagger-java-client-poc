/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ModuleLicense;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * This contains details of the Account License defined in Harness
 */
@Schema(description = "This contains details of the Account License defined in Harness")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class AccountLicense {
  @SerializedName("accountId")
  private String accountId = null;

  @SerializedName("moduleLicenses")
  private Map<String, ModuleLicense> moduleLicenses = null;

  @SerializedName("allModuleLicenses")
  private Map<String, List<ModuleLicense>> allModuleLicenses = null;

  @SerializedName("createdAt")
  private Long createdAt = null;

  @SerializedName("lastUpdatedAt")
  private Long lastUpdatedAt = null;

  public AccountLicense accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @Schema(description = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public AccountLicense moduleLicenses(Map<String, ModuleLicense> moduleLicenses) {
    this.moduleLicenses = moduleLicenses;
    return this;
  }

  public AccountLicense putModuleLicensesItem(String key, ModuleLicense moduleLicensesItem) {
    if (this.moduleLicenses == null) {
      this.moduleLicenses = new HashMap<String, ModuleLicense>();
    }
    this.moduleLicenses.put(key, moduleLicensesItem);
    return this;
  }

   /**
   * Get moduleLicenses
   * @return moduleLicenses
  **/
  @Schema(description = "")
  public Map<String, ModuleLicense> getModuleLicenses() {
    return moduleLicenses;
  }

  public void setModuleLicenses(Map<String, ModuleLicense> moduleLicenses) {
    this.moduleLicenses = moduleLicenses;
  }

  public AccountLicense allModuleLicenses(Map<String, List<ModuleLicense>> allModuleLicenses) {
    this.allModuleLicenses = allModuleLicenses;
    return this;
  }

  public AccountLicense putAllModuleLicensesItem(String key, List<ModuleLicense> allModuleLicensesItem) {
    if (this.allModuleLicenses == null) {
      this.allModuleLicenses = new HashMap<String, List<ModuleLicense>>();
    }
    this.allModuleLicenses.put(key, allModuleLicensesItem);
    return this;
  }

   /**
   * Get allModuleLicenses
   * @return allModuleLicenses
  **/
  @Schema(description = "")
  public Map<String, List<ModuleLicense>> getAllModuleLicenses() {
    return allModuleLicenses;
  }

  public void setAllModuleLicenses(Map<String, List<ModuleLicense>> allModuleLicenses) {
    this.allModuleLicenses = allModuleLicenses;
  }

  public AccountLicense createdAt(Long createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public Long getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(Long createdAt) {
    this.createdAt = createdAt;
  }

  public AccountLicense lastUpdatedAt(Long lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

   /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
  **/
  @Schema(description = "")
  public Long getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(Long lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountLicense accountLicense = (AccountLicense) o;
    return Objects.equals(this.accountId, accountLicense.accountId) &&
        Objects.equals(this.moduleLicenses, accountLicense.moduleLicenses) &&
        Objects.equals(this.allModuleLicenses, accountLicense.allModuleLicenses) &&
        Objects.equals(this.createdAt, accountLicense.createdAt) &&
        Objects.equals(this.lastUpdatedAt, accountLicense.lastUpdatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, moduleLicenses, allModuleLicenses, createdAt, lastUpdatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountLicense {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    moduleLicenses: ").append(toIndentedString(moduleLicenses)).append("\n");
    sb.append("    allModuleLicenses: ").append(toIndentedString(allModuleLicenses)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ExecutionInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * This is the view of the history of Retry Failed Pipelines.
 */
@Schema(description = "This is the view of the history of Retry Failed Pipelines.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class RetryHistoryResponse {
  @SerializedName("errorMessage")
  private String errorMessage = null;

  @SerializedName("latestExecutionId")
  private String latestExecutionId = null;

  @SerializedName("executionInfos")
  private List<ExecutionInfo> executionInfos = null;

  public RetryHistoryResponse errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * Get errorMessage
   * @return errorMessage
  **/
  @Schema(description = "")
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }

  public RetryHistoryResponse latestExecutionId(String latestExecutionId) {
    this.latestExecutionId = latestExecutionId;
    return this;
  }

   /**
   * Get latestExecutionId
   * @return latestExecutionId
  **/
  @Schema(description = "")
  public String getLatestExecutionId() {
    return latestExecutionId;
  }

  public void setLatestExecutionId(String latestExecutionId) {
    this.latestExecutionId = latestExecutionId;
  }

  public RetryHistoryResponse executionInfos(List<ExecutionInfo> executionInfos) {
    this.executionInfos = executionInfos;
    return this;
  }

  public RetryHistoryResponse addExecutionInfosItem(ExecutionInfo executionInfosItem) {
    if (this.executionInfos == null) {
      this.executionInfos = new ArrayList<ExecutionInfo>();
    }
    this.executionInfos.add(executionInfosItem);
    return this;
  }

   /**
   * Get executionInfos
   * @return executionInfos
  **/
  @Schema(description = "")
  public List<ExecutionInfo> getExecutionInfos() {
    return executionInfos;
  }

  public void setExecutionInfos(List<ExecutionInfo> executionInfos) {
    this.executionInfos = executionInfos;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetryHistoryResponse retryHistoryResponse = (RetryHistoryResponse) o;
    return Objects.equals(this.errorMessage, retryHistoryResponse.errorMessage) &&
        Objects.equals(this.latestExecutionId, retryHistoryResponse.latestExecutionId) &&
        Objects.equals(this.executionInfos, retryHistoryResponse.executionInfos);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errorMessage, latestExecutionId, executionInfos);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetryHistoryResponse {\n");
    
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    latestExecutionId: ").append(toIndentedString(latestExecutionId)).append("\n");
    sb.append("    executionInfos: ").append(toIndentedString(executionInfos)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

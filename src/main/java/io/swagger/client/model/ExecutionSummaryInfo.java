/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * This is the view of the Execution Summary
 */
@Schema(description = "This is the view of the Execution Summary")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class ExecutionSummaryInfo {
  @SerializedName("numOfErrors")
  private List<Integer> numOfErrors = null;

  @SerializedName("deployments")
  private List<Integer> deployments = null;

  @SerializedName("lastExecutionTs")
  private Long lastExecutionTs = null;

  /**
   * This is the Execution Status of the entity
   */
  @JsonAdapter(LastExecutionStatusEnum.Adapter.class)
  public enum LastExecutionStatusEnum {
    RUNNING("RUNNING"),
    ASYNCWAITING("ASYNCWAITING"),
    TASKWAITING("TASKWAITING"),
    TIMEDWAITING("TIMEDWAITING"),
    FAILED("FAILED"),
    ERRORED("ERRORED"),
    IGNOREFAILED("IGNOREFAILED"),
    NOTSTARTED("NOTSTARTED"),
    EXPIRED("EXPIRED"),
    ABORTED("ABORTED"),
    DISCONTINUING("DISCONTINUING"),
    QUEUED("QUEUED"),
    PAUSED("PAUSED"),
    RESOURCEWAITING("RESOURCEWAITING"),
    INTERVENTIONWAITING("INTERVENTIONWAITING"),
    APPROVALWAITING("APPROVALWAITING"),
    SUCCESS("SUCCESS"),
    SUSPENDED("SUSPENDED"),
    SKIPPED("SKIPPED"),
    PAUSING("PAUSING"),
    APPROVALREJECTED("APPROVALREJECTED"),
    NOT_STARTED("NOT_STARTED"),
    INTERVENTION_WAITING("INTERVENTION_WAITING"),
    APPROVAL_WAITING("APPROVAL_WAITING"),
    APPROVAL_REJECTED("APPROVAL_REJECTED"),
    WAITING("WAITING");

    private String value;

    LastExecutionStatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static LastExecutionStatusEnum fromValue(String input) {
      for (LastExecutionStatusEnum b : LastExecutionStatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<LastExecutionStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LastExecutionStatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public LastExecutionStatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return LastExecutionStatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("lastExecutionStatus")
  private LastExecutionStatusEnum lastExecutionStatus = null;

  @SerializedName("lastExecutionId")
  private String lastExecutionId = null;

  public ExecutionSummaryInfo numOfErrors(List<Integer> numOfErrors) {
    this.numOfErrors = numOfErrors;
    return this;
  }

  public ExecutionSummaryInfo addNumOfErrorsItem(Integer numOfErrorsItem) {
    if (this.numOfErrors == null) {
      this.numOfErrors = new ArrayList<Integer>();
    }
    this.numOfErrors.add(numOfErrorsItem);
    return this;
  }

   /**
   * Get numOfErrors
   * @return numOfErrors
  **/
  @Schema(description = "")
  public List<Integer> getNumOfErrors() {
    return numOfErrors;
  }

  public void setNumOfErrors(List<Integer> numOfErrors) {
    this.numOfErrors = numOfErrors;
  }

  public ExecutionSummaryInfo deployments(List<Integer> deployments) {
    this.deployments = deployments;
    return this;
  }

  public ExecutionSummaryInfo addDeploymentsItem(Integer deploymentsItem) {
    if (this.deployments == null) {
      this.deployments = new ArrayList<Integer>();
    }
    this.deployments.add(deploymentsItem);
    return this;
  }

   /**
   * Get deployments
   * @return deployments
  **/
  @Schema(description = "")
  public List<Integer> getDeployments() {
    return deployments;
  }

  public void setDeployments(List<Integer> deployments) {
    this.deployments = deployments;
  }

  public ExecutionSummaryInfo lastExecutionTs(Long lastExecutionTs) {
    this.lastExecutionTs = lastExecutionTs;
    return this;
  }

   /**
   * Get lastExecutionTs
   * @return lastExecutionTs
  **/
  @Schema(description = "")
  public Long getLastExecutionTs() {
    return lastExecutionTs;
  }

  public void setLastExecutionTs(Long lastExecutionTs) {
    this.lastExecutionTs = lastExecutionTs;
  }

  public ExecutionSummaryInfo lastExecutionStatus(LastExecutionStatusEnum lastExecutionStatus) {
    this.lastExecutionStatus = lastExecutionStatus;
    return this;
  }

   /**
   * This is the Execution Status of the entity
   * @return lastExecutionStatus
  **/
  @Schema(description = "This is the Execution Status of the entity")
  public LastExecutionStatusEnum getLastExecutionStatus() {
    return lastExecutionStatus;
  }

  public void setLastExecutionStatus(LastExecutionStatusEnum lastExecutionStatus) {
    this.lastExecutionStatus = lastExecutionStatus;
  }

  public ExecutionSummaryInfo lastExecutionId(String lastExecutionId) {
    this.lastExecutionId = lastExecutionId;
    return this;
  }

   /**
   * Get lastExecutionId
   * @return lastExecutionId
  **/
  @Schema(description = "")
  public String getLastExecutionId() {
    return lastExecutionId;
  }

  public void setLastExecutionId(String lastExecutionId) {
    this.lastExecutionId = lastExecutionId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExecutionSummaryInfo executionSummaryInfo = (ExecutionSummaryInfo) o;
    return Objects.equals(this.numOfErrors, executionSummaryInfo.numOfErrors) &&
        Objects.equals(this.deployments, executionSummaryInfo.deployments) &&
        Objects.equals(this.lastExecutionTs, executionSummaryInfo.lastExecutionTs) &&
        Objects.equals(this.lastExecutionStatus, executionSummaryInfo.lastExecutionStatus) &&
        Objects.equals(this.lastExecutionId, executionSummaryInfo.lastExecutionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(numOfErrors, deployments, lastExecutionTs, lastExecutionStatus, lastExecutionId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExecutionSummaryInfo {\n");
    
    sb.append("    numOfErrors: ").append(toIndentedString(numOfErrors)).append("\n");
    sb.append("    deployments: ").append(toIndentedString(deployments)).append("\n");
    sb.append("    lastExecutionTs: ").append(toIndentedString(lastExecutionTs)).append("\n");
    sb.append("    lastExecutionStatus: ").append(toIndentedString(lastExecutionStatus)).append("\n");
    sb.append("    lastExecutionId: ").append(toIndentedString(lastExecutionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

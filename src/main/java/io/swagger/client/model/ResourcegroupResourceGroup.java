/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ResourceSelector;
import io.swagger.client.model.Scope;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * Contains information of Resource Group
 */
@Schema(description = "Contains information of Resource Group")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class ResourcegroupResourceGroup {
  @SerializedName("accountIdentifier")
  private String accountIdentifier = null;

  @SerializedName("orgIdentifier")
  private String orgIdentifier = null;

  @SerializedName("projectIdentifier")
  private String projectIdentifier = null;

  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("resourceSelectors")
  private List<ResourceSelector> resourceSelectors = null;

  @SerializedName("fullScopeSelected")
  private Boolean fullScopeSelected = null;

  @SerializedName("tags")
  private Map<String, String> tags = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("allowedScopeLevels")
  private List<String> allowedScopeLevels = null;

  @SerializedName("color")
  private String color = null;

  @SerializedName("scope")
  private Scope scope = null;

  public ResourcegroupResourceGroup accountIdentifier(String accountIdentifier) {
    this.accountIdentifier = accountIdentifier;
    return this;
  }

   /**
   * Get accountIdentifier
   * @return accountIdentifier
  **/
  @Schema(required = true, description = "")
  public String getAccountIdentifier() {
    return accountIdentifier;
  }

  public void setAccountIdentifier(String accountIdentifier) {
    this.accountIdentifier = accountIdentifier;
  }

  public ResourcegroupResourceGroup orgIdentifier(String orgIdentifier) {
    this.orgIdentifier = orgIdentifier;
    return this;
  }

   /**
   * Get orgIdentifier
   * @return orgIdentifier
  **/
  @Schema(description = "")
  public String getOrgIdentifier() {
    return orgIdentifier;
  }

  public void setOrgIdentifier(String orgIdentifier) {
    this.orgIdentifier = orgIdentifier;
  }

  public ResourcegroupResourceGroup projectIdentifier(String projectIdentifier) {
    this.projectIdentifier = projectIdentifier;
    return this;
  }

   /**
   * Get projectIdentifier
   * @return projectIdentifier
  **/
  @Schema(description = "")
  public String getProjectIdentifier() {
    return projectIdentifier;
  }

  public void setProjectIdentifier(String projectIdentifier) {
    this.projectIdentifier = projectIdentifier;
  }

  public ResourcegroupResourceGroup identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @Schema(required = true, description = "")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public ResourcegroupResourceGroup name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ResourcegroupResourceGroup resourceSelectors(List<ResourceSelector> resourceSelectors) {
    this.resourceSelectors = resourceSelectors;
    return this;
  }

  public ResourcegroupResourceGroup addResourceSelectorsItem(ResourceSelector resourceSelectorsItem) {
    if (this.resourceSelectors == null) {
      this.resourceSelectors = new ArrayList<ResourceSelector>();
    }
    this.resourceSelectors.add(resourceSelectorsItem);
    return this;
  }

   /**
   * Get resourceSelectors
   * @return resourceSelectors
  **/
  @Schema(description = "")
  public List<ResourceSelector> getResourceSelectors() {
    return resourceSelectors;
  }

  public void setResourceSelectors(List<ResourceSelector> resourceSelectors) {
    this.resourceSelectors = resourceSelectors;
  }

  public ResourcegroupResourceGroup fullScopeSelected(Boolean fullScopeSelected) {
    this.fullScopeSelected = fullScopeSelected;
    return this;
  }

   /**
   * Get fullScopeSelected
   * @return fullScopeSelected
  **/
  @Schema(description = "")
  public Boolean isFullScopeSelected() {
    return fullScopeSelected;
  }

  public void setFullScopeSelected(Boolean fullScopeSelected) {
    this.fullScopeSelected = fullScopeSelected;
  }

  public ResourcegroupResourceGroup tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public ResourcegroupResourceGroup putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<String, String>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }

  public ResourcegroupResourceGroup description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ResourcegroupResourceGroup allowedScopeLevels(List<String> allowedScopeLevels) {
    this.allowedScopeLevels = allowedScopeLevels;
    return this;
  }

  public ResourcegroupResourceGroup addAllowedScopeLevelsItem(String allowedScopeLevelsItem) {
    if (this.allowedScopeLevels == null) {
      this.allowedScopeLevels = new ArrayList<String>();
    }
    this.allowedScopeLevels.add(allowedScopeLevelsItem);
    return this;
  }

   /**
   * Get allowedScopeLevels
   * @return allowedScopeLevels
  **/
  @Schema(description = "")
  public List<String> getAllowedScopeLevels() {
    return allowedScopeLevels;
  }

  public void setAllowedScopeLevels(List<String> allowedScopeLevels) {
    this.allowedScopeLevels = allowedScopeLevels;
  }

  public ResourcegroupResourceGroup color(String color) {
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @Schema(description = "")
  public String getColor() {
    return color;
  }

  public void setColor(String color) {
    this.color = color;
  }

  public ResourcegroupResourceGroup scope(Scope scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @Schema(description = "")
  public Scope getScope() {
    return scope;
  }

  public void setScope(Scope scope) {
    this.scope = scope;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourcegroupResourceGroup resourcegroupResourceGroup = (ResourcegroupResourceGroup) o;
    return Objects.equals(this.accountIdentifier, resourcegroupResourceGroup.accountIdentifier) &&
        Objects.equals(this.orgIdentifier, resourcegroupResourceGroup.orgIdentifier) &&
        Objects.equals(this.projectIdentifier, resourcegroupResourceGroup.projectIdentifier) &&
        Objects.equals(this.identifier, resourcegroupResourceGroup.identifier) &&
        Objects.equals(this.name, resourcegroupResourceGroup.name) &&
        Objects.equals(this.resourceSelectors, resourcegroupResourceGroup.resourceSelectors) &&
        Objects.equals(this.fullScopeSelected, resourcegroupResourceGroup.fullScopeSelected) &&
        Objects.equals(this.tags, resourcegroupResourceGroup.tags) &&
        Objects.equals(this.description, resourcegroupResourceGroup.description) &&
        Objects.equals(this.allowedScopeLevels, resourcegroupResourceGroup.allowedScopeLevels) &&
        Objects.equals(this.color, resourcegroupResourceGroup.color) &&
        Objects.equals(this.scope, resourcegroupResourceGroup.scope);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountIdentifier, orgIdentifier, projectIdentifier, identifier, name, resourceSelectors, fullScopeSelected, tags, description, allowedScopeLevels, color, scope);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourcegroupResourceGroup {\n");
    
    sb.append("    accountIdentifier: ").append(toIndentedString(accountIdentifier)).append("\n");
    sb.append("    orgIdentifier: ").append(toIndentedString(orgIdentifier)).append("\n");
    sb.append("    projectIdentifier: ").append(toIndentedString(projectIdentifier)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    resourceSelectors: ").append(toIndentedString(resourceSelectors)).append("\n");
    sb.append("    fullScopeSelected: ").append(toIndentedString(fullScopeSelected)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    allowedScopeLevels: ").append(toIndentedString(allowedScopeLevels)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

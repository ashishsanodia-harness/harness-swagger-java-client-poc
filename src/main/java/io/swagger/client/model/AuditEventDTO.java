/*
 * CD NextGen API Reference
 * This is the Open Api Spec 3 for the NextGen Manager. This is under active development. Beware of the breaking change with respect to the generated code stub  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 3.0
 * Contact: contact@harness.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AuditEventData;
import io.swagger.client.model.AuthenticationInfoDTO;
import io.swagger.client.model.Environment;
import io.swagger.client.model.HttpRequestInfo;
import io.swagger.client.model.RequestMetadata;
import io.swagger.client.model.Resource;
import io.swagger.client.model.ResourcegroupResourceScope;
import io.swagger.client.model.YamlDiffRecordDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * AuditEventDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-16T23:54:49.094+05:30[Asia/Kolkata]")
public class AuditEventDTO {
  @SerializedName("auditId")
  private String auditId = null;

  @SerializedName("insertId")
  private String insertId = null;

  @SerializedName("resourceScope")
  private ResourcegroupResourceScope resourceScope = null;

  @SerializedName("httpRequestInfo")
  private HttpRequestInfo httpRequestInfo = null;

  @SerializedName("requestMetadata")
  private RequestMetadata requestMetadata = null;

  @SerializedName("timestamp")
  private Long timestamp = null;

  @SerializedName("authenticationInfo")
  private AuthenticationInfoDTO authenticationInfo = null;

  /**
   * Gets or Sets module
   */
  @JsonAdapter(ModuleEnum.Adapter.class)
  public enum ModuleEnum {
    CD("CD"),
    CI("CI"),
    CV("CV"),
    CF("CF"),
    CE("CE"),
    CORE("CORE"),
    PMS("PMS"),
    TEMPLATESERVICE("TEMPLATESERVICE");

    private String value;

    ModuleEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ModuleEnum fromValue(String input) {
      for (ModuleEnum b : ModuleEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ModuleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ModuleEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ModuleEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ModuleEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("module")
  private ModuleEnum module = null;

  @SerializedName("environment")
  private Environment environment = null;

  @SerializedName("resource")
  private Resource resource = null;

  @SerializedName("yamlDiffRecord")
  private YamlDiffRecordDTO yamlDiffRecord = null;

  /**
   * Gets or Sets action
   */
  @JsonAdapter(ActionEnum.Adapter.class)
  public enum ActionEnum {
    CREATE("CREATE"),
    UPDATE("UPDATE"),
    RESTORE("RESTORE"),
    DELETE("DELETE"),
    UPSERT("UPSERT"),
    INVITE("INVITE"),
    RESEND_INVITE("RESEND_INVITE"),
    REVOKE_INVITE("REVOKE_INVITE"),
    ADD_COLLABORATOR("ADD_COLLABORATOR"),
    REMOVE_COLLABORATOR("REMOVE_COLLABORATOR"),
    REVOKE_TOKEN("REVOKE_TOKEN"),
    LOGIN("LOGIN"),
    LOGIN2FA("LOGIN2FA"),
    UNSUCCESSFUL_LOGIN("UNSUCCESSFUL_LOGIN"),
    ADD_MEMBERSHIP("ADD_MEMBERSHIP"),
    REMOVE_MEMBERSHIP("REMOVE_MEMBERSHIP");

    private String value;

    ActionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ActionEnum fromValue(String input) {
      for (ActionEnum b : ActionEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ActionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ActionEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ActionEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ActionEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("action")
  private ActionEnum action = null;

  @SerializedName("auditEventData")
  private AuditEventData auditEventData = null;

  @SerializedName("internalInfo")
  private Map<String, String> internalInfo = null;

  public AuditEventDTO auditId(String auditId) {
    this.auditId = auditId;
    return this;
  }

   /**
   * Get auditId
   * @return auditId
  **/
  @Schema(description = "")
  public String getAuditId() {
    return auditId;
  }

  public void setAuditId(String auditId) {
    this.auditId = auditId;
  }

  public AuditEventDTO insertId(String insertId) {
    this.insertId = insertId;
    return this;
  }

   /**
   * Get insertId
   * @return insertId
  **/
  @Schema(required = true, description = "")
  public String getInsertId() {
    return insertId;
  }

  public void setInsertId(String insertId) {
    this.insertId = insertId;
  }

  public AuditEventDTO resourceScope(ResourcegroupResourceScope resourceScope) {
    this.resourceScope = resourceScope;
    return this;
  }

   /**
   * Get resourceScope
   * @return resourceScope
  **/
  @Schema(required = true, description = "")
  public ResourcegroupResourceScope getResourceScope() {
    return resourceScope;
  }

  public void setResourceScope(ResourcegroupResourceScope resourceScope) {
    this.resourceScope = resourceScope;
  }

  public AuditEventDTO httpRequestInfo(HttpRequestInfo httpRequestInfo) {
    this.httpRequestInfo = httpRequestInfo;
    return this;
  }

   /**
   * Get httpRequestInfo
   * @return httpRequestInfo
  **/
  @Schema(description = "")
  public HttpRequestInfo getHttpRequestInfo() {
    return httpRequestInfo;
  }

  public void setHttpRequestInfo(HttpRequestInfo httpRequestInfo) {
    this.httpRequestInfo = httpRequestInfo;
  }

  public AuditEventDTO requestMetadata(RequestMetadata requestMetadata) {
    this.requestMetadata = requestMetadata;
    return this;
  }

   /**
   * Get requestMetadata
   * @return requestMetadata
  **/
  @Schema(description = "")
  public RequestMetadata getRequestMetadata() {
    return requestMetadata;
  }

  public void setRequestMetadata(RequestMetadata requestMetadata) {
    this.requestMetadata = requestMetadata;
  }

  public AuditEventDTO timestamp(Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @Schema(required = true, description = "")
  public Long getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }

  public AuditEventDTO authenticationInfo(AuthenticationInfoDTO authenticationInfo) {
    this.authenticationInfo = authenticationInfo;
    return this;
  }

   /**
   * Get authenticationInfo
   * @return authenticationInfo
  **/
  @Schema(required = true, description = "")
  public AuthenticationInfoDTO getAuthenticationInfo() {
    return authenticationInfo;
  }

  public void setAuthenticationInfo(AuthenticationInfoDTO authenticationInfo) {
    this.authenticationInfo = authenticationInfo;
  }

  public AuditEventDTO module(ModuleEnum module) {
    this.module = module;
    return this;
  }

   /**
   * Get module
   * @return module
  **/
  @Schema(required = true, description = "")
  public ModuleEnum getModule() {
    return module;
  }

  public void setModule(ModuleEnum module) {
    this.module = module;
  }

  public AuditEventDTO environment(Environment environment) {
    this.environment = environment;
    return this;
  }

   /**
   * Get environment
   * @return environment
  **/
  @Schema(description = "")
  public Environment getEnvironment() {
    return environment;
  }

  public void setEnvironment(Environment environment) {
    this.environment = environment;
  }

  public AuditEventDTO resource(Resource resource) {
    this.resource = resource;
    return this;
  }

   /**
   * Get resource
   * @return resource
  **/
  @Schema(required = true, description = "")
  public Resource getResource() {
    return resource;
  }

  public void setResource(Resource resource) {
    this.resource = resource;
  }

  public AuditEventDTO yamlDiffRecord(YamlDiffRecordDTO yamlDiffRecord) {
    this.yamlDiffRecord = yamlDiffRecord;
    return this;
  }

   /**
   * Get yamlDiffRecord
   * @return yamlDiffRecord
  **/
  @Schema(description = "")
  public YamlDiffRecordDTO getYamlDiffRecord() {
    return yamlDiffRecord;
  }

  public void setYamlDiffRecord(YamlDiffRecordDTO yamlDiffRecord) {
    this.yamlDiffRecord = yamlDiffRecord;
  }

  public AuditEventDTO action(ActionEnum action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @Schema(required = true, description = "")
  public ActionEnum getAction() {
    return action;
  }

  public void setAction(ActionEnum action) {
    this.action = action;
  }

  public AuditEventDTO auditEventData(AuditEventData auditEventData) {
    this.auditEventData = auditEventData;
    return this;
  }

   /**
   * Get auditEventData
   * @return auditEventData
  **/
  @Schema(description = "")
  public AuditEventData getAuditEventData() {
    return auditEventData;
  }

  public void setAuditEventData(AuditEventData auditEventData) {
    this.auditEventData = auditEventData;
  }

  public AuditEventDTO internalInfo(Map<String, String> internalInfo) {
    this.internalInfo = internalInfo;
    return this;
  }

  public AuditEventDTO putInternalInfoItem(String key, String internalInfoItem) {
    if (this.internalInfo == null) {
      this.internalInfo = new HashMap<String, String>();
    }
    this.internalInfo.put(key, internalInfoItem);
    return this;
  }

   /**
   * Get internalInfo
   * @return internalInfo
  **/
  @Schema(description = "")
  public Map<String, String> getInternalInfo() {
    return internalInfo;
  }

  public void setInternalInfo(Map<String, String> internalInfo) {
    this.internalInfo = internalInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuditEventDTO auditEventDTO = (AuditEventDTO) o;
    return Objects.equals(this.auditId, auditEventDTO.auditId) &&
        Objects.equals(this.insertId, auditEventDTO.insertId) &&
        Objects.equals(this.resourceScope, auditEventDTO.resourceScope) &&
        Objects.equals(this.httpRequestInfo, auditEventDTO.httpRequestInfo) &&
        Objects.equals(this.requestMetadata, auditEventDTO.requestMetadata) &&
        Objects.equals(this.timestamp, auditEventDTO.timestamp) &&
        Objects.equals(this.authenticationInfo, auditEventDTO.authenticationInfo) &&
        Objects.equals(this.module, auditEventDTO.module) &&
        Objects.equals(this.environment, auditEventDTO.environment) &&
        Objects.equals(this.resource, auditEventDTO.resource) &&
        Objects.equals(this.yamlDiffRecord, auditEventDTO.yamlDiffRecord) &&
        Objects.equals(this.action, auditEventDTO.action) &&
        Objects.equals(this.auditEventData, auditEventDTO.auditEventData) &&
        Objects.equals(this.internalInfo, auditEventDTO.internalInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(auditId, insertId, resourceScope, httpRequestInfo, requestMetadata, timestamp, authenticationInfo, module, environment, resource, yamlDiffRecord, action, auditEventData, internalInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuditEventDTO {\n");
    
    sb.append("    auditId: ").append(toIndentedString(auditId)).append("\n");
    sb.append("    insertId: ").append(toIndentedString(insertId)).append("\n");
    sb.append("    resourceScope: ").append(toIndentedString(resourceScope)).append("\n");
    sb.append("    httpRequestInfo: ").append(toIndentedString(httpRequestInfo)).append("\n");
    sb.append("    requestMetadata: ").append(toIndentedString(requestMetadata)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    authenticationInfo: ").append(toIndentedString(authenticationInfo)).append("\n");
    sb.append("    module: ").append(toIndentedString(module)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    yamlDiffRecord: ").append(toIndentedString(yamlDiffRecord)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    auditEventData: ").append(toIndentedString(auditEventData)).append("\n");
    sb.append("    internalInfo: ").append(toIndentedString(internalInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
